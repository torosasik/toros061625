<style>
  .collapsible-section {
    margin-bottom: 10px;
  }
  .collapsible-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    padding: 10px;
    border-radius: 5px;
  }
  .collapsible-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
  }
  .collapsible-content.open {
    max-height: 1000px; /* Adjust this value based on your content */
    transition: max-height 0.5s ease-in;
  }
  .toggle-icon {
    width: 20px;
    height: 20px;
    transition: transform 0.3s;
  }
  .toggle-icon.open {
    transform: rotate(180deg);
  }

  .mobile-filter-header {
    display: none; /* Hide by default */
  }

  @media screen and (max-width: 767px) {
    .mobile-filter-container {
      margin-bottom: 20px;
    }
    .mobile-filter-header {
      display: flex; /* Show on mobile */
      justify-content: space-between;
      align-items: center;
      padding: 10px;
      background-color: #f0f0f0;
      cursor: pointer;
    }
    .mobile-filter-content {
      display: none;
    }
    .mobile-filter-content.open {
      display: block;
    }
    .mobile-toggle-icon {
      width: 20px;
      height: 20px;
      transition: transform 0.3s;
    }
    .mobile-toggle-icon.open {
      transform: rotate(180deg);
    }
  }
</style>
{% if template.name contains 'collection' %}
  {% if collection.products_count == 0 %}
    <style>
      .col-span-1.filter-aside\:md\:hidden {
        max-width: 25%;
      }
    </style>
  {% endif %}
{% endif %}

{% if template contains 'collection' and collection.all_tags.size > 0 %}
  {% assign c = 0 %}
  {% assign cat = '' %}
  {% for t in collection.all_tags %}
    {% if t contains '_' %}
      {% assign cat_grp = t | split: '_' %}
      {% assign temp_cat = cat_grp.first %}
      {% unless cat contains temp_cat %}
        {% assign cat = cat | append: temp_cat | append: '+' %}
        {% assign c = c | plus: 1 %}
      {% endunless %}
    {% endif %}
  {% endfor %}
  {% assign cat_array = cat | split: '+' %}
{% endif %}

<div class="mobile-filter-container">
  <div class="mobile-filter-header">
    <h5>Filters</h5>
    <svg class="mobile-toggle-icon" viewBox="0 0 24 24">
      <path d="M7 10l5 5 5-5z"/>
    </svg>
  </div>
  <div class="mobile-filter-content">
    {% if settings.collection_sidebar_filters == 'groups' %}
      {% if collection.all_tags.size > 0 %}
        {% assign category_order = section.settings.filter_alignment | split: ',' %}

        <div class="grid-uniform">
          {% for ordered_cat in category_order %}
            {% for cat_item in cat_array %}
              {% if cat_item == ordered_cat %}
                {% assign selected_tags_for_category = '' | split: ',' %}
                {% for tag in current_tags %}
                  {% if tag contains cat_item %}
                    {% assign selected_tags_for_category = selected_tags_for_category | push: tag %}
                  {% endif %}
                {% endfor %}

                {% capture li_items %}
                  {% for custom_tag in collection.all_tags %}
                    {% if custom_tag contains cat_item %}
                      {% assign tag_without_category = custom_tag | remove_first: cat_item | remove: '_' %}
                      {% if selected_tags_for_category contains custom_tag %}
                        <li class="advanced-filter active-filter" data-group="{{ cat_item }}" data-handle="{{ custom_tag | handleize }}">
                          {{ tag_without_category | link_to_remove_tag: custom_tag | replace: 'title', 'alt' }}
                        </li>
                      {% else %}
                        <li class="advanced-filter" data-group="{{ cat_item }}" data-handle="{{ custom_tag | handleize }}" title="{{ tag_without_category }}">
                          {{ tag_without_category | link_to_add_tag: custom_tag | replace: 'title', 'alt' }}
                        </li>
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                {% endcapture %}

                {% if li_items != blank %}
                  <div class="grid-items small--one-half medium--one-third collapsible-section">
                    <div class="collapsible-header">
                      <h5>{{ cat_item | replace: 'TYPE', 'MARBLE TYPE' }}</h5>
                      <svg class="toggle-icon" viewBox="0 0 24 24">
                        <path d="M7 10l5 5 5-5z"/>
                      </svg>
                    </div>
                    <div class="collapsible-content">
                      <ul class="advanced-filters">
                        {{ li_items }}
                      </ul>
                    </div>
                  </div>
                {% endif %}
              {% endif %}
            {% endfor %}
          {% endfor %}
        </div>
      {% endif %}
    {% else %}
      <div class="collapsible-section">
        <div class="collapsible-header active">
          <h5>Shop By</h5>
          <svg class="toggle-icon open" viewBox="0 0 24 24">
            <path d="M7 10l5 5 5-5z"/>
          </svg>
        </div>
        <div class="collapsible-content open">
          {% if template contains 'collection' and collection.all_tags.size > 0 %}
            <ul>
              {% if current_tags %}
                <li class="active-filter">
                  {% if collection.handle %}
                    <a href="/collections/{{ collection.handle }}">
                      All
                      {% unless collection.title == 'Products' %}
                        {{ collection.title }}
                      {% endunless %}
                    </a>
                  {% elsif collection.current_type %}
                    <a href="{{ collection.current_type | url_for_type }}">All {{ collection.title }}</a>
                  {% elsif collection.current_vendor %}
                    <a href="{{ collection.current_vendor | url_for_vendor }}">All {{ collection.title }}</a>
                  {% endif %}
                </li>
              {% endif %}

              {% for tag in collection.all_tags %}
                {% assign is_advanced_tag = false %}
                {% for cat_item in cat_array %}
                  {% unless cat_item == '' %}
                    {% if tag contains cat_item %}
                      {% assign is_advanced_tag = true %}
                      {% if current_tags contains tag %}
                        <li class="active-filter">{{ tag | remove: cat_item | remove: '_' }}</li>
                      {% else %}
                        <li>{{ tag | remove: cat_item | remove: '_' | link_to_add_tag: tag }}</li>
                      {% endif %}
                    {% endif %}
                  {% endunless %}
                {% endfor %}

                {% if is_advanced_tag == false %}
                  {% if current_tags contains tag %}
                    <li class="active-filter">{{ tag }}</li>
                  {% else %}
                    <li>{{ tag | link_to_add_tag: tag }}</li>
                  {% endif %}
                {% endif %}
              {% endfor %}
            </ul>
          {% else %}
            <p>Add tags to your products for this list to build itself.</p>
          {% endif %}
        </div>
      </div>
    {% endif %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var collapsibleHeaders = document.querySelectorAll('.collapsible-header');

    collapsibleHeaders.forEach(function(header, index) {
      var content = header.nextElementSibling;
      var icon = header.querySelector('.toggle-icon');
      var storageKey = 'dropdown_' + index;

      if (localStorage.getItem(storageKey) === 'open') {
        header.classList.add('active');
        content.classList.add('open');
        icon.classList.add('open');
        content.style.maxHeight = content.scrollHeight + 'px';
      }

      header.addEventListener('click', function() {
        this.classList.toggle('active');
        content.classList.toggle('open');
        icon.classList.toggle('open');

        if (content.classList.contains('open')) {
          content.style.maxHeight = content.scrollHeight + 'px';
          localStorage.setItem(storageKey, 'open');
        } else {
          content.style.maxHeight = null;
          localStorage.removeItem(storageKey);
        }
      });
    });

    var advancedFilters = document.querySelectorAll('.advanced-filter');

    advancedFilters.forEach(function(filter) {
      filter.addEventListener('click', function(event) {
        event.preventDefault();

        var group = this.getAttribute('data-group');
        var groupFilters = document.querySelectorAll('.advanced-filter[data-group="' + group + '"]');
        groupFilters.forEach(function(groupFilter) {
          groupFilter.classList.remove('active-filter');
        });

        this.classList.add('active-filter');

        var filterUrl = this.querySelector('a').getAttribute('href');
        window.location.href = filterUrl;
      });
    });

    var mobileFilterHeader = document.querySelector('.mobile-filter-header');
    var mobileFilterContent = document.querySelector('.mobile-filter-content');
    var mobileToggleIcon = document.querySelector('.mobile-toggle-icon');

    function handleMobileFilter() {
      if (window.innerWidth <= 767) {
        mobileFilterContent.style.display = 'none';
        mobileFilterHeader.style.display = 'flex';

        if (mobileFilterHeader) {
          mobileFilterHeader.addEventListener('click', function() {
            var isOpen = mobileFilterContent.style.display === 'block';
            mobileFilterContent.style.display = isOpen ? 'none' : 'block';
            mobileToggleIcon.classList.toggle('open');
            localStorage.setItem('mobile_filter_open', isOpen ? 'false' : 'true');
          });
        }

        if (localStorage.getItem('mobile_filter_open') === 'true') {
          mobileFilterContent.style.display = 'block';
          mobileToggleIcon.classList.add('open');
        }
      } else {
        mobileFilterContent.style.display = 'block';
        mobileFilterHeader.style.display = 'none';
      }
    }

    handleMobileFilter();

    window.addEventListener('resize', handleMobileFilter);
  });
</script>

{%- comment -%}
  This file has been modified by the Yoast SEO for Shopify app.
  You can learn more about this (and learn how to cleanly revert these changes) at https://yoa.st/removing-theme-changes.
{%- endcomment -%}
{% comment %}
  Renders product detail

  Accepts:
  - product: {Object} Product Liquid object (optional)
  - is_product_page: {Boolean} is main-product section. Default: false (optional)
  - lazy_load: {Boolean} Image should be lazy loaded. Default: true (optional)
  - enable_sticky_image: {Boolean} Sticky content when scroll down. Default: true (optional)
  - full_width: {Boolean} Visible full width
  - media_layout: {String} Product media layout type. Values are 'thumbnail_slider', 'stacked', '2_columns'
  - show_thumbnail_desktop: {Boolean} Show thumnail on desktop
  - show_thumbnail_mobile: {Boolean} Show thumnail on mobile
  - show_arrow_button: {Boolean} Show next/previous slider on desktop
  - mobile_media_full: {Boolean} Is media visible full with in mobile
  - featured_product: {Boolean} Is Featured product
  - quick-view: {Boolean} is Quick view
  Usage:
  {% render 'product-template', lazy_load: false %}
{% endcomment %}

{%- liquid

  assign btn_addtocart = false
  assign blocktype = section.blocks | map: 'type' | uniq
  if blocktype contains 'buy_buttons'
    assign btn_addtocart = true
  endif

  assign unavailable_text = 'products.product.unavailable' | t
  assign product_form_id = 'product-form-' | append: section.id

  assign rounded_corner_image = false
  if settings.edges_type == 'rounded_corners'
    assign rounded_corner_image = true
  endif
  assign customize_picker_required = false
  assign type_file_upload = false
  for block in section.blocks
    if block.type == 'buy_buttons'
      if block.settings.preorder_show == 'yes' or block.settings.preorder_show == 'on_backordered' and product.selected_or_first_available_variant.inventory_policy == 'continue' and product.selected_or_first_available_variant.inventory_quantity < 1 and product.selected_or_first_available_variant.inventory_management != null
        assign can_show_preorder = true
      endif
    endif
    if block.type == 'sticky_add_to_cart'
      assign sticky_atc = true
    endif
    if block.type == 'customize_picker'
      if block.settings.required
        case block.settings.picker_type
          when 'single_text'
            assign customize_picker_required = true
          when 'multi_text'
            assign customize_picker_required = true
          when 'date'
            assign customize_picker_required = true
          when 'time'
            assign customize_picker_required = true
          when 'file_upload'
            assign customize_picker_required = true
            assign type_file_upload = true
        endcase
      endif
      if block.settings.picker_type == 'checkbox' and block.settings.minimum_select_value > 0
        assign customize_picker_required = true
      endif
    endif
  endfor

  if settings.lang_direction contains request.locale.iso_code
    assign class_rtl = 'rtl'
  else
    assign class_rtl = 'ltr'
  endif

  if section.settings.make_content_center
    assign show_content_center = true
  else
    assign show_content_center = false
  endif

  assign show_media_with_variant_selected = false
  if section.settings.option_to_classify_variant_media != blank and section.settings.show_media_with_variant_selected and product.has_only_default_variant == false
    for option in product.options_with_values
      if section.settings.option_to_classify_variant_media contains option.name and show_media_with_variant_selected == false
        assign media_with_option = option.name
        assign show_media_with_variant_selected = true
      endif
    endfor
  endif
-%}
{%- capture dataForCustomerEvent -%}
  {
    "product": {
      "id": {{ product.id | default: 0 }},
      "selected_variant_id": {{ product.selected_or_first_available_variant.id | default: 0 }},
      "has_only_default_variant": {{ product.has_only_default_variant }},
      "title": "{{ product.title | escape }}",
      "variant_title": "{{ product.selected_or_first_available_variant.title | escape }}",
      "sku": "{{ product.selected_or_first_available_variant.sku }}",
      "currencyCode": "{{ cart.currency.iso_code }}",
      "price": {{ product.selected_or_first_available_variant.price | default: 0 }},
      "vendor": "{{ product.vendor | escape }}",
      "category": "{{ collection.title | default: '' | escape }}"
    }
  }
{%- endcapture %}

{% render 'section-divider' %}
{% assign price_squared = product.price | divided_by: box_area | round: 2 %}
{% assign price_squared = price_squared | money %}
{% assign box_area = product.metafields.my_fields.box_area %}
{% assign box_area_clean = box_area | remove: " sq. ft." %}
{% assign tiles_per_box = product.metafields.my_fields.tiles_per_box %}
{% assign tile_size = box_area_clean | times: 1.0 | divided_by: tiles_per_box | round: 4 %}
        
  {% if product.variants.first.inventory_quantity > 0 and product.variants.first.inventory_management == 'shopify' %}
    {% assign max_qty = product.variants.first.inventory_quantity %}
    <script>
      console.log('available: {{ max_qty }}');
    </script>
  {% else %}
    {% assign max_qty = 10000 %}
    <script>
      console.log('available: {{ max_qty }}');
    </script>
  {% endif %}
        
<div
  id="x-product-template-{{ product.id }}-{{ section.id }}"
  class="x-product-{{ section.id }} w-full relative{% unless full_width and product != blank %} content-{{ section.id }}{% endunless %}"
  x-data="{ showStickyATC: false }"
  {% if product != blank %}
    x-intersect.once='$store.xProductRecently.setProduct("{{ product.id }}")'
  {% endif %}
>
  <div
    class="ltr flex relative flex-wrap{% if mobile_media_full %} full-width-mobile{% endif %}{% unless full_width or full_width_main_page %} page-width{% else %}{% unless featured_product %} full-width{% endunless %}{% endunless %}{% if section.settings.desktop_layout == "right" %} flex-row-reverse{% endif %} pb-[{{ section.settings.padding_bottom_mobile }}px] pt-[{{ section.settings.padding_top_mobile }}px] md:pb-[{{ section.settings.padding_bottom }}px] md:pt-[{{ section.settings.padding_top }}px]"
    {%- if product != blank -%}
      x-intersect.once='$store.xCustomerEvent.fire("product_viewed_custom", $el)'
      x-customer-event-data="{{ dataForCustomerEvent | escape }}"
    {%- endif -%}
  >
    {%- if product != blank -%}
      <div class="w-full relative quick-view:md:pb-0 quick-view:md:w-[45%] md:w-1/2 pb-7 md:pb-0{% if full_width %}{% unless mobile_media_full %} pr-5 pl-5{% endunless %} md:pl-12 md:pr-12 lg:pl-[84px] lg:pr-[84px]{% else %}{% if section.settings.desktop_layout == "right" %}{% if spacing_col == 'small' %} product-page:md:pl-5 product-page:lg:pl-8{% endif %} quick-view:md:pl-6 quick-view:md:pr-0{% else %}{% if spacing_col == 'small' %} product-page:md:pr-5 product-page:lg:pr-8{% endif %} quick-view:md:pr-6 quick-view:md:pl-0{% endif %}{% endif %}">
        {% assign media_with_option_handle = media_with_option | handle %}
        {%- render 'product-media-gallery',
          product: product,
          enable_sticky_image: enable_sticky_image,
          media_layout: media_layout,
          show_thumbnail_desktop: show_thumbnail_desktop,
          show_arrow_button: show_arrow_button,
          show_thumbnail_mobile: show_thumbnail_mobile,
          quick_view: quick_view,
          lazy_load: lazy_load,
          rounded_corner_image: rounded_corner_image,
          mobile_media_full: mobile_media_full,
          show_media_with_variant_selected: show_media_with_variant_selected,
          media_with_option: media_with_option_handle,
          show_first_image_avaiable: show_first_image_avaiable
        -%}
      </div>
      <div
        class="w-full relative quick-view:md:w-[55%] md:w-1/2{% if mobile_media_full %} pr-5 pl-5{% endif %}{% if full_width %} pl-5 pr-5 md:pr-0 md:pl-0{% else %} md:pl-0 md:pr-0{% endif %}{% if section.settings.desktop_layout == "right" %} flex product-page:md:justify-end{% endif %}{% if featured_product and full_width %} content-{{ section.id }} pt-8 pb-12 {{ class_padding_light }} {{ class_padding_dark }}{% else %} pt-3 md:pt-0 pb-0{% endif %}"
        {%- if section.settings.desktop_layout == 'right' -%}
          tabindex="0"
        {%- endif -%}
      >
        {%- if featured_product and full_width -%}
          <div
            class="content-{{ section.id }} hidden md:block absolute -z-10 top-0 bottom-0{% if section.settings.desktop_layout == "left" %} right-0{% else %} left-0{% endif %}"
          ></div>
        {%- endif -%}
        <div
          id="ProductInfo-{{ section.id }}"
          class="parent-element {% if settings.lang_direction contains request.locale.iso_code %}rtl {% endif %} product-info w-full pb-1{% if enable_sticky_image %} sticky top-20{% endif %}{% if section.settings.desktop_layout == "left" %} lg:pl-0 md:pr-5 2xl:pr-0 quick-view:md:pl-6 {% if spacing_col == 'small' %} product-page:md:pl-5 product-page:lg:pl-8{% else %} product-page:md:pl-12 product-page:lg:pl-[84px]{% endif %}{% if full_width %} lg:pr-5{% endif %}{% else %} lg:pr-0 md:pl-5 2xl:pl-0 quick-view:md:pr-6{% if spacing_col == 'small' %} product-page:md:pr-5 product-page:lg:pr-8{% else %} product-page:md:pr-12 product-page:lg:pr-[84px]{% endif %}{% if full_width %} lg:pl-5{% endif %}{% endif %} max-w-[{{ settings.page_width | divided_by: 2 | plus: 20 }}px]"
        >
          <div class="flex gap-x-2.5 flex-wrap">
            {%- if section.settings.show_vendor -%}
              <p class="{% if show_content_center %}text-center{% endif %} w-full mb-1 italic p-break-words">
                {{ product.vendor | escape }}
              </p>
            {%- endif -%}
            {%- if product.title != blank and section.settings.show_product_name -%}
              <{{ section.settings.heading_tag }} class="w-full {% if show_content_center %}text-center{% endif %} product-title h2 mb-3 leading-tight title-size--{{ section.id }}">
                {{- product.title | escape -}}
              </{{ section.settings.heading_tag }}>
            {%- endif -%}
            {%- for block in section.blocks -%}
              {%- case block.type -%}
                {%- when '@app' -%}
                  {% render block %}

                {% when 'calculator' %}
                  <style>
                    .product-grid-item,
                    .product-meta--review {
                      .spr-badge[data-rating="0.0"] {
                        display: none;
                      }
                    }

                    .calculator_wrapper {
                      display: flex;
                      flex-direction: row;
                      justify-content: flex-start;
                      margin-bottom: 10px;
                    }

                    .input_boxes {
                      text-align: center;
                      border: 1px solid #f5f5f5;
                      width: 100%;
                      max-width: 148px;
                    }

                    .input_boxes input {
                        margin-bottom: 0;
                        border: none;
                        text-align: center;
                        padding: 0px!important;
                        padding-top: 5px!important;
                    }

                    .calculator_container {
                      margin-bottom: 20px;
                      width:100%;
                    }

                    .open_calc_pop_up {
                      font-size: 12px;
                      font-weight: 600;
                      cursor: pointer;
                    }

                    .container_titles {
                        font-weight: 600;
                    }

                    .js-qty{
                      margin-bottom: 0;
                    }

                    .calc_pop_up {
                      position: fixed;
                      top: 0;
                      left: 0;
                      width: 100%;
                      background: #0000004a;
                      height: 100%;
                      display: none;
                      flex-direction: row;
                      align-items: center;
                      backdrop-filter: blur(10px);
                      justify-content: center;
                      transition: 0.4s;
                      z-index: 999;
                    }

                    .tile-calculator-wrapper {
                      background: #fff;
                      padding: 20px;
                      border: 1px solid #163155;
                      position: relative;
                      overflow-y: scroll;
                      max-height: 85%;
                      margin: 10px;
                    }

                    .close_calc_pop_up {
                      position: absolute;
                      right: 0;
                      top: 0;
                      padding: 12px;
                      font-weight: bold;
                      cursor: pointer;
                    }

                    .calc_pop_up-open {
                      display: flex;
                    }

                    .input-box {
                      text-align: center;
                      width: 100px;
                      border: 1px solid #656565;
                      margin-bottom: 10px;
                    }

                    .input-box input {
                      text-align: center;
                      border: none;
                      margin-bottom: 0px;
                    }

                    .line-separator {
                      text-align: center;
                      margin: 0px 0 30px;
                      border-bottom: 1px solid;
                    }

                    span.separator {
                      background: #fff;
                      padding: 10px;
                      position: relative;
                      top: 11px;
                      text-transform: uppercase;
                    }

                    .flex-box {
                      display: flex;
                      justify-content: space-evenly;
                      align-items: center;
                      position: relative;
                    }
                    .btn-calculator {
                      width: 100%;
                      background: #143055;
                      border: none;
                      padding: 10px;
                      margin: 20px 0;
                      color: #fff;
                      font-weight: 600;
                    }

                    .flex-box .input-box,
                    .flex-box .label {
                      width: 30%;
                    }

                    .tile-measuremts {
                      display: block;
                      font-size: 10px;
                      margin-top: 10px;
                      margin-bottom: 10px;
                    }

                    .tile-measuremts p {
                      margin: 0;
                    }

                    .box-half {
                      width: 49%!important;
                    }

                    .full-half {
                      width: 100%!important;
                    }

                    label.quantity-selector {
                      display: none!important;
                    }

                    .input_boxes .js-qty {
                      max-width: 100%;
                    }

                    .input_boxes .js--add,
                    .input_boxes .js--minus{
                      border: none!important;
                    }

                    .box_price {
                      font-size: 34px;
                      font-weight: 900;
                      color: #000;
                    }

                    .square_price {
                      font-weight: 900;
                      font-size: 18px;
                    }

                    .box_area{
                      font-size: 12px;
                      margin-left: 6px;
                      font-weight: 100;
                      color: #5c5c5c;
                    }

                    .smaller_text {
                      font-size: 13px;
                      font-weight: 100;
                    }

                    .calc_prices li {
                      margin: 0;
                    }

                    #overage {
                      width: 100%;
                      max-width: 100%!important;
                    }

                    .heading {
                      font-weight: 900;
                      font-size: 24px;
                      color: #143055 ;
                    }

                    .calculator-section h4,
                    .section-intro h4 {
                      color: #143055;
                    }

                    .small_text {
                      display: block;
                      font-size: 12px;
                      margin-bottom: 20px;
                    }

                    #overage {
                      margin-bottom: 5px;
                    }

                    .product-item--price .h1 {
                      display: flex;
                      margin-bottom: 15px;
                      flex-direction: row;
                      flex-wrap: wrap;
                    }

                    .product_page_total {
                      margin-top: 5px;
                      display: block;
                    }

                    .container_titles {
                      color: #143055;
                    }

                    #total_square {
                     margin-left: 5px;
                    }

                    .calculate_btn {
                      width: 50%;
                      margin: 0 auto;
                      display: block;
                      text-align: center;
                      margin-top: 10px;
                      background: #143055;
                      color: #fff;
                      padding: 5px;
                      font-weight: 700;
                      cursor: pointer;
                    }

                    #calculator-footage-section,
                    #calculator-dimensions-section{
                      transition: 0.4s;
                    }

                    .opacity_low {
                      opacity: .5;
                    }

                    .tile-calculator-wrapper{
                      scroll-behavior: smooth;
                    }
                    .calculator_wrapper .input_boxes input{
                      width:100%;
                    }
                    .calculator_wrapper .input_boxes input {
                      width: 100%;
                      padding: 10px;
                    }
                    .calculator_wrapper .input_boxes {
                      text-align: center;
                      border: 1px solid #f5f5f5;
                      width: 100%;
                      max-width: 148px;
                      padding: 1px;
                      margin-top: 10px;
                    }
                    #overage-selectors, 
                    #bottom-overage-selectors {
                        display: flex;
                        flex-wrap: wrap;
                        column-gap: 2rem;
                        row-gap: .5rem;
                        margin: .5rem 0;
                    }
                    #manualInputField,
                    #manualInputFieldBottom {
                        border: 1px solid #CCC;
                        padding: 4px;
                        width: 100px;
                        margin: 0 auto .5rem auto;
                    }
                  </style>
                  {% if product.tags contains 'Tile_calculator' %}
                    <div class="calculator_container">
                      <span class="calc_title">Quantity <a class="open_calc_pop_up">How much do I need?</a></span>
                      <div class="calculator_wrapper">
                        <div id="squared_size_wrapper" class="squared_size input_boxes">
                          <input type="text" class="squared_size" id="squared_size" placeholder="0" value="{{ box_area_clean }}">
                          <label class="container_titles">SQ. FT</label>
                        </div>
                        <div class="number_boxes input_boxes">
                          <label style="display: none;" for="quantity_look_alike" class="quantity-selector-fake"
                            >Quantity</label
                          >
                          <input
                            style="display:inline-block;"
                            type="text"
                            id="quantity_look_alike"
                            value="1"
                            min="1"
                            class="quantity-selector-fake"
                          >
                          <label style="display:none;" class="quantity-indicator-fake">
                            {% if product.metafields.sheetsqft.sheet_sqft_info != blank %}
                              {{ product.metafields.sheetsqft.sheet_sqft_info }}
                              <style>
                                .js-qty {
                                  display: inline-block;
                                }
                                .quantity-selector, .quantity-indicator {
                                  font-size: 15px;
                                  padding: 0 12px 0 4px;
                                }
                                .calculator_container {
                                  margin-bottom: 20px;
                                  width: 100%;
                                }
                              </style>
                            {% endif %}
                          </label>
                          <label class="container_titles box-label">
                            {% if product.metafields.measuringunitsatd.measuring_units_atd == "Box" %}
                              {{ product.metafields.measuringunitsatd.measuring_units_atd }}es
                            {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Sheet" %}
                              {{ product.metafields.measuringunitsatd.measuring_units_atd }}s
                            {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Piece" %}
                              {{ product.metafields.measuringunitsatd.measuring_units_atd }}s
                            {% else %}
                              {{ product.metafields.measuringunitsatd.measuring_units_atd }}
                            {% endif %}
                          </label>
                        </div>
                        <div style="display: none;" class="number_boxes input_boxes">
                          <label style="display: none;" for="quantity" class="quantity-selector">Quantity</label>
                          <input
                            style="display:inline-block;"
                            type="number"
                            id="quantity"
                            name="quantity"
                            value="1"
                            min="1"
                            class="quantity-selector"
                          >
                          <label style="display:none;" class="quantity-indicator">
                            {% if product.metafields.sheetsqft.sheet_sqft_info != blank %}
                              {{ product.metafields.sheetsqft.sheet_sqft_info }}
                              <style>
                                .js-qty {
                                  display: inline-block;
                                }
                                .quantity-selector, .quantity-indicator {
                                  font-size: 15px;
                                  padding: 0 12px 0 4px;
                                }
                              </style>
                            {% endif %}
                          </label>
                          <label class="container_titles box-label">{{ product.metafields.custom.measuring_units_atd }}</label>
                        </div>
                        <div id="squared_size_wrapper" class="squared_size input_boxes">
                          <span id="product_page_total" class="squared_size product_page_total"
                            >${{ product.price | divided_by: 100.00 }}
                          </span>
                          <label class="container_titles">Total Price</label>
                        </div>
                      </div>
                    </div>

                    <div class="calc_pop_up">
                      <div id="tile-calculator" class="tile-calculator-wrapper" style="display: block;">
                      <div class="productInfo-popup-close">
                          <svg viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="#000000">
                          <g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><line x1="16" y1="16" x2="48" y2="48"></line><line x1="48" y1="16" x2="16" y2="48"></line></g>
                          </svg>
                      </div>
                        <div class="heading">
                          <span>Tile Calculator</span>
                        </div>
                        <div class="tile-calculator-container active">
                          <div class="calculator-section footage" id="calculator-footage-section">
                            <div class="section-intro">
                              <h4>IF YOU KNOW THE SQ. FT. AREA YOU WANT TO COVER</h4>
                              <p>Calculate the number of tiles I need to order:</p>
                            </div>
                            <div class="flex-box">
                              <div class="input-box">
                                <input
                                  type="text"
                                  name="calculator_footage"
                                  id="calculator-footage"
                                  class="required-entry validate-digits"
                                  placeholder="0"
                                >
                                <span class="input-label">Sq. Ft.</span>
                              </div>
                            </div>
                            <h4>Get a little extra</h4>
                            
                            <div id="overage_top">
                              <div id="overage-selectors">
                              <label>
                                <input type="radio" name="properties[TOP-OVERAGE]" value="0.10" checked> 10%
                              </label>
                              <label>
                                <input type="radio" name="properties[TOP-OVERAGE]" value="0.15"> 15%
                              </label>
                              <label>
                                <input type="radio" name="properties[TOP-OVERAGE]" value="manual" id="manualInputRadio"> Manual Input
                              </label>
                              <label>
                                <input type="radio" name="properties[TOP-OVERAGE]" value="no_overage"> No Overage
                              </label>
                              </div>
                              <div id="top-manual-ovg" style="display: none;">
                                <input type="number" id="manualInputField" name="properties[OVERAGE_MANUAL]" placeholder="Enter %" step="1" min="0"> %
                              </div>
                            </div>
                            <script>
                              document.querySelectorAll('#overage_top input[name="properties[TOP-OVERAGE]"]').forEach(radio => {
                                radio.addEventListener('change', function () {
                                  const manualInputField = document.querySelector('#overage_top #top-manual-ovg');
                                  if (this.value === 'manual') {
                                    manualInputField.style.display = 'inline-block';
                                    manualInputField.focus();
                                  } else {
                                    manualInputField.style.display = 'none';
                                  }
                                });
                              });
                            </script>
                            
                            <span class="small_text"
                              >10% is the recommended minimum to cover cuts and future repairs</span
                            >
                            <a href="#bottom_pop_up" class="calculate_btn" id="calculate_top">Calculate</a>
                          </div>
                          <div class="calculator-section line-separator">
                            <span class="separator">Or</span>
                          </div>
                          <div class="calculator-section dimensions active" id="calculator-dimensions-section">
                            <div class="section-intro">
                              <h4>IF YOU KNOW THE SIZE OF AREA YOU WANT TO COVER</h4>
                              <p>Calculate the number of tiles I need to order:</p>
                            </div>
                            <div class="dimension-box length-value">
                              <div class="flex-box">
                                <label class="label">Length</label>
                                <div class="input-box ft" novalidate="novalidate">
                                  <input
                                    type="text"
                                    placeholder="0"
                                    name="calculator_length_ft"
                                    id="calculator-length-ft"
                                    class="if-disable validate-number"
                                  >
                                  <span class="input-label">Feet</span>
                                </div>
                                <div class="input-box in" novalidate="novalidate">
                                  <input
                                    type="text"
                                    placeholder="0"
                                    name="calculator_length_in"
                                    id="calculator-length-in"
                                    class="if-disable validate-number"
                                  >
                                  <span class="input-label">Inches</span>
                                </div>
                              </div>
                            </div>
                            <div class="dimension-box width-value">
                              <div class="flex-box">
                                <label class="label">Width</label>
                                <div class="input-box ft" novalidate="novalidate">
                                  <input
                                    type="text"
                                    placeholder="0"
                                    name="calculator_width_ft"
                                    id="calculator-width-ft"
                                    class="if-disable validate-number"
                                  >
                                  <span class="input-label">Feet</span>
                                </div>
                                <div class="input-box in" novalidate="novalidate">
                                  <input
                                    type="text"
                                    placeholder="0"
                                    name="calculator_width_in"
                                    id="calculator-width-in"
                                    class="if-disable validate-number"
                                  >
                                  <span class="input-label">Inches</span>
                                </div>
                              </div>
                            </div>
                            <h4>Get a little extra</h4>
                            <div id="overage_bottom">
                              <div id="bottom-overage-selectors">
                              <label>
                                <input type="radio" name="properties[BTM-OVERAGE]" value="0.10" checked> 10%
                              </label>
                              <label>
                                <input type="radio" name="properties[BTM-OVERAGE]" value="0.15"> 15%
                              </label>
                              <label>
                                <input type="radio" name="properties[BTM-OVERAGE]" value="manual" id="bottom-manualInputRadio"> Manual Input
                              </label>
                              <label>
                                <input type="radio" name="properties[BTM-OVERAGE]" value="no_overage"> No Overage
                              </label>
                              </div>
                              <div id="bottom-manual-ovg" style="display: none;">
                                <input type="number" id="manualInputFieldBottom" name="properties[OVERAGE_MANUAL]" placeholder="Enter %" step="1" min="0"> %
                              </div>
                            </div>
                            <script>
                              document.querySelectorAll('#overage_bottom input[name="properties[BTM-OVERAGE]"]').forEach(radio => {
                                radio.addEventListener('change', function () {
                                  const manualInputFieldBottom = document.querySelector('#overage_bottom #bottom-manual-ovg');
                                  if (this.value === 'manual') {
                                    manualInputFieldBottom.style.display = 'inline-block';
                                    manualInputFieldBottom.focus();
                                  } else {
                                    manualInputFieldBottom.style.display = 'none';
                                  }
                                });
                              });
                            </script>


                            
                            <span class="small_text"
                              >10% is the recommended minimum to cover cuts and future repairs</span
                            >
                            <a href="#bottom_pop_up" class="calculate_btn" id="calculate_bottom">Calculate</a>
                          </div>
                          <div class="footer_outcome">
                            <div class="calculator-section line-separator">
                              <span class="separator">Outcome</span>
                            </div>
                            <div class="flex-box">
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="solution"
                                  placeholder="0"
                                >
                                <span class="input-label">Sq. Ft.</span>
                              </div>
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="total_coverage"
                                  placeholder="0"
                                >
                                <span class="input-label">Total Coverage Sq. Ft.</span>
                              </div>
                            </div>
                            <div class="flex-box">
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="boxes"
                                  placeholder="0"
                                >
                                <span class="input-label">
                                  {% if product.metafields.measuringunitsatd.measuring_units_atd == "Box" %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}es
                                  {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Sheet" %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}s
                                  {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Piece" %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}s
                                  {% else %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}
                                  {% endif %}
                                </span>
                              </div>
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="total_cost"
                                  placeholder="0"
                                >
                                <span class="input-label">Total Cost</span>
                              </div>
                            </div>
                          </div>

                          <div class="calculator-section actions">
                            <button id="addToquanitity" class="btn-calculator">
                              <span id="addToCartquanitity">Add To Cart</span>
                            </button>
                          </div>
                        </div>
                        <div id="bottom_pop_up"></div>
                      </div>
                    </div>
                  {% endif %}

                  {% if product.tags contains "overage-popup-v3" %}
                  <style>
                    #ovg-popup {
                      position: fixed;
                      top: 0;
                      left: 0;
                      width: 100%;
                      background: rgba(0, 0, 0, 0.4);
                      height: 100%;
                      display: none;
                      flex-direction: row;
                      align-items: center;
                      backdrop-filter: blur(10px);
                      justify-content: center;
                      transition: 0.4s;
                      z-index: 999;
                      padding: 20px;
                    }
                    #ovg-popup-content {
                      background: #fff;
                      position: relative;
                      overflow-y: auto;
                      max-height: 85vh;
                      width: 100%;
                      max-width: 350px;
                      border-radius: 16px;
                      box-shadow: 0 4px 24px rgba(0, 0, 0, 0.12);
                      margin: 0 auto;
                      padding-bottom: 0;
                    }
                    #ovg-popup.ovg-popup-open {
                      display: flex;
                    }
                    #ovg-popup-close {
                        width: 32px;
                        height: 32px;
                        background-color: rgba(255, 255, 255, 0.2);
                        border-radius: 50%;
                        position: absolute;
                        right: 12px;
                        top: 12px;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        cursor: pointer;
                        transition: background-color 0.2s;
                        z-index: 10;
                    }
                    #ovg-popup-close:hover {
                        background-color: rgba(255, 255, 255, 0.3);
                    }
                    #ovg-popup-close svg {
                        width: 16px;
                        height: 16px;
                        stroke: #fff;
                        stroke-width: 2px;
                    }
                    
                    /* Header Section */
                    .ovg-header {
                        background: #0066CC;
                        padding: 16px 20px;
                        border-radius: 16px 16px 0 0;
                        text-align: center;
                        position: relative;
                    }
                    .ovg-header .heading {
                        font-size: 20px;
                        font-weight: bold;
                        color: #fff;
                        margin: 0 0 6px 0;
                    }
                    .ovg-header .section-intro p {
                        font-size: 13px;
                        color: rgba(255, 255, 255, 0.9);
                        margin: 0;
                        font-weight: 400;
                        white-space: nowrap;
                        overflow: hidden;
                        text-overflow: ellipsis;
                    }
                    
                    /* Content Section */
                    .ovg-content {
                        padding: 12px 16px 0;
                    }
                    
                    /* Input Section */
                    .ovg-input-section {
                        margin-bottom: 8px;
                        text-align: center;
                    }
                    .ovg-input-section .input-wrapper {
                        display: flex;
                        justify-content: center;
                        margin-bottom: 4px;
                    }
                    .ovg-input-section .input-box {
                        position: relative;
                        width: 100%;
                        max-width: 280px;
                    }
                    .ovg-input-section .input-box input {
                        width: 100%;
                        text-align: center;
                        border: none;
                        border-radius: 12px;
                        padding: 14px 12px;
                        font-size: 22px;
                        font-weight: 600;
                        background: #f9fafb;
                        outline: none;
                        transition: background-color 0.2s;
                        color: #374151;
                    }
                    .ovg-input-section .input-box input:focus {
                        background: #fff;
                        box-shadow: 0 0 0 2px #0066CC;
                    }
                    .ovg-input-section .input-label {
                        display: block;
                        font-size: 16px;
                        color: #000;
                        margin-top: 6px;
                        margin-bottom: 4px;
                        font-weight: 600;
                    }
                    
                    /* Overage Section */
                    .ovg-overage-section {
                        margin-bottom: 12px;
                    }
                    .ovg-overage-section h4 {
                        font-size: 18px;
                        font-weight: 700;
                        color: #000;
                        text-align: center;
                        margin: 0 0 12px 0;
                    }
                    #ovg-overage-selectors {
                        display: grid;
                        grid-template-columns: 1fr 1fr;
                        gap: 8px;
                        margin-bottom: 12px;
                    }
                    #ovg-overage-selectors label {
                        position: relative;
                        cursor: pointer;
                        margin: 0;
                    }
                    #ovg-overage-selectors input[type="radio"] {
                        position: absolute;
                        opacity: 0;
                        pointer-events: none;
                    }
                    #ovg-overage-selectors label {
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        padding: 10px 12px;
                        border: 2px solid #e5e7eb;
                        border-radius: 12px;
                        background: #fff;
                        color: #000;
                        font-weight: 600;
                        font-size: 15px;
                        transition: all 0.2s;
                        min-height: 44px;
                    }
                    #ovg-overage-selectors input[type="radio"]:checked + span {
                        background: #0066CC;
                        color: #fff;
                        border-color: #0066CC;
                    }
                    #ovg-overage-selectors input[type="radio"]:checked + span {
                        background: #0066CC !important;
                        color: #fff !important;
                        border-color: #0066CC !important;
                    }
                    #ovg-overage-selectors label:has(input[type="radio"]:checked) {
                        background: #0066CC !important;
                        color: #fff !important;
                        border-color: #0066CC !important;
                    }
                    #ovg-overage-selectors label:hover {
                        transform: translateY(-1px);
                        box-shadow: 0 2px 8px rgba(81, 129, 188, 0.15);
                    }
                    
                    /* Manual Input Section */
                    .ovg-manual-section {
                        text-align: center;
                        margin: 12px 0;
                    }
                    .ovg-custom-text {
                        color: #0066CC;
                        font-style: italic;
                        font-size: 14px;
                        margin-bottom: 12px;
                        display: none;
                    }
                    .ovg-custom-text.show {
                        display: block;
                    }
                    .ovg-manual-input-wrapper {
                        display: none;
                        align-items: center;
                        justify-content: center;
                        gap: 8px;
                    }
                    .ovg-manual-input-wrapper.show {
                        display: flex;
                    }
                    #manualInputFieldOVG {
                        border: 2px solid #e5e7eb;
                        border-radius: 8px;
                        padding: 8px 12px;
                        width: 80px;
                        text-align: center;
                        font-size: 16px;
                        font-weight: 600;
                        outline: none;
                        background: #fff;
                    }
                    #manualInputFieldOVG:focus {
                        border-color: #0066CC;
                        background: #fff;
                    }
                    .ovg-percent-symbol {
                        font-size: 16px;
                        font-weight: 600;
                        color: #374151;
                    }
                    
                    /* Info Text Section */
                    .ovg-info-section {
                        text-align: center;
                        margin: 12px 0 6px 0;
                    }
                    .ovg-info-text {
                        color: #0066CC;
                        font-style: normal;
                        font-size: 16px;
                        margin: 0;
                        min-height: 20px;
                        line-height: 1.4;
                        font-weight: 400;
                        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
                    }
                    #ovg-info-no {
                        color: #dc2626;
                    }
                    
                    /* Results Section */
                    .ovg-results {
                        background: #fff;
                        border: 2px solid #e5e7eb;
                        border-radius: 12px;
                        padding: 12px 16px;
                        margin: 18px 0 0 0;
                    }
                    .ovg-results-title {
                        font-size: 18px;
                        font-weight: 700;
                        color: #000;
                        text-align: center;
                        margin: 0 0 12px 0;
                    }
                    .ovg-result-row {
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                        padding: 4px 0;
                    }
                    .ovg-result-row:last-child {
                        padding-bottom: 4px;
                        margin-bottom: 0;
                        border-bottom: none;
                    }
                    .ovg-result-label {
                        font-size: 17px;
                        font-weight: 500;
                        color: #000;
                    }
                    .ovg-result-value {
                        font-size: 17px;
                        font-weight: 700;
                        color: #dc2626;
                    }
                    
                    /* Hidden elements */
                    .ovg-results .calculator-section,
                    .ovg-results .flex-box,
                    .ovg-results .input-box,
                    .ovg-results .input-label {
                        display: none !important;
                    }
                    
                    /* Add to Cart Button */
                    .ovg-add-to-cart {
                        background: #0066CC;
                        color: #fff;
                        border: none;
                        border-radius: 12px;
                        padding: 12px 16px;
                        font-size: 16px;
                        font-weight: bold;
                        cursor: pointer;
                        transition: all 0.2s;
                        width: calc(100% - 32px);
                        margin: 16px 16px 16px 16px;
                        position: relative;
                        bottom: 0;
                        box-shadow: 0 2px 8px rgba(81, 129, 188, 0.3);
                    }
                    .ovg-add-to-cart:hover {
                        background: #0052a3;
                        transform: translateY(-1px);
                        box-shadow: 0 4px 12px rgba(0, 102, 204, 0.4);
                    }
                    
                    /* Override default styles */
                    #overage-submit {
                        position: absolute;
                        top: 0;
                        left: 0;
                        width: 100%;
                        height: 100%;
                        z-index: 11;
                    }
                    span#ovg-total_square {
                        margin: 0 5px;
                    }
                    #atc-btn-wrap {
                        position: relative;
                    }
                    
                    /* Mobile Responsiveness */
                    @media (max-width: 480px) {
                        #ovg-popup {
                            padding: 10px;
                        }
                        #ovg-popup-content {
                            max-width: 100%;
                            max-height: 90vh;
                        }
                        .ovg-header {
                            padding: 14px 16px;
                        }
                        .ovg-header .section-intro p {
                            font-size: 12px;
                        }
                        .ovg-content {
                            padding: 16px 12px 0;
                        }
                        .ovg-add-to-cart {
                            padding: 12px;
                        }
                    }
                    
                    /* Extra small screens (iPhone SE, etc.) */
                    @media (max-height: 667px) and (max-width: 480px) {
                        #ovg-popup {
                            padding: 8px;
                        }
                        #ovg-popup-content {
                            max-height: 95vh;
                        }
                        .ovg-header {
                            padding: 12px 16px;
                        }
                        .ovg-header .heading {
                            font-size: 18px;
                            margin: 0 0 4px 0;
                        }
                        .ovg-header .section-intro p {
                            font-size: 11px;
                        }
                        .ovg-content {
                            padding: 8px 12px 0;
                        }
                        .ovg-input-section {
                            margin-bottom: 6px;
                        }
                        .ovg-input-section .input-box input {
                            padding: 12px 10px;
                            font-size: 20px;
                        }
                        .ovg-input-section .input-label {
                            font-size: 14px;
                            margin-top: 4px;
                            margin-bottom: 2px;
                        }
                        .ovg-overage-section {
                            margin-bottom: 8px;
                        }
                        .ovg-overage-section h4 {
                            font-size: 16px;
                            margin: 0 0 8px 0;
                        }
                        #ovg-overage-selectors {
                            gap: 6px;
                            margin-bottom: 8px;
                        }
                        #ovg-overage-selectors label {
                            padding: 8px 10px;
                            font-size: 14px;
                            min-height: 38px;
                        }
                        .ovg-manual-section {
                            margin: 8px 0;
                        }
                        .ovg-info-section {
                            margin: 8px 0 4px 0;
                        }
                        .ovg-info-text {
                            font-size: 14px;
                            min-height: 18px;
                        }
                        .ovg-results {
                            padding: 8px 12px;
                            margin: 12px 0 0 0;
                        }
                        .ovg-results-title {
                            font-size: 16px;
                            margin: 0 0 8px 0;
                        }
                        .ovg-result-row {
                            padding: 2px 0;
                        }
                        .ovg-result-label,
                        .ovg-result-value {
                            font-size: 15px;
                        }
                        .ovg-add-to-cart {
                            padding: 10px 12px;
                            font-size: 15px;
                            margin: 12px 12px 12px 12px;
                        }
                    }
                  </style>
                  <div id="ovg-popup">
                      <div id="ovg-popup-content">
                        <div id="ovg-popup-close">
                          <svg viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="#000000">
                          <g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><line x1="16" y1="16" x2="48" y2="48"></line><line x1="48" y1="16" x2="16" y2="48"></line></g>
                          </svg>
                        </div>
                        
                        <div class="ovg-header">
                          <div class="heading">
                            <span>Overage Calculator</span>
                          </div>
                          <div class="section-intro">
                            <p>Add overage for cuts, waste, breaks, and repairs</p>
                          </div>
                        </div>
                        
                        <div class="ovg-content">
                          <div class="ovg-input-section">
                            <div class="input-wrapper">
                              <div class="input-box">
                                <input
                                  type="text"
                                  name="ovg-calculator-footage"
                                  id="ovg-calculator-footage"
                                  class="required-entry validate-digits"
                                  placeholder="0"
                                >
                                <span class="input-label">Square Feet</span>
                              </div>
                            </div>
                          </div>
                          
                          <div class="ovg-overage-section">
                            <h4>Overage Amount</h4>
                            <div id="ovg-overage">
                              <div id="ovg-overage-selectors">
                              <label>
                                <input type="radio" name="properties[OVERAGE]" value="0.10" checked>
                                <span>10%</span>
                              </label>
                              <label>
                                <input type="radio" name="properties[OVERAGE]" value="0.15">
                                <span>15%</span>
                              </label>
                              <label>
                                <input type="radio" name="properties[OVERAGE]" value="manual" id="ovg-manualInputRadio">
                                <span>Manual Input</span>
                              </label>
                              <label>
                                <input type="radio" name="properties[OVERAGE]" value="no_overage">
                                <span>No Overage</span>
                              </label>
                              </div>
                            </div>
                            
                            <!-- Information text for different overage options -->
                            <div class="ovg-info-section">
                              <div class="ovg-info-text" id="ovg-info-10" style="display: block;">
                                Recommended minimum
                              </div>
                              <div class="ovg-info-text" id="ovg-info-15" style="display: none;">
                                Extra coverage for complex cuts
                              </div>
                              <div class="ovg-info-text" id="ovg-info-manual" style="display: none;">
                                Custom percentage
                              </div>
                              <div class="ovg-info-text" id="ovg-info-no" style="display: none;">
                                Not recommended - no extra material
                              </div>
                            </div>
                            
                            <div class="ovg-manual-section">
                              <div class="ovg-manual-input-wrapper" id="ovg-manual-input-wrapper">
                                <input type="number" id="manualInputFieldOVG" name="properties[OVERAGE_MANUAL]" value="20" step="1" min="0">
                                <span class="ovg-percent-symbol">%</span>
                              </div>
                            </div>
                            
                            <script>
                              document.querySelectorAll('#ovg-overage input[name="properties[OVERAGE]"]').forEach(radio => {
                                radio.addEventListener('change', function () {
                                  const manualWrapper = document.querySelector('#ovg-manual-input-wrapper');
                                  
                                  // Hide all info texts first
                                  document.querySelectorAll('.ovg-info-text').forEach(text => text.style.display = 'none');
                                  
                                  if (this.value === 'manual') {
                                    manualWrapper.classList.add('show');
                                    document.querySelector('#ovg-info-manual').style.display = 'block';
                                    // Set default value and focus
                                    const manualField = document.querySelector('#manualInputFieldOVG');
                                    if (!manualField.value || manualField.value === '') {
                                      manualField.value = '20';
                                    }
                                    manualField.focus();
                                    manualField.select(); // Select the text so user can easily replace it
                                  } else {
                                    manualWrapper.classList.remove('show');
                                    // Show appropriate info text
                                    if (this.value === '0.10') {
                                      document.querySelector('#ovg-info-10').style.display = 'block';
                                    } else if (this.value === '0.15') {
                                      document.querySelector('#ovg-info-15').style.display = 'block';
                                    } else if (this.value === 'no_overage') {
                                      document.querySelector('#ovg-info-no').style.display = 'block';
                                    }
                                  }
                                });
                              });
                            </script>
                            
                            <a href="#" class="ovg-calculate-btn" id="ovg-calculate" style="display: none;">Calculate</a>
                          </div>

                          <div class="ovg-results footer_outcome">
                            <div class="ovg-results-title">Calculation Results</div>
                            
                            <!-- Custom Results Display -->
                            <div class="ovg-result-row">
                              <span class="ovg-result-label">Overage:</span>
                              <span class="ovg-result-value" id="ovg-overage-display">0 Sq. Ft.</span>
                            </div>
                            <div class="ovg-result-row">
                              <span class="ovg-result-label">Total:</span>
                              <span class="ovg-result-value" id="ovg-total-display">0 Sq. Ft.</span>
                            </div>
                            <div class="ovg-result-row">
                              <span class="ovg-result-label">Boxes Needed:</span>
                              <span class="ovg-result-value" id="ovg-boxes-display">0</span>
                            </div>
                            <div class="ovg-result-row">
                              <span class="ovg-result-label">Total Price:</span>
                              <span class="ovg-result-value" id="ovg-price-display">$0.00</span>
                            </div>
                            
                            <!-- Hidden Original Results for Functionality -->
                            <div class="calculator-section line-separator">
                              <span class="separator">Results</span>
                            </div>
                            <div class="flex-box">
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="ovg-solution"
                                  placeholder="0"
                                >
                                <span class="input-label">Sq. Ft.</span>
                              </div>
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="ovg-total_coverage"
                                  placeholder="0"
                                >
                                <span class="input-label">Total Coverage Sq. Ft.</span>
                              </div>
                            </div>
                            <div class="flex-box">
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="ovg-boxes"
                                  placeholder="0"
                                >
                                <span class="input-label">
                                  {% if product.metafields.measuringunitsatd.measuring_units_atd == "Box" %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}es
                                  {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Sheet" %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}s
                                  {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Piece" %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}s
                                  {% else %}
                                    {{ product.metafields.measuringunitsatd.measuring_units_atd }}
                                  {% endif %}
                                </span>
                              </div>
                              <div class="input-box box-half" novalidate="novalidate">
                                <input
                                  type="text"
                                  class="solution_input form-control"
                                  disabled="disabled"
                                  id="ovg-total_cost"
                                  placeholder="0"
                                >
                                <span class="input-label">Total Price</span>
                              </div>
                            </div>
                          </div>
                        </div>

                        <button id="ovg-addToquanitity" class="ovg-add-to-cart">
                          <span id="ovg-addToCartquanitity">Add To Cart</span>
                        </button>
                        
                      </div>
                    </div>

                  {% endif %}
                
                  <style>
                    .js--qty-adjuster {
                      display: none;
                    }
                  </style>

<script defer="defer">
  $(document).ready(function() {
    console.log("Document ready, calculator script loaded.");
                        
    var output_boxes = 0;
    var overageSet = false;

    // Function to update property fields
    function updatePropertyFields(quantity, sqft, pieces) {
      // Only update if the elements exist
      if (document.querySelector('#property-qty')) {
        document.querySelector('#property-qty').value = quantity;
      }
      
      if (document.querySelector('#property-sqft')) {
        document.querySelector('#property-sqft').value = sqft;
      }
      
      if (document.querySelector('#property-pieces')) {
        document.querySelector('#property-pieces').value = pieces;
      }
    }

    // Calculator popup
    $(".calc_pop_up").click(function(event) {
      var container = $("#tile-calculator");
      if (!container.is(event.target) && !container.has(event.target).length) {
        console.log("Closing calc pop-up.");
        $(".calc_pop_up").removeClass("calc_pop_up-open");
        $(this).parents('html').removeClass('overflow-pop-hidden');
      }
    });
    
    $(".productInfo-popup-close").click(function(event) {
      $(".calc_pop_up").removeClass("calc_pop_up-open");
        $(this).parents('html').removeClass('overflow-pop-hidden');
    });
    
    $(".open_calc_pop_up").click(function(){
      $(this).parents('html').addClass('overflow-pop-hidden');
      $(".calc_pop_up").addClass("calc_pop_up-open");
      console.log("Added calc_pop_up-open class.");
    });

    $("#calculator-footage").focus(function() {
      console.log("Calculator footage input focused.");
      $("#calculator-footage-section").removeClass("opacity_low");
      $("#calculator-dimensions-section").addClass("opacity_low");
    });

    $(".validate-number").focus(function() {
      console.log("Validate number input focused.");
      $("#calculator-footage-section").addClass("opacity_low");
      $("#calculator-dimensions-section").removeClass("opacity_low");
    });

    $("#calculate_top").click(function() {
      console.log("Calculate top button clicked.");
      $("#calculator-footage-section").removeClass("opacity_low");
      $("#calculator-dimensions-section").addClass("opacity_low");
      calculateTop();
    });

    $("#calculate_bottom").click(function() {
      console.log("Calculate bottom button clicked.");
      $("#calculator-footage-section").addClass("opacity_low");
      $("#calculator-dimensions-section").removeClass("opacity_low");
      calculateBottom();
    });

    $("#ovg-calculate").click(function() {
      console.log("Calculate overage.");
      calculateOverage();
    });
    
    // Auto-calculation function for overage
    function autoCalculateOverage() {
      const footageInput = $('#ovg-calculator-footage');
      if (footageInput.length && footageInput.val() && parseFloat(footageInput.val()) > 0) {
        console.log("Auto-calculating overage...");
        calculateOverage();
      }
    }
    
    // Auto-calculate when overage percentage is selected
    $(document).on('change', '#ovg-overage input[name="properties[OVERAGE]"]', function() {
      console.log('Overage selection changed to:', this.value);
      if (this.value !== 'manual') {
        autoCalculateOverage();
      } else {
        // If manual is selected and there's already a value in manual input, calculate
        const manualValue = $('#manualInputFieldOVG').val();
        if (manualValue && parseFloat(manualValue) >= 0) {
          autoCalculateOverage();
        }
      }
    });
    
    // Auto-calculate when manual input changes
    $(document).on('input change', '#manualInputFieldOVG', function() {
      console.log('Manual input changed to:', $(this).val());
      const inputValue = $(this).val();
      if (inputValue !== '' && parseFloat(inputValue) >= 0) {
        autoCalculateOverage();
      }
    });
    
    // Auto-calculate when square footage input changes
    var footageInputTimer;
    $(document).on('input', '#ovg-calculator-footage', function() {
      clearTimeout(footageInputTimer);
      footageInputTimer = setTimeout(autoCalculateOverage, 500);
    });
    
    $("#squared_size").change(function() {
      console.log("Squared size input changed.");
      calculateFromSquaredSize();
    });

    $("#quantity_look_alike").change(function() {
      console.log("Quantity look-alike input changed.");
      calculateFromQuantity();
      
      // Update property fields when quantity changes
      var quantity = Number($(this).val() || 0);
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      
      updatePropertyFields(quantity, (quantity * box_dimensions).toFixed(2), quantity * tiles_per_box);
    });

    $('#addToquanitity').click(function() {
        if (output_boxes > 0) {
            {% if product.variants.first.inventory_management == 'shopify' %}
              if (output_boxes > {{ max_qty }}) {
                  alert("Only {{ max_qty }} available");
                  return;
              }
            {% endif %}
            $('.calc_pop_up').removeClass('calc_pop_up-open'); 
            $(this).parents('html').removeClass('overflow-pop-hidden');
            $('#x-atc-button-{{ section.id }}').click();
        }
    });

    $('#ovg-addToquanitity').click(function() {
        if (output_boxes > 0) {
            {% if product.variants.first.inventory_management == 'shopify' %}
              if (output_boxes > {{ max_qty }}) {
                  alert("Only {{ max_qty }} available");
                  return;
              }
            {% endif %}
            $('#ovg-popup').removeClass('ovg-popup-open'); 
            $(this).parents('html').removeClass('overflow-pop-hidden');
            $('#x-atc-button-{{ section.id }}').click();
        }
    }); 

    function up(v, n) {
      return Math.ceil((v * Math.pow(10, n)) / Math.pow(10, n));
    }

    function roundUp(num, decimalPlaces) {
      const factor = Math.pow(10, decimalPlaces);
      return Math.ceil(num * factor) / factor;
    }

    function calculateTop(){
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      
      var calculator_footage = Number($('#calculator-footage').val() || 0);
      
      // Get overage percentage
      var selectedOverage = $('#overage_top input[name="properties[TOP-OVERAGE]"]:checked').val();
      var manualOverage = $('#overage_top #manualInputField').val();
      var overage = 0;
      
      if (selectedOverage === 'manual') {
        overage = manualOverage ? parseFloat(manualOverage) / 100 : 0;
      } else if (selectedOverage === 'no_overage') {
        overage = 0;
      } else {
        overage = parseFloat(selectedOverage);
      }
      
      // Calculate solution with overage
      var solution = calculator_footage * (1 + overage);
      var solution_rounded = parseFloat(solution.toFixed(2));
      
      // Calculate boxes needed
      var box_output = solution / box_dimensions;
      var amount_of_boxes = box_output;
      
      output_boxes = up(amount_of_boxes, 0);

      {% if product.variants.first.inventory_management == 'shopify' %}
        if (output_boxes > {{ max_qty }}) {
          alert('Only {{ max_qty }} available');
          output_boxes = {{ max_qty }};
        }
      {% endif %}

      // Calculate total cost
      var product_price = {{ product.price | divided_by: 100.00 }};
      var total_cost_avg = product_price * output_boxes;
      var rounded_total_avg = roundUp(total_cost_avg, 2);
      
      // Calculate actual coverage based on boxes
      var total_coverage = output_boxes * box_dimensions;
      var total_coverage_rounded = parseFloat(total_coverage.toFixed(2));
      
      // Update outputs
      $('#boxes').val(output_boxes);
      $('#solution').val(solution_rounded);
      $('#total_cost').val('$' + rounded_total_avg.toFixed(2));
      $('#boxes_needed').text(output_boxes);
      $('#total_coverage').val(total_coverage_rounded);
      $('#total_square').text(total_coverage_rounded);
      $('#squared_size').val(total_coverage_rounded);
      $('[name="quantity"]').attr('value', output_boxes).val(output_boxes);
      $('#quantity_look_alike').val(output_boxes);
      $('#product_page_total').text('$' + rounded_total_avg.toFixed(2));

      const overagePercentage = Math.round(overage * 100) + '%';
      console.log('Formatted overage:', overagePercentage);
      const propertyOverage = document.querySelector('#property-overage');
      if (propertyOverage) {
        propertyOverage.value = overagePercentage;
        console.log('Updated #property-overage to:', overagePercentage);
      } else {
        console.error('#property-overage element not found');
      }
      
      // Update property fields
      updatePropertyFields(output_boxes, total_coverage_rounded, output_boxes * tiles_per_box);
      
      // Set overage flag
      overageSet = true;
      if ($('#overage-submit').length > 0) {
        $('#overage-submit').remove();
      }
    }

    function calculateBottom(){
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      
      var length_ft = Number($('#calculator-length-ft').val() || 0);
      var length_in = Number($('#calculator-length-in').val() || 0);
      var width_ft = Number($('#calculator-width-ft').val() || 0);
      var width_in = Number($('#calculator-width-in').val() || 0);
      
      var length = (length_ft) + (length_in / 12);
      var width = (width_ft) + (width_in / 12);
      
      var area = length * width;
      var area_rounded = parseFloat(area.toFixed(2));
      
      var selectedOverage = $('#overage_bottom input[name="properties[BTM-OVERAGE]"]:checked').val();
      var manualOverage = $('#overage_bottom #manualInputFieldBottom').val();
      var overage = 0;
      
      if (selectedOverage === 'manual') {
        overage = manualOverage ? parseFloat(manualOverage) / 100 : 0;
      } else if (selectedOverage === 'no_overage') {
        overage = 0;
      } else {
        overage = parseFloat(selectedOverage);
      }
      
      var solution = area * (1 + overage);
      var solution_rounded = parseFloat(solution.toFixed(2));
      
      var box_output = solution / box_dimensions;
      var amount_of_boxes = box_output;
      output_boxes = up(amount_of_boxes, 0);

      {% if product.variants.first.inventory_management == 'shopify' %}
        if (output_boxes > {{ max_qty }}) {
          alert('Only {{ max_qty }} available');
          output_boxes = {{ max_qty }};
        }
      {% endif %}
      
      var product_price = {{ product.price | divided_by: 100.00 }};
      var total_cost_avg = product_price * output_boxes;
      var rounded_total_avg = roundUp(total_cost_avg, 2);
      
      // Calculate actual coverage based on boxes
      var total_coverage = output_boxes * box_dimensions;
      var total_coverage_rounded = parseFloat(total_coverage.toFixed(2));
      
      // Update outputs
      $('#boxes').val(output_boxes);
      $('#solution').val(solution_rounded);
      $('#total_cost').val('$' + rounded_total_avg.toFixed(2));
      $('#boxes_needed').text(output_boxes);
      $('#total_coverage').val(total_coverage_rounded);
      $('#total_square').text(total_coverage_rounded);
      $('#squared_size').val(total_coverage_rounded);
      $('[name="quantity"]').attr('value', output_boxes).val(output_boxes);
      $('#quantity_look_alike').val(output_boxes);
      $('#product_page_total').text('$' + rounded_total_avg.toFixed(2));

      const overagePercentage = Math.round(overage * 100) + '%';
      console.log('Formatted overage:', overagePercentage);
      const propertyOverage = document.querySelector('#property-overage');
      if (propertyOverage) {
        propertyOverage.value = overagePercentage;
        console.log('Updated #property-overage to:', overagePercentage);
      } else {
        console.error('#property-overage element not found');
      }
      
      // Update property fields
      updatePropertyFields(output_boxes, total_coverage_rounded, output_boxes * tiles_per_box);
      
      // Set overage flag
      overageSet = true;
      if ($('#overage-submit').length > 0) {
        $('#overage-submit').remove();
      }
    }

    function calculateOverage(){
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      var calculator_footage = Number($('#ovg-calculator-footage').val() || 0);
      
      // Get overage percentage
      var selectedOverage = $('#ovg-overage-selectors input[name="properties[OVERAGE]"]:checked').val();
      var manualOverage = $('#manualInputFieldOVG').val();
      var overage = 0;
      
      console.log('Selected overage:', selectedOverage);
      console.log('Manual overage input:', manualOverage);
      console.log('Calculator footage:', calculator_footage);
      
      if (selectedOverage === 'manual') {
        // Make sure we're parsing the manual input correctly
        overage = manualOverage ? parseFloat(manualOverage) / 100 : 0;
        console.log('Parsed manual overage (after division):', overage);
      } else if (selectedOverage === 'no_overage') {
        overage = 0;
      } else {
        overage = parseFloat(selectedOverage);
      }
      
      // Calculate overage amount
      var overage_amount = calculator_footage * overage;
      var overage_amount_rounded = parseFloat(overage_amount.toFixed(2));
      
      // Calculate solution with overage
      var solution = calculator_footage * (1 + overage);
      var solution_rounded = parseFloat(solution.toFixed(2));
      
      // Calculate boxes needed - use Math.round instead of up() for overage calculations
      var box_output = solution / box_dimensions;
      var amount_of_boxes = box_output;
      output_boxes = Math.round(amount_of_boxes);

      {% if product.variants.first.inventory_management == 'shopify' %}
        if (output_boxes > {{ max_qty }}) {
          alert('Only {{ max_qty }} available');
          output_boxes = {{ max_qty }};
        }
      {% endif %}

      const overagePercentage = Math.round(overage * 100) + '%';
      console.log('Formatted overage:', overagePercentage);
      const propertyOverage = document.querySelector('#property-overage');
      if (propertyOverage) {
        propertyOverage.value = overagePercentage;
        console.log('Updated #property-overage to:', overagePercentage);
      } else {
        console.error('#property-overage element not found');
      }
      
      // Calculate total cost
      var product_price = {{ product.price | divided_by: 100.00 }};
      var total_cost_avg = product_price * output_boxes;
      var rounded_total_avg = roundUp(total_cost_avg, 2);
      
      // Calculate actual coverage based on boxes
      var total_coverage = output_boxes * box_dimensions;
      var total_coverage_rounded = parseFloat(total_coverage.toFixed(2));
      
      // Update original hidden outputs (for functionality)
      $('#ovg-boxes').val(output_boxes);
      $('#ovg-solution').val(overage_amount_rounded);
      $('#ovg-total_cost').val('$' + rounded_total_avg.toFixed(2));
      $('#ovg-boxes_needed').text(output_boxes);
      $('#ovg-total_coverage').val(solution_rounded);
      $('#ovg-total_square').text(solution_rounded);
      $('#squared_size').val(solution_rounded);
      $('[name="quantity"]').attr('value', output_boxes).val(output_boxes);
      $('#quantity_look_alike').val(output_boxes);
      $('#product_page_total').text('$' + rounded_total_avg.toFixed(2));
      
      // Update custom display elements
      $('#ovg-overage-display').text(overage_amount_rounded.toFixed(2) + ' Sq. Ft.');
      $('#ovg-total-display').text(solution_rounded.toFixed(2) + ' Sq. Ft.');
      $('#ovg-boxes-display').text(output_boxes);
      $('#ovg-price-display').text('$' + rounded_total_avg.toFixed(2));
      
      console.log('Updated custom display:', {
        overage: overage_amount_rounded,
        total: solution_rounded,
        boxes: output_boxes,
        price: '$' + rounded_total_avg.toFixed(2)
      });
      
      // Update property fields
      updatePropertyFields(output_boxes, total_coverage_rounded, output_boxes * tiles_per_box);
      
      // Set overage flag
      overageSet = true;
      if ($('#overage-submit').length > 0) {
        $('#overage-submit').remove();
      }
    }

    function calculateFromSquaredSize(){
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      var squared_size = Number($('#squared_size').val() || 0);
      var box_output = squared_size / box_dimensions;
      var amount_of_boxes = box_output;
      output_boxes = up(amount_of_boxes, 0);

      {% if product.variants.first.inventory_management == 'shopify' %}
        if (output_boxes > {{ max_qty }}) {
          alert('Only {{ max_qty }} available');
          output_boxes = {{ max_qty }};
        }
      {% endif %}

      var total_coverage = output_boxes * box_dimensions;
      var total_coverage_rounded = parseFloat(total_coverage.toFixed(2));
      
      var product_price = {{ product.price | divided_by: 100.00 }};
      var total_cost_avg = product_price * output_boxes;
      var rounded_total_avg = roundUp(total_cost_avg, 2);
      
      $('#boxes').val(output_boxes);
      $('#solution').val(total_coverage_rounded);
      $('#squared_size').val(total_coverage_rounded);
      $('#total_cost').val('$' + rounded_total_avg);
      $('#boxes_needed').text(output_boxes);
      $('[name="quantity"]').attr('value',output_boxes).val(output_boxes);
      $('#quantity_look_alike').val(output_boxes);
      $('#product_page_total').text('$' + rounded_total_avg);
      $('#calculator-footage').val(total_coverage_rounded);
      $('#ovg-calculator-footage').val(total_coverage_rounded);
      // Update property fields
      updatePropertyFields(output_boxes, total_coverage_rounded, output_boxes * tiles_per_box);
    }

    function calculateFromQuantity(){
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      var quantity_look_alike = Number($('#quantity_look_alike').val() || 0);

      if (quantity_look_alike > {{ max_qty }}) {
        alert('Only {{ max_qty }} available');
        quantity_look_alike = {{ max_qty }};
        document.getElementById('quantity_look_alike').value = quantity_look_alike; 
      }
      
      
      var q_calc = quantity_look_alike * box_dimensions;
      var q_calc_rounded = parseFloat(q_calc.toFixed(2));
      var product_price = {{ product.price | divided_by: 100.00 }};
      var total_price = product_price * quantity_look_alike;
      var rounded_total = up(total_price, 2);

      $('#product_page_total').text('$' + rounded_total);
      $('#squared_size').val(q_calc_rounded);
      $('#calculator-footage').val(q_calc_rounded);
      $('#ovg-calculator-footage').val(q_calc_rounded);
      
      $('[name="quantity"]').attr('value',quantity_look_alike).val(quantity_look_alike);
      
      // Update property fields
      updatePropertyFields(quantity_look_alike, q_calc_rounded, quantity_look_alike * tiles_per_box);
    }

    function updateCalculatorOutputs(boxes, solution, totalCost) {
      overageSet = true;
      if ($('#overage-submit').length > 0) {
          $('#overage-submit').remove();
      }
      $('#boxes').val(boxes);
      $('#solution').val(solution);
      $('#total_square').text(solution);
      $('#total_cost').val('$' + totalCost.toFixed(2));
      $('#boxes_needed').text(boxes);
      $('[name="quantity"]').attr('value',boxes).val(boxes);
      $('#quantity_look_alike').val(boxes);
      $('#product_page_total').text('$' + totalCost);
      
      // Calculate actual coverage based on boxes
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      var total_coverage = boxes * box_dimensions;
      var total_coverage_rounded = parseFloat(total_coverage.toFixed(2));
      
      // Update total coverage
      $('#total_coverage').val(total_coverage_rounded);
      
      // Update property fields
      updatePropertyFields(boxes, total_coverage_rounded, boxes * {{tiles_per_box}});
    }

    function updateOVGCalculatorOutputs(boxes, solution, totalCost) {
      overageSet = true;
      if ($('#overage-submit').length > 0) {
          $('#overage-submit').remove();
      }
      $('#ovg-boxes').val(boxes);
      $('#ovg-solution').val(solution);
      $('#ovg-total_square').text(solution);
      $('#ovg-total_cost').val('$' + totalCost.toFixed(2));
      $('#ovg-boxes_needed').text(boxes);
      $('[name="quantity"]').attr('value',boxes).val(boxes);
      $('#quantity_look_alike').val(boxes);
      $('#product_page_total').text('$' + totalCost);
      
      // Calculate actual coverage based on boxes
      var tile_size = {{tile_size}};
      var tiles_per_box = {{tiles_per_box}};
      var box_dimensions = {{ box_area_clean }};
      var total_coverage = boxes * box_dimensions;
      var total_coverage_rounded = parseFloat(total_coverage.toFixed(2));
      
      // Update total coverage
      $('#ovg-total_coverage').val(total_coverage_rounded);
      
      // Update property fields
      updatePropertyFields(boxes, total_coverage_rounded, boxes * {{tiles_per_box}});
    }

    function updateTotalCoverage(box_dimensions) {
      setTimeout(function() {
        var quantity_boxes = Number($('#boxes').val() || 0);
        var q_calc = quantity_boxes * box_dimensions;
        var q_calc_rounded = parseFloat(q_calc.toFixed(2));
        $('#total_coverage').val(q_calc_rounded);
        $('#total_square').text(q_calc_rounded);
        $('#squared_size').val(q_calc_rounded);
        
        // Update property fields
        updatePropertyFields(quantity_boxes, q_calc_rounded, quantity_boxes * {{tiles_per_box}});
      }, 200);
    }

    function OVGupdateTotalCoverage(box_dimensions) {
      setTimeout(function() {
        var quantity_boxes = Number($('#ovg-boxes').val() || 0);
        var q_calc = quantity_boxes * box_dimensions;
        var q_calc_rounded = parseFloat(q_calc.toFixed(2));
        $('#ovg-total_coverage').val(q_calc_rounded);
        $('#ovg-total_square').text(q_calc_rounded);
        $('#squared_size').val(q_calc_rounded);
        
        // Update property fields
        updatePropertyFields(quantity_boxes, q_calc_rounded, quantity_boxes * {{tiles_per_box}});
      }, 200);
    }

    {% if product.tags contains "overage-popup-v3" %}
      if ($('#x-atc-button-{{ section.id }}').length) {
        var $button = $('#x-atc-button-{{ section.id }}');
        var $overlay = $('<div id="overage-submit"></div>');
        // Append the overlay to the button's parent
        $button.parent().css('position', 'relative').append($overlay);
      }

      $("#ovg-popup").click(function(event) {
        var container = $("#ovg-popup-content");
        if (!container.is(event.target) && !container.has(event.target).length) {
          console.log("Closing OVG pop-up.");
          
          // Act like Add to Cart button when clicking outside (same as close button)
          if (output_boxes > 0) {
              {% if product.variants.first.inventory_management == 'shopify' %}
                if (output_boxes > {{ max_qty }}) {
                    alert("Only {{ max_qty }} available");
                    return;
                }
              {% endif %}
              $("#ovg-popup").removeClass("ovg-popup-open");
              $(this).parents('html').removeClass('overflow-pop-hidden');
              $('#x-atc-button-{{ section.id }}').click();
          } else {
              // If no calculation, just close
              $("#ovg-popup").removeClass("ovg-popup-open");
              $(this).parents('html').removeClass('overflow-pop-hidden');
          }
        }
      });

      $("#ovg-popup-close").click(function(event) {
        // Act like Add to Cart button when closing
        if (output_boxes > 0) {
            {% if product.variants.first.inventory_management == 'shopify' %}
              if (output_boxes > {{ max_qty }}) {
                  alert("Only {{ max_qty }} available");
                  return;
              }
            {% endif %}
            $("#ovg-popup").removeClass("ovg-popup-open");
            $(this).parents('html').removeClass('overflow-pop-hidden');
            $('#x-atc-button-{{ section.id }}').click();
        } else {
            // If no calculation, just close
            $("#ovg-popup").removeClass("ovg-popup-open");
            $(this).parents('html').removeClass('overflow-pop-hidden');
        }
      });

      $('#overage-submit').click(function() {
        if (!overageSet) {
          $(this).parents('html').addClass('overflow-pop-hidden');
          $("#ovg-popup").addClass("ovg-popup-open");
          
          // Auto-populate with current square footage and calculate with 10% overage
          setTimeout(function() {
            const currentFootage = $('#squared_size').val() || $('#calculator-footage').val() || '';
            if (currentFootage && parseFloat(currentFootage) > 0) {
              $('#ovg-calculator-footage').val(currentFootage);
              // Trigger calculation with the default 10% selection
              if (typeof calculateOverage === 'function') {
                calculateOverage();
              }
            }
          }, 100);
          
        } else {
          $('#x-atc-button-{{ section.id }}').click();
        }
      });
    {% endif %}

    console.log("All event listeners and functions set up.");
  });

  // Function to update custom results display
  function updateCustomResults() {
    // Wait a bit for the original calculation to complete
    setTimeout(function() {
      // Get values from hidden original results
      const overageValue = $('#ovg-solution').val() || '0';
      const totalValue = $('#ovg-total_coverage').val() || '0';
      const boxesValue = $('#ovg-boxes').val() || '0';
      const priceValue = $('#ovg-total_cost').val() || '$0.00';
      
      // Update custom display elements
      $('#ovg-overage-display').text(overageValue + ' Sq. Ft.');
      $('#ovg-total-display').text(totalValue + ' Sq. Ft.');
      $('#ovg-boxes-display').text(boxesValue);
      $('#ovg-price-display').text(priceValue);
      
      console.log('Updated custom results:', {
        overage: overageValue,
        total: totalValue,
        boxes: boxesValue,
        price: priceValue
      });
    }, 100);
  }

  // Hook into the calculateOverage function
  const originalCalculateOverage = window.calculateOverage;
  window.calculateOverage = function() {
    if (originalCalculateOverage) {
      originalCalculateOverage.apply(this, arguments);
      updateCustomResults();
    }
  };

  // Also update when any of the original result fields change
  $(document).on('change input', '#ovg-solution, #ovg-total_coverage, #ovg-boxes, #ovg-total_cost', function() {
    updateCustomResults();
  });
</script>

                
                {%- when 'tabbed_information' -%}
                  <style>
                    .container-wrap {
                        display: flex;
                        flex-direction: column;
                      gap: 15px;
                    }

                    .cust__tab-container {
                        display: flex;
                        overflow: auto;
                        width: 100%;
                        /* gap: 5px; */
                      justify-content: space-between;
                        -ms-overflow-style: none;  /* IE and Edge */
                        scrollbar-width: none;  /* Firefox */
                    }

                    .cust__tab-container::-webkit-scrollbar {
                        display: none;  /* Chrome, Safari, and Opera */
                    }

                    .cust__tab {
                        padding: 10px 20px;
                        cursor: pointer;
                        border-bottom: none;
                        font-weight: 600;
                        background: none;
                        border: none;
                        border-bottom: 2px solid transparent;
                        background-color: #d2d9e2;
                        color: #000;
                        border-radius: 5px;
                    }

                    .cust__tab p {
                        width: max-content;
                        margin: 0;
                    }

                    .custom___p {
                        font-size: 15px;
                        color: #000;
                        text-align: left;
                    }

                    .cust__tab.active .custom___p {
                        color: #fff;
                    }

                    .cust__tab.active {
                        background-color: #1c4170;
                    }

                    .cust__tab-content {
                        display: none;
                        font-size: 16px;
                        margin: 15px 0 15px 0;
                        width: 100%;
                        overflow-x: auto;
                        -ms-overflow-style: none;  /* IE and Edge */
                        scrollbar-width: none;  /* Firefox */
                    }

                    .cust__tab-content::-webkit-scrollbar {
                        display: none;  /* Chrome, Safari, and Opera */
                    }

                    .cust__tab-content p {
                        font-size: 16px;
                    }

                    .cust__tab-content.active {
                        display: block;
                    }
                  </style>

                  <div class="container-wrap w-full relative">
                    <div class="cust__tab-container">
                      <button class="cust__tab active" onclick="showContent(0)">
                        <p class="custom___p">{{ block.settings.description }}</p>
                      </button>
                      {% if block.settings.content_1 != blank %}
                        <button class="cust__tab" onclick="showContent(1)">
                          <p class="custom___p">{{ block.settings.tab_1 }}</p>
                        </button>
                      {% endif %}
                      {% if block.settings.content_2 != blank %}
                        <button class="cust__tab" onclick="showContent(2)">
                          <p class="custom___p">{{ block.settings.tab_2 }}</p>
                        </button>
                      {% endif %}
                      {% if block.settings.content_3 != blank %}
                        <button class="cust__tab" onclick="showContent(3)">
                          <p class="custom___p">{{ block.settings.tab_3 }}</p>
                        </button>
                      {% endif %}
                    </div>

                    <div class="cust__content-container">
                      <div id="content0" class="cust__tab-content active">
                        {{ product.description | replace: 'id="product-component-', '' }}
                      </div>
                      {% if block.settings.content_1 != blank %}
                        <div id="content1" class="cust__tab-content">
                          {{ block.settings.content_1 }}
                        </div>
                      {% endif %}
                      {% if block.settings.content_2 != blank %}
                        <div id="content2" class="cust__tab-content">
                          {{ block.settings.content_2 }}
                        </div>
                      {% endif %}
                      {% if block.settings.content_3 != blank %}
                        <div id="content3" class="cust__tab-content">
                          {{ block.settings.content_3 }}
                        </div>
                      {% endif %}
                    </div>
                  </div>

                  <script>
                    function showContent(index) {
                        var contents = document.getElementsByClassName('cust__tab-content');
                        var tabs = document.getElementsByClassName('cust__tab');
                        for (var i = 0; i < contents.length; i++) {
                            contents[i].classList.remove('active');
                            tabs[i].classList.remove('active');
                        }
                        contents[index].classList.add('active');
                        tabs[index].classList.add('active');
                    }
                  </script>

                {%- when 'frequently_bought' -%}
                  <div class="mb-5 w-full" {{ block.shopify_attributes }}>
                    {% render 'frequently-bought', block: block, show_content_center: show_content_center %}
                  </div>
                {%- when 'product_sku' -%}
                  {% assign current_variant = product.selected_or_first_available_variant %}
                  <div 
                    id="sku-{{ section.id }}"
                    class="mb-5 capitalize leading-tight w-full{% if show_content_center %} text-center{% endif %}"
                    {{ block.shopify_attributes }}
                  >
                    {%- if current_variant.sku != blank -%}
                      {{ block.settings.heading }}
                      {{ current_variant.sku | escape }}
                    {%- endif -%}
                  </div>
                {%- when 'vendor' -%}
                  {%- if product.metafields.custom.vendor_detail_page != blank
                    or block.settings.select_page != blank
                    and is_product_page
                  -%}
                    <div
                      id="VendorDetail"
                      class="mb-3 w-full{% if show_content_center %} text-center{% endif %}"
                      x-data="{ openVendor: false }"
                      {{ block.shopify_attributes }}
                    >
                      <button
                        id="OpenVendorDetail"
                        class="button-link effect-inline italic p-break-words relative cursor-pointer hover:text-[rgba(var(--colors-text-link))]"
                        @click.prevent="openVendor = true; $store.xPopup.open = true; $store.xModal.setActiveElement('OpenVendorDetail')"
                      >
                        {{ product.vendor | escape }}
                      </button>

                      <template x-teleport="body">
                        <div
                          id="VendorPopup"
                          x-show="openVendor"
                          x-cloak
                          class="w-full h-full fixed top-0 left-0 z-50 bg-[#acacac] bg-opacity-30"
                        >
                          <div
                            x-show="openVendor"
                            @click.away="openVendor = false; $store.xPopup.open = false"
                            class="bg-[rgba(var(--background-color))] pl-5 pt-10 pb-10 md:p-16 pr-0 md:pr-0 relative min-h-[calc(75vh-80px)] md:min-h-[400px] max-w-3xl md:ml-auto md:mr-auto mt-[25vh] md:mt-[9vh]"
                            x-transition:enter="transitionall ease-in-out duration-300"
                            x-transition:enter-start="opacity-0 transform md:-translate-x-1/3 translate-y-1/3 md:translate-y-0"
                            x-transition:enter-end="opacity-100 transform md:translate-x-0 translate-y-0"
                            x-transition:leave="transition-all ease-in-out duration-300"
                            x-transition:leave-end="opacity-0 transform md:translate-x-1/3 translate-y-1/3 md:translate-y-0"
                            x-intersect.full="$store.xModal.focus('VendorPopup', 'CloseVendor')"
                            @keyup.escape="$store.xModal.removeFocus(); openVendor = false; $store.xPopup.open = false"
                          >
                            <button
                              id="CloseVendor"
                              @click="$store.xModal.removeFocus(); openVendor = false; $store.xPopup.open = false;"
                              class="cursor-pointer top-0.5 md:top-6 absolute right-5 md:right-7 h-10 w-12 z-10 pt-3 pb-3.5 pl-4 pr-4"
                            >
                              {%- render 'icon-alls', icon: 'icon-close' -%}
                            </button>
                            <div class="overflow-y-auto scrollbar-body max-h-[65vh] min-h-[inherit]">
                              <div class="pr-5 md:pr-16 rte">
                                {% if product.metafields.custom.vendor_detail_page.value != blank %}
                                  {%- if product.metafields.custom.vendor_detail_page.value.title != blank -%}
                                    <h3 class="mb-5 text-[{{ settings.heading_base_size | times: 0.0225 | times: 0.5 }}rem] md:text-[{{ settings.heading_base_size | times: 0.0225 | times: 0.6 }}rem] pt-2 pb-2 text-center">
                                      {{ product.metafields.custom.vendor_detail_page.value.title | escape }}
                                    </h3>
                                  {%- endif -%}
                                  {{ product.metafields.custom.vendor_detail_page.value.content }}
                                {% else %}
                                  <h3 class="mb-5 text-[{{ settings.heading_base_size | times: 0.0225 | times: 0.5 }}rem] md:text-[{{ settings.heading_base_size | times: 0.0225 | times: 0.6 }}rem] pt-2 pb-2 text-center">
                                    {{ block.settings.select_page.title | escape }}
                                  </h3>
                                  {{ block.settings.select_page.content }}
                                {% endif %}
                              </div>
                            </div>
                          </div>
                        </div>
                      </template>
                    </div>
                  {% else %}
                    <!--
                      <div class="w-full mb-3{% if show_content_center %} text-center{% endif %}" {{ block.shopify_attributes }}>
                        <{% if block.settings.link != blank %}a href="{{ block.settings.link }}"{% if block.settings.open_new_window %} target="_blank"{% endif %} class="effect-inline {% else %}p class="{% endif %}relative italic p-break-words inline-block">{{ product.vendor | escape }}</{% if block.settings.link %}a{% else %}p{% endif %}>
                      </div>
                    -->
                  {% endif %}
                {%- when 'customize_picker' -%}
                  <div
                    class="mb-5 {{ block.settings.width_block }}{% if show_content_center %} text-center{% endif %}"
                    {{ block.shopify_attributes }}
                  >
                    {%
                      render 'customize-picker',
                      block_id: block.id,
                      option_name: block.settings.option_name,
                      required: block.settings.required,
                      picker_type: block.settings.picker_type,
                      option_label: block.settings.option_name,
                      product_form_id: product_form_id,
                      option_list: block.settings.option_list,
                      max_text_length: block.settings.max_text_length | plus: 0,
                      option_text_note: block.settings.option_text_note,
                      option_select_note: block.settings.option_select_note,
                      minimum_select_value: block.settings.minimum_select_value,
                      maximum_select_value: block.settings.maximum_select_value,
                      option_file_note: block.settings.option_file_note,
                      swatch_value: block.settings.swatch_value,
                      swatch_style: block.settings.swatch_style,
                      min_date: block.settings.min_date,
                      max_date: block.settings.max_date,
                      show_content_center: show_content_center
                    %}
                  </div>
                {%- when 'product_name' -%}
                  {% liquid
                    assign base_size_heading = settings.heading_base_size | times: 0.0225
                    assign font_size_heading = block.settings.title_size | times: 0.01 | times: base_size_heading
                  %}
                  {% style %}
                    .title-size--{{ block.id }} {
                      font-size: {{ font_size_heading | times: 0.60 }}rem;
                    }
                    @media (min-width: 767px){
                      .title-size--{{ block.id }} {
                        font-size: {{ font_size_heading }}rem;
                      }
                    }
                  {% endstyle %}
                  <div
                    class="mb-5 w-full{% if show_content_center %} text-center{% endif %}"
                    {{ block.shopify_attributes }}
                  >
                    <{{ block.settings.heading_tag }} class="product-title h2 title-size--{{ block.id }} mb-3 leading-tight">
                      {{ product.title | escape }}
                    </{{ block.settings.heading_tag }}>
                  </div>
                {%- when 'price' -%}
                  <div 
                    class="mb-5 w-full{% if show_content_center %} text-center{% endif %}"
                    {{ block.shopify_attributes }}
                  >
                    <div id="price-{{ section.id }}" role="status">
                      {%- render 'main-product-prices',
                        product: product,
                        use_variant: true,
                        container: 'main-product-price'
                      -%}
                    </div>
                    {% if block.settings.show_tax_and_shipping %}
                      {%- if cart.taxes_included or shop.shipping_policy.body != blank -%}
                        <div class="flex flex-wrap mt-3{% if show_content_center %} justify-center{% endif %}">
                          {%- if cart.taxes_included -%}
                            <span class="mr-1">{{ 'products.product.include_taxes' | t }}</span>
                          {%- else -%}
                            <span class="mr-1">{{ 'products.product.not_include_taxes' | t }}</span>
                          {%- endif -%}
                          {%- if shop.shipping_policy.body != blank -%}
                            {%- if quick_view -%}
                              {{ 'products.product.shipping_policy_html' | t: link: shop.shipping_policy.url }}
                            {%- else -%}
                              <div x-data="xShippingPolicy( '{{ shop.shipping_policy.url }}' )">
                                <a
                                  id="LoadShoppingPolicy"
                                  href="{{ shop.shipping_policy.url }}"
                                  class="button-link relative cursor-pointer hover:text-[rgba(var(--colors-text-link))]"
                                  @click.prevent="loadShipping()"
                                >
                                  {{ 'products.product.shipping' | t }}
                                </a>
                                {{ 'products.product.calculated' | t }}
                                <template x-teleport="body">
                                  <div
                                    id="ShippingPolicyPopup"
                                    x-show="show"
                                    x-cloak
                                    class="w-full h-full fixed top-0 left-0 z-50 bg-[#acacac] bg-opacity-30"
                                  >
                                    <div
                                      x-show="show"
                                      @click.away="show = false; $store.xPopup.open = false"
                                      class="bg-[rgba(var(--background-color))] pl-5 pt-10 pb-10 md:p-16 pr-0 md:pr-0 relative min-h-[calc(75vh-80px)] md:min-h-[400px] max-w-3xl md:ml-auto md:mr-auto mt-[25vh] md:mt-[9vh]{% if settings.edges_type == 'rounded_corners' %} md:rounded-[10px]{% endif %}"
                                      x-transition:enter="transition-all ease-in-out duration-300"
                                      x-transition:enter-start="opacity-0 transform md:-translate-x-1/3 translate-y-1/3 md:translate-y-0"
                                      x-transition:enter-end="opacity-100 transform md:translate-x-0 translate-y-0"
                                      x-transition:leave="transition-all ease-in-out duration-300"
                                      x-transition:leave-end="opacity-0 transform md:translate-x-1/3 translate-y-1/3 md:translate-y-0"
                                      @keyup.escape="show = false; $store.xPopup.open = false; shippingRemoveFocus();"
                                      x-intersect.full="shippingFocus()"
                                    >
                                      <button
                                        id="CloseShopping"
                                        class="cursor-pointer top-0.5 md:top-6 absolute right-5 md:right-7 h-10 w-12 z-10 pt-3 pb-3.5 pl-4 pr-4"
                                        @click.prevent="show = false; $store.xPopup.open = false"
                                      >
                                        {%- render 'icon-alls', icon: 'icon-close' -%}
                                      </button>
                                      <div class="overflow-y-auto scrollbar-body max-h-[65vh] min-h-[inherit]">
                                        <div class="pr-5 md:pr-16" x-html="htmlInner"></div>
                                      </div>
                                    </div>
                                  </div>
                                </template>
                              </div>
                              <script src="{{ 'shipping-policy.js' | asset_url }}" defer></script>
                            {%- endif -%}
                          {%- endif -%}
                        </div>
                      {%- endif -%}
                    {%- endif -%}
                    <div  class="shopify-payment-terms">
                      {%- assign product_form_installment_id = 'product-form-installment-' | append: section.id -%}
                      {%- form 'product',
                        product,
                        id: product_form_installment_id,
                        class: 'installment caption-large'
                      -%}
                        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                        {{ form | payment_terms }}
                      {%- endform -%}
                    </div>
                  </div>
                {%- when 'description' -%}
                  {%- if product.description != blank -%}
                    <div
                      class="w-full relative{% if block.settings.show_in_tab %} cursor-pointer border-y border-solid accordion mb-5{% endif %}"
                      {% if block.settings.show_in_tab %}
                        {%- if block.settings.open_by_default %}
                          x-data="{open: true}"
                        {%- else %}
                          x-data="{open: false}"
                        {%- endif -%}
                      {% endif -%}
                      {{ block.shopify_attributes }}
                    >
                      {%- if block.settings.show_in_tab -%}
                        <button
                          class="flex relative pl-2 pr-2 pt-3 pb-3 w-full{% if block.settings.make_content_center or show_content_center %} justify-center{% endif %}"
                          @click.prevent="open = !open"
                        >
                          <p class="font-medium">{{ 'products.product.description' | t }}</p>
                          <span
                            class="w-2.5 inline-block absolute right-2 rtl:left-2 rtl:right-auto top-1/2 -translate-y-1/2{% if block.settings.open_by_default %} rotate-180{% endif %}"
                            :class="open ? 'rotate-180' : 'rotate-0'"
                          >
                            {% render 'icon-alls', icon: 'icon-caret' %}
                          </span>
                        </button>
                      {%- endif -%}
                      <div
                        class="custom-description {% if block.settings.show_in_tab %} pl-2 pr-2 border-t border-solid border-[rgb(var(--colors-text),1)]{% endif %}"
                        {%- if block.settings.show_in_tab -%}
                          x-show="open"
                          {%- unless block.settings.open_by_default %} x-cloak{% endunless %}
                          x-collapse
                        {%- endif -%}
                      >
                        <div class="rte{% if block.settings.make_content_center or show_content_center %} text-center{% endif %}{% if block.settings.show_in_tab %} pt-2 pb-2{% else %} pt-2 pb-2{% endif %}">
                          {%- render 'truncate-text',
                            number_of_lines_shown: block.settings.number_of_lines_shown,
                            blockID: block.id,
                            content: product.description,
                            read_more_label: block.settings.read_more_label
                          -%}
                        </div>
                      </div>
                    </div>
                  {%- endif -%}
                {%- when 'buy_buttons' -%}
                  {% style %}
                    .button-product-{{ block.id }}, .button-product-{{ block.id }} *:before {
                      {% if block.settings.button_light.alpha != 0.0 %}
                        --colors-button: {{ block.settings.button_light.red }}, {{ block.settings.button_light.green }}, {{ block.settings.button_light.blue }};
                      {% endif %}
                      {% if block.settings.button_text_light.alpha != 0.0 %}
                        --colors-button-text: {{ block.settings.button_text_light.red }}, {{ block.settings.button_text_light.green }}, {{ block.settings.button_text_light.blue }};
                      {% endif %}
                      {% if block.settings.button_hover_light.alpha != 0.0 %}
                        --colors-button-hover: rgb({{ block.settings.button_hover_light.red }}, {{ block.settings.button_hover_light.green }}, {{ block.settings.button_hover_light.blue }});
                      {% endif %}
                      {% if block.settings.button_text_hover_light.alpha != 0.0 %}
                        --colors-button-text-hover: {{ block.settings.button_text_hover_light.red }}, {{ block.settings.button_text_hover_light.green }}, {{ block.settings.button_text_hover_light.blue }};
                      {% endif %}
                      {% if block.settings.secondary_button_text_light.alpha != 0.0 %}
                        --colors-secondary-button: {{ block.settings.secondary_button_text_light.red }}, {{ block.settings.secondary_button_text_light.green }}, {{ block.settings.secondary_button_text_light.blue }};
                        --colors-line-secondary-button: {{ block.settings.secondary_button_text_light.red }}, {{ block.settings.secondary_button_text_light.green }}, {{ block.settings.secondary_button_text_light.blue }};
                        --background-secondary-button: transparent;
                      {% endif %}
                      {% if block.settings.secondary_button_light.alpha != 0.0 %}
                        --background-secondary-button: {{ block.settings.secondary_button_light.red }}, {{ block.settings.secondary_button_light.green }}, {{ block.settings.secondary_button_light.blue }};
                        --colors-line-secondary-button: {{ block.settings.secondary_button_light.red }}, {{ block.settings.secondary_button_light.green }}, {{ block.settings.secondary_button_light.blue }};
                      {% endif %}
                    }
                    .dark .button-product-{{ block.id }}, .dark .button-product-{{ block.id }} *:before {
                      {% if block.settings.button_dark.alpha != 0.0 %}
                        --colors-button: {{ block.settings.button_dark.red }}, {{ block.settings.button_dark.green }}, {{ block.settings.button_dark.blue }};
                      {% else %}
                        --colors-button: {{ settings.colors_dark_button.red }}, {{ settings.colors_dark_button.green }}, {{ settings.colors_dark_button.blue }};
                      {% endif %}
                      {% if block.settings.button_text_dark.alpha != 0.0 %}
                        --colors-button-text: {{ block.settings.button_text_dark.red }}, {{ block.settings.button_text_dark.green }}, {{ block.settings.button_text_dark.blue }};
                      {% else %}
                        --colors-button-text: {{ settings.colors_dark_button_text.red }}, {{ settings.colors_dark_button_text.green }}, {{ settings.colors_dark_button_text.blue }};
                      {% endif %}
                      {% if block.settings.button_hover_dark.alpha != 0.0 %}
                        --colors-button-hover: rgb({{ block.settings.button_hover_dark.red }}, {{ block.settings.button_hover_dark.green }}, {{ block.settings.button_hover_dark.blue }});
                      {% else %}
                        --colors-button-hover: rgb({{ settings.colors_dark_button_hover.red }}, {{ settings.colors_dark_button_hover.green }}, {{ settings.colors_dark_button_hover.blue }});
                      {% endif %}
                      {% if block.settings.button_text_hover_dark.alpha != 0.0 %}
                        --colors-button-text-hover: {{ block.settings.button_text_hover_dark.red }}, {{ block.settings.button_text_hover_dark.green }}, {{ block.settings.button_text_hover_dark.blue }};
                      {% else %}
                        --colors-button-text-hover: {{ settings.colors_dark_button_text_hover.red }}, {{ settings.colors_dark_button_text_hover.green }}, {{ settings.colors_dark_button_text_hover.blue }};
                      {% endif %}
                      {% if block.settings.secondary_button_text_dark.alpha != 0.0 %}
                        --colors-secondary-button: {{ block.settings.secondary_button_text_dark.red }}, {{ block.settings.secondary_button_text_dark.green }}, {{ block.settings.secondary_button_text_dark.blue }};
                        --colors-line-secondary-button: {{ block.settings.secondary_button_text_dark.red }}, {{ block.settings.secondary_button_text_dark.green }}, {{ block.settings.secondary_button_text_dark.blue }};
                        --background-secondary-button: transparent;
                      {% else %}
                        --colors-secondary-button: {{ settings.colors_dark_button_secondary.red }}, {{ settings.colors_dark_button_secondary.green }}, {{ settings.colors_dark_button_secondary.blue }};
                        --colors-line-secondary-button: {{ settings.colors_dark_button_secondary.red }}, {{ settings.colors_dark_button_secondary.green }}, {{ settings.colors_dark_button_secondary.blue }};
                      {% endif %}
                      {% if block.settings.secondary_button_dark.alpha != 0.0 %}
                        --background-secondary-button: {{ block.settings.secondary_button_dark.red }}, {{ block.settings.secondary_button_dark.green }}, {{ block.settings.secondary_button_dark.blue }};
                        --colors-line-secondary-button: {{ block.settings.secondary_button_dark.red }}, {{ block.settings.secondary_button_dark.green }}, {{ block.settings.secondary_button_dark.blue }};
                      {% elsif settings.background_dark_button_secondary.alpha != 0.0 %}
                        --background-secondary-button: {{ settings.background_dark_button_secondary.red }}, {{ settings.background_dark_button_secondary.green }}, {{ settings.background_dark_button_secondary.blue }};
                        --colors-line-secondary-button: {{ settings.background_dark_button_secondary.red }}, {{ settings.background_dark_button_secondary.green }}, {{ settings.background_dark_button_secondary.blue }};
                      {% else %}
                        --background-secondary-button: transparent;
                      {% endif %}
                    }
                  {% endstyle %}
                  {%- liquid
                    assign gift_card_recipient_active = false
                    if block.settings.show_gift_card_recipient and product.gift_card?
                      assign gift_card_recipient_active = true
                    endif
                  -%}
                  <div
                    x-ref="product_form_container"
                    class="button-product-{{ block.id }} w-full button-product{% unless forloop.last %} mb-5{% endunless %}{% if settings.edges_type == 'rounded_corners' %} corners-app{% endif %}"
                    {% if settings.gift_wrapping_product != blank
                      and settings.gift_wrapping_product.selected_or_first_available_variant
                    %}
                      x-data="xProductCart('{{ settings.gift_wrapping_product.selected_or_first_available_variant.id }}')"
                    {% else %}
                      x-data="xProductCart()"
                    {% endif %}
                    {{ block.shopify_attributes }}
                  >
                    <div >
                      {%- form 'product',
                        product,
                        id: product_form_id,
                        class: 'form',
                        novalidate: 'novalidate',
                        data-type: 'add-to-cart-form',
                        x-ref: 'product_form'
                      -%}
                      {% if product.tags contains "Tile_calculator" or product.tags contains "overage-popup-v3" %}
                      {% if product.metafields.measuringunitsatd.measuring_units_atd == "Box" %}
                        <input id="property-qty" type="hidden" name="properties[Boxes]" value="1">                        
                        <input id="property-pieces" type="hidden" name="properties[Pieces]" value="{{ tiles_per_box }}">
                      {% elsif product.metafields.measuringunitsatd.measuring_units_atd == "Sheet" %}
                        <input id="property-qty" type="hidden" name="properties[Sheets]" value="1">                        
                      {% endif %}
                        <input id="property-sqft" type="hidden" name="properties[Sq. Ft.]" value="{{ box_area_clean }}">
                        <input id="property-overage" type="hidden" name="properties[Overage]" value="">
                      {% else %}
                        {% if product.metafields.measuringunitsatd.measuring_units_atd == "Piece" %}
                            <input id="property-qty" type="hidden" name="properties[Pieces]" value="{{ tiles_per_box }}">         
                            <script>
                              document.addEventListener('DOMContentLoaded', function() {
                                function setupQuantityTracking() {
                                  const quantityInput = document.querySelector('input[name="quantity"]');
                                  
                                  const propertyInput = document.querySelector('#property-qty');
                                  
                                  if (!quantityInput || !propertyInput) {
                                    console.log('One or both inputs not found, will retry shortly');
                                    setTimeout(setupQuantityTracking, 500);
                                    return;
                                  }
                                  
                                  console.log('Found both inputs, setting up event listeners');
                                  
                                  function updatePropertyValue() {
                                    const quantityValue = quantityInput.value;
                                    
                                    propertyInput.value = quantityValue;
                                    
                                    console.log('Updated Pieces property to:', quantityValue);
                                  }
                                  
                                  updatePropertyValue();
                                  
                                  quantityInput.addEventListener('input', updatePropertyValue);
                                  quantityInput.addEventListener('change', updatePropertyValue);
                                  quantityInput.addEventListener('blur', updatePropertyValue);
                                  
                                  const observer = new MutationObserver(function(mutations) {
                                    mutations.forEach(function(mutation) {
                                      if (mutation.type === 'attributes' && mutation.attributeName === 'value') {
                                        updatePropertyValue();
                                      }
                                    });
                                  });
                                  
                                  observer.observe(quantityInput, { attributes: true });
                                  
                                  let lastValue = quantityInput.value;
                                  setInterval(function() {
                                    if (quantityInput.value !== lastValue) {
                                      lastValue = quantityInput.value;
                                      updatePropertyValue();
                                    }
                                  }, 200);
                                }
                                
                                // Start the setup process
                                setupQuantityTracking();
                                
                                // Also listen for Alpine.js initialization if it might load after this script
                                document.addEventListener('alpine:initialized', setupQuantityTracking);
                              });
                            </script>
                        {% endif %}
                      {% endif %}
                        
                        {%- if gift_card_recipient_active -%}
                          {%- render 'gift-card-recipient',
                            product: product,
                            form: form,
                            section: section,
                            product_form_id: product_form_id,
                            show_content_center: show_content_center
                          -%}
                        {%- endif -%}
                        <input
                          type="hidden"
                          id="update-variant-{{ section.id }}"
                          name="id"
                          value="{{ product.selected_or_first_available_variant.id }}"
                        >
                        <input type="hidden" name="properties[_intuitive_cid]" value="{{ customer.id }}">



                        {% assign variant_weight = product.selected_or_first_available_variant.weight_in_unit %}
                        {% assign variant_unit   = product.selected_or_first_available_variant.weight_unit %}
                        
                        <!-- Hidden input for single-unit weight (only) -->
                        <input 
                          type="hidden" 
                          name="properties[_Unit_Weight]" 
                          value="{{ variant_weight }} {{ variant_unit }}" 
                        />

                        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                      
                        {% if product.tags contains "Special Cut" or product.tags contains "Hand-Made" %}
                          <!-- Hidden input so it won't display on the product page -->
                          <input type="hidden" 
                                 name="properties[Fabrication Lead Time]" 
                                 value="3-6 business day before it ships">
                        {% endif %}


                       {% assign other_names = product.metafields.custom.other_names_aka %}
                        {% if other_names %}
                          <input
                            type="hidden"
                            name="properties[_Other Names (AKA)]"
                            value="{{ other_names | escape }}"
                          />
                        {% endif %}

                      


                        
                        
{% render 'outlink-custom', product:product, o_showOutlink:1, o_hideCart:1 , o_classes: 'relative add_to_cart_button button button-outline disabled:opacity-60 disabled:cursor-not-allowed duration-200 leading-none w-full mb-2 pt-3.5 pb-3.5 md:pt-4 md:pb-4', o_style: '' %}
<div class="o_original_{{ product.id }}">
<div id="atc-btn-wrap">
                        <button
                          id="x-atc-button-{{ section.id }}"
                          role="button"
                          name="add"
                          type="submit"
                          @click="addToCart($event, true)"
                          class="relative add_to_cart_button button button-outline disabled:opacity-60 disabled:cursor-not-allowed duration-200 leading-none w-full{%- unless can_show_preorder %} mb-2{% endunless %} pt-3.5 pb-3.5 md:pt-4 md:pb-4"
                          x-intersect.once.margin.200px="Alpine.store('xCartHelper').validateCart();"
                          {% if product.selected_or_first_available_variant.available == false %}
                            disabled
                          {% endif %}
                        >
                          <span class="x-atc-text" :class="loading && 'opacity-0'">
                            {%- if can_show_preorder -%}
                              {%- assign default_preorder_text = 'products.product.pre_order' | t -%}
                              {{ block.settings.preorder_button_label | default: default_preorder_text }}
                            {%- else -%}
                              {%- if product.selected_or_first_available_variant.available -%}
                                {{ 'products.product.add_to_cart' | t }}
                              {%- else -%}
                                {{ 'products.product.sold_out' | t }}
                              {%- endif -%}
                            {%- endif -%}
                          </span>
                          <div
                            class="inline-block w-5 h-5 animate-spin absolute top-[calc(50%-10px)] left-[calc(50%-10px)]"
                            x-show="loading"
                            x-cloak
                          >
                            {% render 'icon-alls', icon: 'icon-loading' %}
                          </div>
                        </button>    
</div>
                        {%- if block.settings.show_dynamic_checkout
                          and gift_card_recipient_active == false
                          and type_file_upload == false
                        -%}
                          <div
                            class="relative mt-2"
                            x-data="{ show: false }"
                            x-intersect.once.margin.200px="show = true"
                          >
                            <template x-if="show">
                              <div
                                id="x-payment-button-{{ section.id }}"
                                class="payment-button{% if settings.buttons_animation != 'underline' and settings.buttons_animation != 'sliced' %} button-animation{% else %} button-default{% endif %}{% if can_show_preorder == true and block.settings.preorder_show_dynamic_button == false %} hidden{% endif %}"
                                x-intersect.once.margin.200px="$store.xShopifyPaymentBtn.load($el)"
                              >
                                {{ form | payment_button }}
                              </div>
</div>
                            </template>
                            {% if customize_picker_required %}
                              <div
                                x-data="xCustomizePicker"
                                @click="validateError($el)"
                                class="payment-button--clone cursor-pointer absolute z-20 top-0 left-0 right-0 bottom-0"
                              ></div>
                            {% endif %}
                          </div>
                          <script src="{{ 'payment-button.js' | asset_url }}" defer></script>
                        {%- endif -%}
                      {%- endform -%}
                      <div
                        class="flex items-center mb-2 mt-2 pl-4 pr-4 pt-3 pb-3 bg-[rgba(var(--color-error),0.2)]{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}"
                        role="alert"
                        x-cloak
                        x-show="errorMessage"
                        @click.away="errorMessage=false"
                      >
                        <div class="flex">
                          <span class="w-4 h-4">{% render 'icon-alls', icon: 'icon-error' %}</span>
                        </div>
                        <span class="ml-2 pt-0.5" x-ref="error_message"></span>
                      </div>
                      <div
                        class="pre-order-{{ section.id }}"
                        {% if can_show_preorder %}
                          id="pre-order-{{ section.id }}"
                        {% endif %}
                      >
                        {%- if can_show_preorder -%}
                          {%- render 'pre-order',
                            message: block.settings.preorder_message,
                            container_id: block.id,
                            preorder_show_dynamic_button: block.settings.preorder_show_dynamic_button,
                            show_background: block.settings.show_background,
                            box_type: block.settings.box_type,
                            background_color_light: block.settings.background_color_light,
                            message_color_light: block.settings.message_color_light,
                            background_color_dark: block.settings.background_color_dark,
                            message_color_dark: block.settings.message_color_dark
                          -%}
                        {%- endif -%}
                      </div>



  
                      {% if product.tags contains 'Swatch Sample' or '1 Pc Sample' or '4" Sample' or '2 Pcs Sample' or 'Special Cut' %}
                      <style>
                        #sample-button {
                          cursor:pointer;
                        }
                        #sample-popup {
                          position: fixed;
                          top: 0;
                          left: 0;
                          width: 100%;
                          background: #0000004a;
                          height: 100%;
                          display: none;
                          flex-direction: row;
                          align-items: center;
                          backdrop-filter: blur(10px);
                          justify-content: center;
                          transition: 0.4s;
                          z-index: 999;
                        }
                        #sample-popup-content {
                          background: #fff;
                          padding: 20px;
                          border: 1px solid #163155;
                          position: relative;
                          overflow-y: scroll;
                          max-height: 85%;
                          margin: 10px;
                          width:100%;
                          max-width:600px;
                        }
                        #sample-popup.sample-popup-open {
                          display:flex;
                        }
                        #sample-popup-close {
                            max-width: 40px;
                            background-color: #143055;
                            height: 40px;
                            border-radius: 50px;
                            padding: 10px;
                            box-shadow: #959da533 0 8px 24px;
                            position: absolute;
                            right: 5px;
                            top: 5px;
                            display: flex;
                            align-items: center;
                            cursor: pointer;
                        }
                        #sample-popup-close svg {
                            width: 24px;
                            height: 24px;
                            margin-left: auto;
                            stroke-width: 4px;
                            stroke: #fff !important;
                        }
                        #sample-popup .section-intro {
                            margin-bottom: 1rem;
                        }
                        div#sample-popup a {
                            text-decoration: underline;
                        }
                        #sample-size-input {
                            border: 1px solid rgba(var(--colors-line-and-border), 1);
                            margin: 10px 10px 10px 0;
                            line-height: 2rem;
                            font-size: 1rem;
                            padding: 0 10px;
                            outline: none;
                            width: 100px;
                        }
                        #sample-submit {
                          cursor:pointer;
                        }
                      </style>
                        
                      {% if product.tags contains 'Swatch Sample' %}
                          <div id="sample-button" class="relative button button-outline duration-200 leading-none w-full mb-2 pt-3.5 pb-3.5" data-sample-variant="41177586204747">Get a sample for $4.99 with free shipping!</div>
                      {% elsif product.tags contains '1 Pc Sample' %}
                          <div id="sample-button" class="relative button button-outline duration-200 leading-none w-full mb-2 pt-3.5 pb-3.5" data-sample-variant="41177586237515">Get a sample for $4.99 with free shipping!</div>
                      {% elsif product.tags contains '4" Sample' %}
                          <div id="sample-button" class="relative button button-outline duration-200 leading-none w-full mb-2 pt-3.5 pb-3.5" data-sample-variant="41177586303051">Get a sample for $4.99 with free shipping!</div>
                      {% elsif product.tags contains '2 Pcs Sample' %}
                          <div id="sample-button" class="relative button button-outline duration-200 leading-none w-full mb-2 pt-3.5 pb-3.5" data-sample-variant="41177586270283">Get a sample for $4.99 with free shipping!</div>
                      {% elsif product.tags contains 'Special Cut' %}
                          <div id="sample-button" class="relative button button-outline duration-200 leading-none w-full mb-2 pt-3.5 pb-3.5" data-sample-variant="41185475264587">Get a sample for $4.99 with free shipping!</div>
                      {% endif %}


                      <div id="sample-popup">
                        <div id="sample-popup-content">
                          
                          <div id="sample-popup-close">
                            <svg viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="#000000">
                              <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                              <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                              <g id="SVGRepo_iconCarrier">
                                <line x1="16" y1="16" x2="48" y2="48"></line>
                                <line x1="48" y1="16" x2="16" y2="48"></line>
                              </g>
                            </svg>
                          </div>
                          
                          <div class="heading">
                            <span>Sample</span>
                          </div>
                          
                          <div class="section-intro">
                            <p>
                              Are you trying to <b>match</b> an item you already have? <br>
                              If so, please fill out our <a href="/pages/item-matching-form"><b>Item Matching Form</b></a> and we'll contact you shortly.
                            </p>
                          </div>
                          
                          <div class="calculator-section line-separator"></div>
                          
                          <p>What is the square footage you'll need for your project if the sample works for you?</p>
                          
                          <input id="sample-size-input" type="text" name="sample-size-input" />
                          <span class="sample-size-unit">
                            {% assign unit = product.metafields.measuringunitsatd.measuring_units_atd %}
                            {% assign unit_down = unit | downcase %}
                            {% if unit_down == 'box' %}
                              Sq. Ft. (Required)
                            {% elsif unit_down == 'sheet' %}
                              Sheets (Required)
                            {% elsif unit_down == 'piece' %}
                              Pieces (Required)
                            {% else %}
                              Sq. Ft. (Required)
                            {% endif %}
                          </span>
                          
                          <div id="sample-submit" class="relative button button-outline duration-200 leading-none w-full mb-2 pt-3.5 pb-3.5">
                            Add Sample To Cart
                            <div class="inline-block w-5 h-5 animate-spin absolute top-[calc(50%-10px)] left-[calc(50%-10px)]" x-show="loading" x-cloak>
                              {% render 'icon-alls', icon: 'icon-loading' %}
                            </div>
                          </div>
                          
                        </div>
                      </div>

    
                      <script defer="defer">
                        $(document).ready(function() {
                          $("#sample-popup").click(function(event) {
                            var container = $("#sample-popup-content");
                            if (!container.is(event.target) && !container.has(event.target).length) {
                              $("#sample-popup").removeClass("sample-popup-open");
                              $(this).parents('html').removeClass('overflow-pop-hidden');
                            }
                          });
                          
                          $("#sample-popup-close").click(function(event) {
                              $("#sample-popup").removeClass("sample-popup-open");
                              $(this).parents('html').removeClass('overflow-pop-hidden');
                          });
                          
                          $("#sample-button").click(function(){
                            $(this).parents('html').addClass('overflow-pop-hidden');
                            $("#sample-popup").addClass("sample-popup-open");
                          });

                          $('#sample-submit').on('click', function() {
                              var sampleSize = $('#sample-size-input').val().trim();
                              var variantId = $('#sample-button').data('sample-variant');
                              if ($.isNumeric(sampleSize) && sampleSize !== '') {
                                  var data = {
                                      items: [{
                                          id: variantId,
                                          quantity: 1,
                                          properties: {
                                              "Sample of": "{{ product.title }}",
                                              {% if product.metafields.custom.other_names_aka != blank %}
                                              "Other Names (AKA)": "{{ product.metafields.custom.other_names_aka }}",
                                              {% endif %}
                                              "SKU": "{{ product.variants.first.sku }}",
                                              "Vendor": "{{ product.vendor }}",
                                              "Required Size for Project": sampleSize
                                            
                                          }
                                      }]
                                  };
                      
                                  $.ajax({
                                      type: 'POST',
                                      url: '/cart/add.js',
                                      data: JSON.stringify(data),
                                      dataType: 'json',
                                      contentType: 'application/json; charset=utf-8',
                                      success: function() {
                                          // Redirect user to the cart page
                                          window.location.href = '/cart';
                                      },
                                      error: function() {
                                          alert('Failed to add sample to cart. Please try again.');
                                      }
                                  });
                              } else {
                                  alert('Please enter a valid square footage.');
                                  // Restore button text if validation fails
                                  $('#sample-submit').html('Add Sample To Cart');
                              }
                          });

                        });
                      </script>

                      {% endif %}





                            
  
                      {%- if block.settings.pickup_availability -%}
                        <div
                          id="pickup-pre-order-{{ section.id }}"
                          class="mt-6 {% if can_show_preorder and block.settings.hide_when_pre_order %} hidden disable-pickup{% endif %}"
                        >
                          <div
                            id="pickup-{{ section.id }}"
                            class="pick-up-{{ section.id }}{% if show_content_center %} text-center{% endif %}"
                            x-intersect.once.margin.300px="$store.xPickupAvailable.updatePickUp('{{ section.id }}', '{{ product.selected_or_first_available_variant.id }}')"
                          ></div>
                        </div>
                      {%- endif -%}
                    </div>
                  </div>
                  {% if sticky_atc %}
                    <div class="relative">
                      <div
                        x-intersect:leave="showStickyATC = true"
                        x-intersect="showStickyATC = false"
                        class="absolute bottom-0 opacity-0 w-0 h-[100vh] -z-10"
                      ></div>
                    </div>
                  {% endif %}
                  {% assign show_content_center = false %}
                  <script src="{{ 'product-cart.js' | asset_url }}" defer></script>
                {%- when 'variant_picker' -%}
                  {%- unless btn_addtocart -%}
                    {%- form 'product',
                      product,
                      id: product_form_id,
                      class: 'form',
                      novalidate: 'novalidate',
                      data-type: 'add-to-cart-form',
                      x-ref: 'product_form'
                    -%}
                      <input
                        type="hidden"
                        id="update-variant-{{ section.id }}"
                        name="id"
                        value="{{ product.selected_or_first_available_variant.id }}"
                      >
                    {%- endform -%}
                  {%- endunless -%}
                  {%- unless product.has_only_default_variant -%}
                    <div
                      x-data="xVariantSelect('{{ section.id }}', {{ is_product_page | default: false }}, '{{ unavailable_text }}', '{{ product.url }}', '{{ product.id }}', {{ show_first_image_avaiable }}, false, false, false, '{{ product.selected_or_first_available_variant.id }}')"
                      class="w-full {% if block.settings.picker_type == 'button' %} mb-5{% endif %}"
                      {{ block.shopify_attributes }}
                    >
                      <script type="application/json">
                        {{ product.variants | json }}
                      </script>
                      <div
                        id="variant-update-{{ section.id }}"
                        class="variant-update-{{ section.id }} {% if block.settings.picker_type == 'button' %}block{% else %}grid grid-cols-2 md:gap-x-5 gap-x-2.5 mt-2 mb-2{% endif %}"
                        {% if show_first_image_avaiable %}
                          x-intersect.once.margin.800px="initMedia()"
                        {% elsif show_media_with_variant_selected %}
                          x-intersect.once.margin.800px="_updateMultiMediaWithVariant()"
                        {% endif %}
                      >
                        {%- for option in product.options_with_values -%}
                          {%- assign option_index = forloop.index | minus: 1 -%}
                          {%- if block.settings.picker_type == 'button' -%}
                            <fieldset
                              id="Option-{{ section.id }}-{{ forloop.index0 }}"
                              class="product-form__input pl-0 flex flex-wrap{% if show_content_center %} text-center justify-center{% endif %} pb-5 quick-view:pb-2 eurus"
                              x-init="options[{{ forloop.index | minus: 1 }}] = document.querySelector('#Option-{{ section.id }}-{{ forloop.index0 }} input:checked').value"
                              data-option-name="{{ option.name | handle }}"
                              data-option-index="{{ forloop.index | minus: 1 }}"
                            >
                              {% if block.settings.show_variant_option %}
                                <legend class="font-medium">
                                  {{ option.name -}}
                                  {%- if block.settings.enable_color_swatches
                                    and settings.color_option_name contains option.name
                                  -%}
                                    :
                                    <span x-text=" options[{{ option_index }}]"></span>
                                  {% endif %}
                                </legend>
                              {% endif %}
                              {% render 'product-variant-options',
                                product: product,
                                option: option,
                                option_index: option_index,
                                product_form_id: product_form_id,
                                input_type: 'radio',
                                enable_color_swatches: block.settings.enable_color_swatches,
                                rounded_corner_option: rounded_corner_image,
                                show_media_with_variant_selected: show_media_with_variant_selected,
                                media_with_option: media_with_option
                              %}
                            </fieldset>
                          {%- else -%}
                            <div
                              data-option-name="{{ option.name | handle }}"
                              data-option-index="{{ forloop.index | minus: 1 }}"
                              x-init="options[{{ forloop.index | minus: 1 }}] = document.getElementById('Option-{{ section.id }}-{{ forloop.index0 }}').value"
                            >
                              {%- if block.settings.show_variant_option -%}
                                <label class="mt-1 mb-1 font-medium" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                                  {{ option.name }}
                                </label>
                              {%- endif -%}
                              <div class="select relative outline-none eurus">
                                <select
                                  id="Option-{{ section.id }}-{{ forloop.index0 }}"
                                  class="product-form__input w-full capitalize pt-2.5 pb-2.5 pl-5 pr-8 rtl:pr-5 rtl:pl-8 mt-2 mb-2 bg-transparent focus:border-current border appearance-none outline-none border-solid focus-visible:outline-none cursor-pointer{% if settings.edges_type == 'rounded_corners' %} !rounded-md{% endif %}"
                                  name="{{ option.name }}"
                                  form="{{ product_form_id }}"
                                  x-model="options[{{ option_index }}]"
                                >
                                  {% render 'product-variant-options',
                                    product: product,
                                    option: option,
                                    option_index: option_index,
                                    product_form_id: product_form_id,
                                    input_type: 'select',
                                    enable_color_swatches: block.settings.enable_color_swatches,
                                    show_media_with_variant_selected: show_media_with_variant_selected,
                                    media_with_option: media_with_option
                                  %}
                                </select>
                                <span class="absolute top-1/2 right-4 rtl:right-auto rtl:left-4 -translate-y-1/2 w-2.5 inline-block pointer-events-none">
                                  {% render 'icon-alls', icon: 'icon-caret' %}
                                </span>
                              </div>
                            </div>
                          {% endif %}
                        {%- endfor -%}
                      </div>
                    </div>
                  {%- else -%}
                    <div
                      x-init="
                        document.addEventListener('eurus:cart:items-changed', () => {
                          Alpine.store('xUpdateVariantQuanity').updateQuantity('{{ section.id }}', '{{ product.url }}');
                        });
                      "
                    ></div>
                  {%- endunless -%}
                  <script src="{{ 'variant-select.js' | asset_url }}" defer></script>
                {%- when 'quantity_selector' -%}
                  <div 
                    class="mb-5 product-form__quantity w-full{% if show_content_center %} text-center{% endif %} {% if product.tags contains 'Tile_calculator' %}hidden quantity--hidden{% endif %}"
                    {{ block.shopify_attributes }}
                  >
                    {% comment %} TODO: enable theme-check once `item_count_for_variant` is accepted as valid filter {% endcomment %}
                    {% # theme-check-disable %}
                    {%- assign cart_qty = cart
                      | item_count_for_variant: product.selected_or_first_available_variant.id
                    -%}
                    {% # theme-check-enable %}
                    <label id="x-quantity-{{ section.id }}" for="Quantity-{{ section.id }}">
                      {{ 'products.product.quantity.label' | t }}
                      <span class="quantity__rules-cart unavailable:hidden no-js-hidden relative{% if cart_qty == 0 %} hidden{% endif %}">
                        <span class="loading-overlay hidden absolute top-0 right-0 z-10 w-4 md:left-0">
                          {% render 'icon-alls', icon: 'icon-loading' %}
                        </span>
                        <span
                          >(
                          {{- 'products.product.quantity.in_cart_html' | t: quantity: cart_qty -}}
                          )</span
                        >
                      </span>
                    </label>
                    <div class="w-full">
                      <div
                        class="inline-flex border w-fit items-center mt-2.5 bg-[rgba(var(--background-color),1)]{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}"
                        x-data="
                          {
                            qty: 1,
                            minus(value) {
                              this.qty = parseInt(this.qty);
                              (this.qty == 1) ? this.qty = 1 : this.qty -= value;
                            },
                            plus(value) {
                              this.qty = parseInt(this.qty);
                              this.qty += value;
                            },
                            invalid(el) {
                              number = parseFloat(el.value);
                              if (!Number.isInteger(number) || number < 1) {
                                this.qty = 1;
                              }
                            }
                          }
                        "
                        x-init="
                          $nextTick(() => {
                            qty = document.getElementById('Quantity-{{ section.id }}').value;
                          })
                        "
                      >
                        <button
                          class="w-10 cursor-pointer pt-4 pb-4 md:pt-5 md:pb-5 bg-transparent pl-3.5 pr-3.5 select-none opacity-70"
                          name="minus"
                          aria-label="minus"
                          @click.prevent="minus(1)"
                        >
                          {% render 'icon-alls', icon: 'icon-minus' %}
                        </button>
                        <input
                          class="outer-spin-button hide-spin-input focus:outline-none w-8 md:w-10 pt-2 pb-2 md:pt-2.5 md:pb-2.5 text-center bg-transparent"
                          type="number"
                          name="quantity"
                          id="Quantity-{{ section.id }}"
                          min="1"
                          value="1"
                          form="{{ product_form_id }}"
                          x-model="qty"
                          x-on:blur="invalid($el)"
                        >
                        <button
                          class="w-10 cursor-pointer pt-2.5 pb-2.5 md:pt-3.5 md:pb-3.5 bg-transparent pr-3.5 pl-3.5 select-none opacity-70"
                          name="plus"
                          @click.prevent="plus(1)"
                          aria-label="minus"
                        >
                          {% render 'icon-alls', icon: 'icon-plus' %}
                        </button>
                      </div>
                    </div>
                  </div>
                {%- when 'inventory_status' -%}
                  {% liquid
                    if product.selected_or_first_available_variant.inventory_management == 'shopify'
                      if product.selected_or_first_available_variant.inventory_quantity > 0
                        if product.selected_or_first_available_variant.inventory_quantity <= settings.low_stock_threshold
                          assign color_inventory = 'bg-[#f4af29]'
                          if settings.show_quantity
                            assign text_inventory = 'products.product.inventory_low_stock_show_count' | t: quantity: product.selected_or_first_available_variant.inventory_quantity
                          else
                            assign text_inventory = 'products.product.inventory_low_stock' | t
                          endif
                        else
                          assign color_inventory = 'bg-[#54c63a]'
                          if settings.show_quantity
                            assign text_inventory = 'products.product.inventory_in_stock_show_count' | t: quantity: product.selected_or_first_available_variant.inventory_quantity
                          else
                            assign text_inventory = 'products.product.inventory_in_stock' | t
                          endif
                        endif
                      else
                        if product.selected_or_first_available_variant.inventory_policy == 'continue' and can_show_preorder != true
                          assign color_inventory = 'bg-[#54c63a]'
                          assign text_inventory = 'products.product.inventory_out_of_stock_continue_selling' | t
                        else
                          assign color_inventory = 'bg-[#CE021E]'
                          assign text_inventory = 'products.product.inventory_out_of_stock' | t
                        endif
                      endif
                    endif
                  %}
                  <div class="w-full" id="block-inventory-{{ section.id }}">
                    <div
                      class="flex{% if show_content_center %} justify-center{% endif %} items-center mb-5{% if product.selected_or_first_available_variant.inventory_management != 'shopify' %} hidden{% endif %}"
                      {{ block.shopify_attributes }}
                    >
                      <span class="flex h-3 w-3 relative mr-2 rtl:mr-0 rtl:ml-2">
                        <span
                          class="animate-ping absolute inline-flex h-full w-full rounded-full opacity-75 {{ color_inventory }}"
                        ></span>
                        <span class="relative inline-flex rounded-full h-3 w-3 {{ color_inventory }}"></span>
                      </span>
                      <p>{{ text_inventory }}</p>
                    </div>
                  </div>
                {%- when 'collapsible_tab' -%}
                  {%- if block.settings.heading != blank or block.settings.tab_content != blank -%}
                    <div
                      class="w-full mb-5 border-y border-solid accordion"
                      {% if block.settings.open_by_default %}
                        x-data="{open: true}"
                      {% else %}
                        x-data="{open: false}"
                      {% endif -%}
                      {{ block.shopify_attributes }}
                    >
                      <button
                        class="flex relative w-full pt-3 pb-3 pl-2 pr-2 cursor-pointer{% if show_content_center %} justify-center{% endif %}"
                        @click="open = !open"
                      >
                        <p class="pr-6 rtl:pr-0 rtl:pl-6 font-medium">{{ block.settings.heading | escape }}</p>
                        <span
                          class="w-2.5 inline-block absolute right-2 rtl:left-2 rtl:right-auto top-1/2 -translate-y-1/2 duration-500{% if block.settings.open_by_default %} rotate-180{% endif %}"
                          :class="open ? 'rotate-180' : 'rotate-0'"
                        >
                          {% render 'icon-alls', icon: 'icon-caret' %}
                        </span>
                      </button>
                      {%- if block.settings.tab_content != blank -%}
                        <div
                          class="pl-2 pr-2{% if show_content_center %} text-center{% endif %} border-t border-solid border-[rgb(var(--colors-text),1)]"
                          x-show="open"
                          {% unless block.settings.open_by_default %}
                            x-cloak
                          {% endunless %}
                          x-collapse
                        >
                          <div class="rte pt-2 pb-2">
                            {{ block.settings.tab_content }}
                          </div>
                        </div>
                      {%- endif -%}
                    </div>
                  {%- endif -%}
                {%- when 'social_sharing' -%}
                  <div
                    class="flex{% if show_content_center %} justify-center{% endif %} w-full mt-2 items-center mb-5"
                    {{ block.shopify_attributes }}
                  >
                    <p class="mr-1">{{ 'products.product.share_social' | t }}</p>
                    {% render 'social-sharing',
                      share_title: product.title,
                      share_permalink: product.url,
                      share_image: product
                    %}
                  </div>
                {% when 'collection_link' %}
                  {% if block.settings.text != blank %}
                    {% style %}
                      .collection-link--{{ block.id }} {
                        {% if block.settings.background_color_light.alpha != 0.0 %}
                          background: {{ block.settings.background_color_light }};
                        {% else %}
                          background: rgb(var(--colors-background-secondary));
                        {% endif %}
                        {% if block.settings.text_light.alpha != 0.0 %}
                          --colors-text: {{ block.settings.text_light.red }},{{ block.settings.text_light.green }},{{ block.settings.text_light.blue }};
                        {% else %}
                          --colors-text: var(--colors-text-secondary);
                        {% endif %}
                      }
                      .dark .collection-link--{{ block.id }} {
                        {% if block.settings.background_color_dark.alpha != 0.0 %}
                          background: {{ block.settings.background_color_dark }};
                        {% else %}
                          background: rgb(var(--colors-background-secondary));
                        {% endif %}
                        {% if block.settings.text_dark.alpha != 0.0 %}
                          --colors-text: {{ block.settings.text_dark.red }},{{ block.settings.text_dark.green }},{{ block.settings.text_dark.blue }};
                        {% else %}
                          --colors-text: var(--colors-text-secondary);
                        {% endif %}
                      }
                    {% endstyle %}
                    {%- liquid
                      if collection
                        assign collection_title = collection.title | escape
                        assign collection_url = collection.url | escape
                      elsif product.collections[0].url
                        assign collection_title = product.collections[0].title | escape
                        assign collection_url = product.collections[0].url | escape
                      endif
                    -%}
                    {% if collection_title %}
                      <div
                        class="mb-4 w-full flex{% if show_content_center %} justify-center{% endif %} block-collection-link"
                        {{ block.shopify_attributes }}
                      >
                        <a
                          class="collection-link--{{ block.id }} text-[rgb(var(--colors-text))] pt-2 pb-2 pl-5 pr-5 {% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}"
                          href="{{ collection_url }}"
                        >
                          {{- block.settings.text | replace: 'collection_name', collection_title -}}
                        </a>
                      </div>
                    {% endif %}
                  {% endif %}
                {%- when 'text' -%}
                  {%- if block.settings.text != blank -%}
                    <div
                      class="mb-5 w-full rte{% if show_content_center %} text-center{% endif %}"
                      {{ block.shopify_attributes }}
                    >
                      {%- render 'truncate-text',
                        number_of_lines_shown: block.settings.number_of_lines_shown,
                        blockID: block.id,
                        content: block.settings.text,
                        read_more_label: block.settings.read_more_label
                      -%}
                    </div>
                  {%- endif -%}
                {%- when 'size_chart' -%}
                  {%- if block.settings.select_page != blank -%}
                    <div
                      class="mb-5 w-full{% if show_content_center %} text-center{% endif %}"
                      x-data="
                        {
                          openSizeChart: false ,
                          sizeChartFocus() {
                            Alpine.store('xFocusElement').trapFocus('SizeChart','CloseSizeChart');
                          },
                          sizeChartRemoveFocus() {
                            const activeElement = document.getElementById('OpenSizeChart');
                            Alpine.store('xFocusElement').removeTrapFocus(activeElement);
                            this.openSizeChart = false;
                            $store.xPopup.open = false;
                          }
                        }
                      "
                      {{ block.shopify_attributes }}
                    >
                      <button
                        id="OpenSizeChart"
                        class="button-link effect-inline relative inline-flex items-center cursor-pointer hover:text-[rgba(var(--colors-text-link))]"
                        @click.prevent="openSizeChart = true; $store.xPopup.open = true"
                      >
                        <span class="h-5 w-5 mr-2 rtl:ml-2 rtl:mr-0 flex items-center">
                          {%- render 'icon-alls', icon: 'icon-sizechart' -%}
                        </span>
                        <p>
                          {% if block.settings.heading != blank -%}
                            {{- block.settings.heading -}}
                          {%- else -%}
                            {{- 'products.product.size_chart' | t -}}
                          {%- endif %}
                        </p>
                      </button>
                      <template x-teleport="body">
                        <div
                          id="SizeChart"
                          x-show="openSizeChart"
                          x-cloak
                          class="w-full h-full fixed top-0 left-0 z-50 bg-[#acacac] bg-opacity-30"
                        >
                          <div
                            x-show="openSizeChart"
                            @click.away="openSizeChart = false; $store.xPopup.open = false"
                            class="bg-[rgba(var(--background-color))] pl-5 py-10 md:py-16 md:pl-16 relative min-h-[calc(75vh-80px)] md:min-h-[400px] max-w-3xl md:ml-auto md:mr-auto mt-[25vh] md:mt-[9vh]{% if settings.edges_type == 'rounded_corners' %} md:rounded-[10px]{% endif %}"
                            x-transition:enter="transitionall ease-in-out duration-300"
                            x-transition:enter-start="opacity-0 transform md:-translate-x-1/3 translate-y-1/3 md:translate-y-0"
                            x-transition:enter-end="opacity-100 transform md:translate-x-0 translate-y-0"
                            x-transition:leave="transition-all ease-in-out duration-300"
                            x-transition:leave-end="opacity-0 transform md:translate-x-1/3 translate-y-1/3 md:translate-y-0"
                            x-intersect.full="sizeChartFocus();"
                            @keyup.escape="sizeChartRemoveFocus();"
                          >
                            <button
                              id="CloseSizeChart"
                              @click="sizeChartRemoveFocus();"
                              class="cursor-pointer top-0.5 md:top-6 absolute right-5 md:right-7 rtl:right-auto rtl:md:right-auto rtl:left-5 rtl:md:left-5 h-10 w-12 z-10 pt-3 pb-3.5 pl-4 pr-4"
                            >
                              {%- render 'icon-alls', icon: 'icon-close' -%}
                            </button>
                            <div class="overflow-y-auto scrollbar-body scrollbar-horizontal pr-5 md:pr-16 max-h-[65vh] min-h-[inherit]">
                              <div class="rte size-chart">
                                {%- if block.settings.select_page.title != blank -%}
                                  <h3 class="mb-5 text-[{{ settings.heading_base_size | times: 0.0225 | times: 0.5 }}rem] md:text-[{{ settings.heading_base_size | times: 0.0225 | times: 0.6 }}rem] pt-2 pb-2 text-center">
                                    {{ block.settings.select_page.title | escape }}
                                  </h3>
                                {%- endif -%}
                                {%- if block.settings.select_page.content != blank -%}
                                  {{ block.settings.select_page.content }}
                                {%- endif -%}
                              </div>
                            </div>
                          </div>
                        </div>
                      </template>
                    </div>
                  {%- endif -%}
                {%- when 'badges' -%}
                  {%- capture dataForLabel -%}
                    {
                      "id": {{ product.id }},
                      "available": {{ product.selected_or_first_available_variant.available | default: false }},
                      "title": "{{ product.title | escape }}",
                      "compare_at_price": {{ product.selected_or_first_available_variant.compare_at_price | default: 0 }},
                      "price": {{ product.selected_or_first_available_variant.price | default: 0 }},
                      "price_with_currency": "{% if settings.currency_code_enable %}{{ product.selected_or_first_available_variant.price | money_with_currency | escape }}{% else %}{{ product.selected_or_first_available_variant.price | money | escape }}{% endif %}",
                      "sale_amount": "{{ product.selected_or_first_available_variant.compare_at_price | minus: product.selected_or_first_available_variant.price | money | strip_html }}",
                      "collections": "||{{ product.collections | map: 'id' | join: '||' }}||",
                      "inventory_management": "{{ product.selected_or_first_available_variant.inventory_management }}",
                      "qty": {{ product.selected_or_first_available_variant.inventory_quantity | default: -1 }},
                      "container": "product-info",
                      "make_content_center": {{ show_content_center }}
                    }
                  {%- endcapture %}
                  <!--
                    <div class="w-full" id="x-badges-{{ section.id }}" {{ block.shopify_attributes }}>
                      <div
                        class="x-badges-container text-sm x-badges-product-detail empty:h-0 empty:min-h-0 empty:mb-0 min-h-[45px] flex items-center flex-wrap gap-x-1 gap-y-2 md:gap-y-4 mb-5{% if show_content_center %} justify-center{% endif %}"
                        x-init='
                          () => {
                            if ($store.xBadges) {
                              const container = document.querySelector("#x-badges-{{ section.id }}");
                              $store.xBadges.load($el, (el) => {
                                el.removeAttribute("x-init");
                                container.innerHTML = el.outerHTML;
                              }, container)
                            }
                          }
                        '
                        x-labels-data="{{ dataForLabel | escape }}"
                      ></div>
                    </div>
                  -->
                {%- when 'estimate_delivery' -%}
                  {% liquid
                    assign disable_cart_edt = false
                    if can_show_preorder and block.settings.hide_when_pre_order
                      assign disable_cart_edt = true
                    endif
                  %}
                  <div
                    id="x-estimate-delivery-{{ section.id }}"
                    class="w-full mb-5 pt-0.5 pb-0.5{% if can_show_preorder and block.settings.hide_when_pre_order %} hidden disable-estimate{% endif %}"
                    {{ block.shopify_attributes }}
                  >
                    {%- assign container_id = '#x-estimate-delivery-' | append: section.id -%}
                    {%- render 'estimate-delivery',
                      product: product,
                      message: block.settings.message,
                      tooltip_text: block.settings.tooltip_text,
                      tooltip_icon: block.settings.tooltip_icon,
                      custom_icon: block.settings.custom_icon,
                      tooltip_message: block.settings.tooltip_message,
                      tooltip_icon_position: block.settings.tooltip_icon_position,
                      container_id: container_id,
                      show_background: block.settings.show_background,
                      box_type: block.settings.box_type,
                      background_color_light: block.settings.background_color_light,
                      message_color_light: block.settings.message_color_light,
                      background_color_dark: block.settings.background_color_dark,
                      message_color_dark: block.settings.message_color_dark,
                      bg_tooltip_color_light: block.settings.bg_tooltip_color_light,
                      tooltip_color_light: block.settings.tooltip_color_light,
                      bg_tooltip_color_dark: block.settings.bg_tooltip_color_dark,
                      tooltip_color_dark: block.settings.tooltip_color_dark,
                      show_content_center: show_content_center
                    -%}
                  </div>
                {%- when 'separator' -%}
                  <div class="border-t border-solid w-full mb-5" {{ block.shopify_attributes }}></div>
                {%- when 'html' -%}
                  <div class="mb-5 w-full" {{ block.shopify_attributes }}>
                    {{ block.settings.custom_html }}
                  </div>
                {%- when 'rating' -%}
                  {%- liquid
                    assign star_haft = 0
                    assign star_fill = 0
                    assign star_empty = 0
                    if product.metafields.reviews.rating.value != blank
                      assign star_fill = product.metafields.reviews.rating.value.rating | floor
                      assign decimal = product.metafields.reviews.rating.value.rating | modulo: 1
                      if decimal >= 0.3 and decimal <= 0.7
                        assign star_haft = 1
                      elsif decimal > 0.7
                        assign star_fill = star_fill | plus: 1
                      endif
                      assign star_empty = product.metafields.reviews.rating.value.scale_max | minus: star_haft | minus: star_fill | floor
                      if star_empty > 0
                        assign star_empty = 'icon_empty_' | append: star_empty
                      else
                        assign star_empty = blank
                      endif
                      if star_fill > 0
                        assign star_fill = 'icon_fill_' | append: star_fill
                      else
                        assign star_fill = blank
                      endif
                    else
                      assign star_empty = 'icon_empty_' | append: 5
                    endif
                  -%}
                  <div
                    class="w-full flex mb-5 items-center{% if show_content_center %} justify-center{% endif %}"
                    {{ block.shopify_attributes }}
                  >
                    <div
                      class="rating gap-1 flex text-[rgb(var(--colors-text),0.3)]"
                      role="img"
                      aria-label="{{ 'accessibility.star_reviews_info' | t: rating_value: card_product.metafields.reviews.rating.value, rating_max: card_product.metafields.reviews.rating.value.scale_max }}"
                    >
                      {%- liquid
                        if star_fill != blank
                          render 'icon-review', icon: star_fill, icon_star: ' h-3 md:h-4 w-3 md:w-4'
                        endif
                        if star_haft > 0
                          render 'icon-review', icon: 'icon_haft', icon_star: ' h-3 md:h-4 w-3 md:w-4'
                        endif
                        if star_empty != blank
                          render 'icon-review', icon: star_empty, icon_star: ' h-3 md:h-4 w-3 md:w-4'
                        endif
                      -%}
                    </div>
                    <p class="rating-count block ml-1.5 leading-none pt-1">
                      {%- if product.metafields.reviews.rating_count -%}
                        ({{ product.metafields.reviews.rating_count }})
                      {%- else %}
                        (0)
                      {%- endif %}
                    </p>
                  </div>
                {%- when 'trust_badge' -%}
                  {% if block.settings.badge != blank %}
                    <div
                      class="mb-5 overflow-hidden w-full{% if settings.edges_type == 'rounded_corners' %} rounded-[10px]{% endif %}"
                      {{ block.shopify_attributes }}
                    >
                      <img
                        srcset="
                          {{ block.settings.badge | image_url: width: 450 }} 450w,
                          {{ block.settings.badge | image_url: width: 750 }} 750w,
                          {{ block.settings.badge | image_url: width: 900 }} 900w,
                          {{ block.settings.badge | image_url: width: 1100 }} 1100w,
                          {{ block.settings.badge | image_url: width: 1500 }} 1500w,
                          {{ block.settings.badge | image_url: width: 1780 }} 1780w
                        "
                        src="{{ block.settings.badge | image_url: width: 1780 }}"
                        alt="{{ block.settings.badge.alt | escape }}"
                        loading="lazy"
                        width="{{ block.settings.badge.width }}"
                        height="{{ block.settings.badge.height }}"
                        class="w-full h-full image-hover"
                      >
                    </div>
                  {% endif %}
                {%- when 'view_detail' -%}
                  <div class="mb-5 w-full{% if show_content_center %} text-center{% endif %} pr-1">
                    <a
                      class="button-link cursor-pointer disable-effect font-medium hover:text-[rgba(var(--colors-text-link))]"
                      href="{{ product.url }}"
                      {{ block.shopify_attributes }}
                    >
                      {{- 'products.product.view_full_details' | t -}}
                    </a>
                  </div>
                {%- when 'complementary' -%}
                  <div
                    x-intersect.once.margin.200px="$store.xProductRecommendations.load($el, '{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ block.settings.max_product_show }}&intent=complementary')"
                    class="product-recommendations main-product w-full accordion"
                    {{ block.shopify_attributes }}
                  >
                    {%- if recommendations.performed and recommendations.products_count > 0 -%}
                      <div
                        {% if block.settings.show_tab %}
                          x-data="{ openComplementary: false }"
                        {% endif %}
                        {% if block.settings.show_background %}
                          style="--colors-heading: var(--colors-heading-secondary); --colors-text: var(--colors-text-secondary);"
                        {% endif %}
                      >
                        <div
                          class="flex relative pt-3 pb-3 pl-2 pr-2{% if block.settings.show_tab %} cursor-pointer{% endif %}"
                          {% if block.settings.show_tab %}
                            @click="openComplementary = !openComplementary" :class="openComplementary "
                          {% endif %}
                        >
                          <p class="leading-tight font-medium">{{ block.settings.heading | escape }}</p>
                          {% if block.settings.show_tab %}
                            <span
                              class="w-2.5 inline-block absolute right-2 rtl:left-2 rtl:right-auto top-1/2 -translate-y-1/2 duration-300"
                              :class="openComplementary && 'rotate-180'"
                            >
                              {% render 'icon-alls', icon: 'icon-caret' %}
                            </span>
                          {% endif %}
                        </div>
                        {% liquid
                          assign number_of_slides = recommendations.products_count | plus: 0.0 | divided_by: block.settings.number_product_per_page | ceil
                          assign enable_desktop_slider = block.settings.enable_carousel_desktop
                          assign swiper_on_mobile = block.settings.enable_swiper_mobile
                          if recommendations.products_count <= block.settings.number_product_per_page
                            assign enable_desktop_slider = false
                            assign swiper_on_mobile = false
                          endif
                        %}
                        <div
                          id="x-product-complementary-{{ section.id }}"
                          class="{% unless block.settings.show_background %}border border-b-0 border-solid px-6 md:px-7 {% else %}{% unless enable_desktop_slider and swiper_on_mobile %} pb-5{% endunless %}{% endunless %}{% if enable_desktop_slider or swiper_on_mobile %} disable-effect-hover x-splide splide {% endif %}"
                          {% if enable_desktop_slider or swiper_on_mobile %}
                            x-intersect.once.margin.200px='
                              $store.xSplide.load($el, {
                                "pagination": "false",
                                "focus": "center",
                                "updateOnMove": "true",
                                "perPage": 1,
                                "gap": 10,
                                "speed": 500,
                                "perMove": 1,
                                "mediaQuery": "min",
                                {%- if settings.lang_direction contains request.locale.iso_code %}
                                  "direction": "rtl",
                                {%- endif %}
                                "breakpoints": {
                                  300: {
                                    {% if swiper_on_mobile == false -%}
                                      "destroy": true,
                                    {%- endif -%}
                                  },
                                  768: {
                                    {% if enable_desktop_slider == false -%}
                                      "destroy": true,
                                    {%- else -%}
                                      "destroy": false,
                                    {%- endif %}
                                  }
                                },
                                "classes": {
                                  "pagination": "hidden"
                                }
                              })
                            '
                          {% endif %}
                          {% if block.settings.show_tab %}
                            x-show="openComplementary" x-cloak x-collapse
                          {% endif %}
                        >
                          <div class="splide__track{% unless block.settings.show_background %} pt-3 pb-3{% endunless %}">
                            <div class="splide__list{% if enable_desktop_slider %} md:flex {% else %} md:block{% endif %}{% if swiper_on_mobile %} flex{% else %} block{% endif %}">
                              {% for i in (1..number_of_slides) %}
                                <div class="splide__slide x-splide-slide">
                                  <ul
                                    class="{% if block.settings.show_background %}flex flex-col gap-y-2 mt-2{% endif %}{% if block.settings.show_background or enable_desktop_slider %} md:border-none{% elsif forloop.last == false %} md:border-b{% endif %}{% unless block.settings.show_background or swiper_on_mobile %}{% unless forloop.last %} border-b{% endunless %}{% endunless %}"
                                    role="list"
                                  >
                                    {%- for product in recommendations.products
                                      limit: block.settings.number_product_per_page
                                      offset: continue
                                    -%}
                                      <li class="{% if block.settings.show_background %} pl-5 pr-5 pt-5 pb-1 bg-[rgba(var(--colors-background-secondary))]{% else %}complementory-border pt-5 pb-1{% endif %}">
                                        {% render 'card-product',
                                          card_product: product,
                                          media_aspect_ratio: block.settings.image_ratio,
                                          section_id: section.id,
                                          disable_quickview: true,
                                          show_rating: block.settings.show_product_rating,
                                          show_vendor: block.settings.show_vendor,
                                          product_complementary: true,
                                          disable_badges: true,
                                          columns_desktop: 6,
                                          column_mobile: 2,
                                          block_id: forloop.index,
                                          class_slide: 'recommendations'
                                        %}
                                      </li>
                                    {%- endfor -%}
                                  </ul>
                                </div>
                              {% endfor %}
                            </div>
                          </div>
                          <div class="splide__arrows{% if enable_desktop_slider %} md:flex {% else %} md:hidden{% endif %}{% if swiper_on_mobile %} flex{% else %} hidden{% endif %} justify-end gap-x-1 pt-1.5 pb-1.5{% unless block.settings.show_background %} border-t border-solid{% endunless %}">
                            <div class="h-10 flex items-center justify-center overflow-hidden rounded-full">
                              <button
                                class="opacity-60 hover:opacity-100 cursor-pointer disabled:opacity-40 disabled:cursor-not-allowed text-[rgb(var(--colors-text),1)] hover:button splide__arrow h-10 w-7 flex items-center border-none justify-center py-2.5 px-1 duration-200 splide__arrow--prev{%- if settings.lang_direction contains request.locale.iso_code %} -rotate-90{%- else %} rotate-90{%- endif %}"
                                aria-label="previous slide"
                              >
                                {% render 'icon-alls', icon: 'icon-caret' %}
                              </button>
                            </div>
                            <div class="h-10 flex items-center justify-center overflow-hidden rounded-full">
                              <button
                                class="opacity-60 hover:opacity-100 cursor-pointer disabled:opacity-40 disabled:cursor-not-allowed text-[rgb(var(--colors-text),1)] hover:button splide__arrow h-10 w-7 flex items-center border-none justify-center py-2.5 px-1 duration-200 splide__arrow--next{%- if settings.lang_direction contains request.locale.iso_code %} rotate-90{%- else %} -rotate-90{%- endif %}"
                                aria-label="next slide"
                              >
                                {% render 'icon-alls', icon: 'icon-caret' %}
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                    {%- endif -%}
                  </div>
                {%- when 'sticky_add_to_cart' -%}
                  {% assign block_sticky_add_to_cart = block %}
                {%- when 'gift_wrapping' -%}
                  {% render 'gift-wrapping',
                    product_form_id: product_form_id,
                    product: product,
                    color_icon_light: block.settings.color_icon_light,
                    color_icon_dark: block.settings.color_icon_dark,
                    gift_label: block.settings.text_gift,
                    show_content_center: show_content_center
                  %}
                {%- when 'back_in_stock_alert' -%}
                  {%- liquid
                    assign formId = 'StockAlert' | append: section.id
                    assign text_success = block.settings.text_success | escape
                    assign message = 'products.product.back_in_stock_alert' | t
                  -%}
                  <div id="back_in_stock_alert-{{ section.id }}" class="w-full">
                    <div class="rte{% if show_content_center %} text-center{% endif %} my-6 w-full{% if block.settings.show_when_product_unavailable and product.selected_or_first_available_variant.available %} hidden{% endif %}">
                      {%- if block.settings.heading != blank -%}
                        <p class="font-semibold">{{ block.settings.heading | escape }}</p>
                      {%- endif -%}
                      {%- if block.settings.text_info != blank -%}
                        {{ block.settings.text_info }}
                      {%- endif -%}
                      {%- form 'contact', id: formId, class: 'eurus' -%}
                        {%- if form.posted_successfully? -%}
                          <div
                            class="flex items-center{% if show_content_center %} justify-center{% endif %} px-4 py-3.5 my-3 bg-[rgba(var(--color-success),0.2)] selection:bg-[rgba(var(--color-success),0.4)] focus:outline-none"
                            tabindex="-1"
                            autofocus
                          >
                            <span class="text-[rgba(var(--color-success))] w-5 mr-2 rtl:ml-2 rtl:mr-0">
                              {%- render 'icon-alls', icon: 'icon-success' %}
                            </span>
                            <p class="leading-tight">{{ text_success }}</p>
                          </div>
                        {%- elsif form.errors -%}
                          <p
                            class="flex items-center px-4 py-3.5 my-3 bg-[rgba(var(--color-error),0.2)] selection:bg-[rgba(var(--color-error),0.4)]"
                            tabindex="-1"
                            autofocus
                          >
                            <span class="text-[rgba(var(--color-error))] inline-block w-5 mr-2">
                              {%- render 'icon-alls', icon: 'icon-error' %}
                            </span>
                            {{ form.errors.translated_fields.email | capitalize }}
                            {{ form.errors.messages.email }}
                          </p>
                        {%- endif -%}
                        {%- unless form.posted_successfully? -%}
                          <input type="hidden" name="contact[Message]" value="{{ message }}">
                          <input type="hidden" name="contact[Product ID]" value="{{ product.id }}">
                          <input type="hidden" name="contact[Product Title]" value="{{ product.title }}">
                          <input type="hidden" name="contact[Product URL]" value="{{ product.url }}">
                          {% unless product.has_only_default_variant %}
                            <input
                              type="hidden"
                              name="contact[Product Variant]"
                              value="{{ product.selected_or_first_available_variant.title }}"
                            >
                          {% endunless %}
                          <div class="stock-alert__fields inline-flex w-full lg:max-w-[450px] my-3 p-1.5 border border-solid rounded-[var(--border-radius)] bg-[rgba(var(--background-color),1)]">
                            <div class="relative flex-1 text-left rtl:text-right ">
                              <input
                                type="email"
                                id="ContactFormEmail-{{ section.id }}"
                                class="w-full input px-5 pt-5 pb-1 md:pt-3.5 md:pb-2 focus:outline-none focus:border-0 bg-transparent placeholder:opacity-0"
                                name="contact[email]"
                                autocomplete="email"
                                autocapitalize="off"
                                autocorrect="off"
                                value="{{ customer.email }}"
                                placeholder="{{ 'customer.email' | t }}"
                                required
                              >
                              <label
                                class="absolute duration-200 top-1/2 left-5 rtl:right-5 -translate-y-1/2 input_focus:text-xs input_focus:top-2 input_not_empty:top-2 input_not_empty:text-xs"
                                for="ContactFormEmail-{{ section.id }}"
                              >
                                {{ 'newsletter.label' | t }}
                                <span aria-hidden="true">*</span>
                              </label>
                            </div>
                            <button
                              type="submit"
                              class="button button-solid ml-0.5 px-5 lg:px-9 py-2 leading-normal cursor-pointer empty:hidden"
                              name="btnSubmit"
                            >
                              {%- if block.settings.button_label != blank -%}
                                {% assign button_label = block.settings.button_label %}
                              {%- else -%}
                                {% assign button_label = 'newsletter.button_label' | t %}
                              {%- endif -%}
                              {% render 'button-label', button_label: button_label, show_button_style: 'primary' %}
                            </button>
                          </div>
                        {%- endunless -%}
                      {%- endform -%}
                    </div>
                  </div>
                {% when 'icon_text' %}
                  {% style %}
                    .icon-text--{{ block.id }} {
                      {% if block.settings.background_color_light.alpha != 0.0 %}
                        background: {{ block.settings.background_color_light }};
                        padding: 10px 20px;
                      {% endif %}
                      {% if block.settings.text_light.alpha != 0.0 %}
                        --colors-text: {{ block.settings.text_light.red }},{{ block.settings.text_light.green }},{{ block.settings.text_light.blue }};
                      {% endif %}
                    }
                    .dark .icon-text--{{ block.id }} {
                      {% if block.settings.background_color_dark.alpha != 0.0 %}
                        background: {{ block.settings.background_color_dark }};
                        padding: 10px 20px;
                      {% else %}
                        padding: 0;
                        background: transparent;
                      {% endif %}
                      {% if block.settings.text_dark.alpha != 0.0 %}
                        --colors-text: {{ block.settings.text_dark.red }},{{ block.settings.text_dark.green }},{{ block.settings.text_dark.blue }};
                      {% else %}
                        --colors-text: var(--colors-text);
                      {% endif %}
                    }
                  {% endstyle %}
                  <div
                    class="text-icon w-full{% if show_content_center %} justify-center{% endif %} icon-text--{{ block.id }} flex gap-x-3 mb-3"
                    {{ block.shopify_attributes }}
                  >
                    {% if block.settings.icon != 'none' %}
                      {% style %}
                        .size-icon-{{ block.id }} {
                          width: {{ block.settings.icon_size }}px;
                          height: {{ block.settings.icon_size }}px;
                          min-width: {{ block.settings.icon_size }}px;
                        }
                      {% endstyle %}
                      <span class="inline-block mt-2 relative size-icon-{{ block.id }} text-[rgb(var(--colors-text))]">
                        {% if block.settings.custom_image != blank %}
                          <img
                            src="{{ block.settings.custom_image | image_url: width: block.settings.icon_size }}"
                            alt="{{ block.settings.custom_image.alt | escape }}"
                            loading="lazy"
                            width="{{ block.settings.custom_image.width }}"
                            height="{{ block.settings.custom_image.height }}"
                            style="object-position: {{ block.settings.custom_image.presentation.focal_point }}"
                            class="object-cover absolute top-0 left-0 w-full h-full"
                          >
                        {% else %}
                          {% if block.settings.custom_icon == blank %}
                            {% render 'icon-labels-bags', icon: block.settings.icon %}
                          {% else %}
                            {{ block.settings.custom_icon }}
                          {% endif %}
                        {% endif %}
                      </span>
                    {% endif %}
                    {% if block.settings.text != blank %}
                      <div class="color-text--{{ section.id }} rte p-break-words text-[rgb(var(--colors-text))]">
                        {{ block.settings.text }}
                      </div>
                    {% endif %}
                  </div>
                {%- when 'feature_icon' -%}
                  {%- liquid
                    assign appliedCollectionIds = block.settings.applied_collections | map: 'id' | join: ', '
                    assign showBlock = false
                    if appliedCollectionIds != blank
                      for collection in product.collections
                        assign id = collection.id
                        if appliedCollectionIds contains id
                          assign showBlock = true
                        endif
                      endfor
                    endif
                  -%}
                  {% if showBlock %}
                    {%- assign font_size_heading = settings.text_base_size
                      | times: block.settings.heading_size
                      | times: 0.0000875
                    -%}
                    {%- style -%}
                      .title--{{ block.id }} {
                        font-size: {{ font_size_heading | times: 0.9 }}rem;
                      }
                      .size-icon-{{ block.id }} {
                        width: {{ block.settings.icon_size | times: 0.9 }}px;
                        height: {{ block.settings.icon_size | times: 0.9 }}px;
                      }
                      .color-icon--{{ block.id }} {
                        {% if block.settings.color_icon_light.alpha != 0.0 %}
                          color: {{ block.settings.color_icon_light }};
                        {% else %}
                          color: {{ block.settings.text_light.red }},{{ block.settings.text_light.green }},{{ block.settings.text_light.blue }};
                        {% endif %}
                      }
                      .feature-icon-{{ block.id }} {
                        {% if block.settings.background_color_light.alpha != 0.0 %}
                          background: {{ block.settings.background_color_light }};
                        {% endif %}
                        {% if block.settings.text_light.alpha != 0.0 %}
                          --colors-text: {{ block.settings.text_light.red }},{{ block.settings.text_light.green }},{{ block.settings.text_light.blue }};
                        {% endif %}
                        {% if block.settings.line_border_light.alpha != 0.0 %}
                          --colors-line-and-border: {{ block.settings.line_border_light.red }},{{ block.settings.line_border_light.green }},{{ block.settings.line_border_light.blue }};
                        {% endif %}
                        {% if block.settings.heading_light.alpha != 0.0 %}
                          --colors-heading: {{ block.settings.heading_light.red }},{{ block.settings.heading_light.green }},{{ block.settings.heading_light.blue }};
                        {% endif %}
                      }
                      .dark .feature-icon-{{ block.id }} {
                        {% if block.settings.background_color_dark.alpha != 0.0 %}
                          background: {{ block.settings.background_color_dark }};
                        {% else %}
                          background: transparent;
                        {% endif %}
                        {% if block.settings.text_dark.alpha != 0.0 %}
                          --colors-text: {{ block.settings.text_dark.red }},{{ block.settings.text_dark.green }},{{ block.settings.text_dark.blue }};
                        {% else %}
                          --colors-text: {{ settings.colors_dark_text.red }}, {{ settings.colors_dark_text.green }}, {{ settings.colors_dark_text.blue }};
                        {% endif %}
                        {% if block.settings.line_border_dark.alpha != 0.0 %}
                          --colors-line-and-border: {{ block.settings.line_border_dark.red }},{{ block.settings.line_border_dark.green }},{{ block.settings.line_border_dark.blue }};
                        {% else %}
                          --colors-line-and-border: {{ settings.colors_dark_line_and_borders.red }}, {{ settings.colors_dark_line_and_borders.green }}, {{ settings.colors_dark_line_and_borders.blue }};
                        {% endif %}
                        {% if block.settings.heading_dark.alpha != 0.0 %}
                          --colors-heading: {{ block.settings.heading_dark.red }},{{ block.settings.heading_dark.green }},{{ block.settings.heading_dark.blue }};
                        {% else %}
                          --colors-heading: {{ settings.colors_dark_heading.red }}, {{ settings.colors_dark_heading.green }}, {{ settings.colors_dark_heading.blue }};
                        {% endif %}
                      }
                      .dark .color-icon--{{ block.id }} {
                        {% if block.settings.color_icon_dark.alpha != 0.0 %}
                          color: {{ block.settings.color_icon_dark }};
                        {% else %}
                          color: rgb(var(--colors-text));
                        {% endif %}
                      }
                      @media (min-width: 1024px){
                        .title--{{ block.id }} {
                          font-size: {{ font_size_heading }}rem;
                        }
                        .size-icon-{{ block.id }} {
                          width: {{ block.settings.icon_size }}px;
                          height: {{ block.settings.icon_size }}px;
                        }
                      }
                    {%- endstyle -%}
                    {%- assign count = 0 -%}
                    {%- capture featureIcons -%}
                      {%- for i in (1..6) -%}
                        {%- liquid 
                          assign icon = "icon_" | append: i
                          assign custom_image = "custom_image_" | append: i
                          assign custom_icon = "custom_icon_" | append: i
                          assign title = "title_" | append: i
                          assign text = "text_" | append: i
                          assign link = "link_" | append: i
                          assign open_new_window = "open_new_window_" | append: i 
                        -%}
                        {%- if block.settings[title] != blank -%}
                          {%- assign count = count | plus: 1 -%}
                          {%- render 'feature-icons',
                            block: block,
                            blockID: block.id,
                            icon: block.settings[icon],
                            custom_image: block.settings[custom_image],
                            custom_icon: block.settings[custom_icon],
                            title: block.settings[title],
                            text: block.settings[text],
                            link: block.settings[link],
                            open_new_window: block.settings[open_new_window],
                            icon_size: block.settings.icon_size
                          -%}
                        {%- endif -%}
                      {%- endfor -%}
                    {%- endcapture -%}
                    <div
                      class="w-full feature-icons-group flex gap-y-2.5 flex-wrap gap-x-2.5 justify-center lg:justify-start{% if block.settings.border_column == 'column' %} mb-5{% else %}{% if block.settings.background_color_dark.alpha != 0.0 %} dark:mb-5{% else %} dark:mb-0{% endif %}{% if block.settings.background_color_light.alpha != 0.0 %} mb-5{% endif %}{% endif %}"
                      {{ block.shopify_attributes }}
                    >
                      {{ featureIcons }}
                    </div>
                  {% endif %}
              {%- endcase -%}
            {%- endfor -%}
            <div class="hidden{% if disable_cart_edt %} disable-cart-edt{% endif %}" id="cart-edt-{{ section.id }}">
              {% if settings.show_in_cart_items != 'none' %}
                {% render 'estimate-shipping-cart',
                  product: product,
                  message: settings.message_estimate_cart,
                  product_form_id: product_form_id,
                  disable_cart_edt: disable_cart_edt
                %}
              {% else %}
                {% if settings.show_estimate_cart %}
                  {% if disable_cart_edt %}
                    <input
                      name="properties[_preorder]"
                      value="preorder"
                      form="{{ product_form_id }}"
                    >
                  {% endif %}
                {% endif %}
              {% endif %}
            </div>
          </div>
        </div>

        {%- if block_sticky_add_to_cart -%}
          {% liquid
            assign product_form_id_sticky = 'product-form-sticky-' | append: section.id
            assign ratio = 1
            case section.settings.image_ratio
              when 'portrait'
                assign ratio = 1.5
              when 'landscape'
                assign ratio = 0.75
              when 'wide'
                assign ratio = 0.5625
            endcase
            assign show_variant = false

            unless block_sticky_add_to_cart.settings.desktop_display_type == 'popup' or product.has_only_default_variant
              assign show_variant = true
            endunless
          %}
          <div
            id="sticky-add-to-cart-{{ section.id }}"
            {% if block_sticky_add_to_cart.settings.desktop_display_type == 'full_width' %}
              class="sticky_add_to_cart fixed w-full bottom-0 left-0 right-0 bg-[rgba(var(--background-color))] shadow-[0_-4px_10px_-1px_rgba(var(--colors-text),.1)] z-40"
            {% else %}
              class="sticky_add_to_cart fixed w-full bottom-0 md:w-11/12 lg:w-3/4 xl:w-2/3 2xl:w-6/12 page-width pl-5 pr-0 md:pl-5 md:pr-5 md:bottom-8 left-0 md:left-1/2 md:-translate-x-1/2 right-0 bg-[rgba(var(--background-color))] shadow-[0_-4px_10px_-1px_rgba(var(--colors-text),.1)] z-40{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}"
            {% endif %}
            x-data="xStickyATC('{{ section.id }}')"
            x-show="showStickyATC"
            x-cloak
            x-transition:enter="transition-all ease-in-out duration-300"
            x-transition:enter-start="opacity-0 transform translate-y-1/3"
            x-transition:enter-end="opacity-100 translate-y-0"
            x-transition:leave="transition-all ease-in-out duration-500"
            x-transition:leave-end="opacity-0 transform translate-y-1/3"
            x-variants-data="{{ product.variants | json | escape }}"
          >
            <div
              class="{% if block_sticky_add_to_cart.settings.desktop_display_type == 'full_width' %}page-width{% else %} md:pr-0 md:pl-0{% endif %} pt-2 pb-2 flex flex-col md:flex-row rtl:md:flex-row-reverse md:gap-x-2 justify-between md:items-center transition duration-300 ease-linear relative"
              {% if block_sticky_add_to_cart.settings.desktop_display_type == 'full_width' %}
                :class="openDetailOnMobile ? 'pr-5 rtl:pl-5' : 'delay-200 pr-14 md:pr-5 rtl:pl-14 rtl:md:pl-5 rtl:pr-5'"
              {% else %}
                :class="openDetailOnMobile ? 'pr-5 rtl:pl-5' : 'delay-200 pr-14 md:pr-5 rtl:pl-14 rtl:md:pr-5 rtl:md:pl-0 rtl:pr-5'"
              {% endif %}
              x-transition:enter="transition-all ease-in-out duration-300"
              x-transition:enter-start="opacity-0 transform"
              x-transition:enter-end="opacity-100"
              x-transition:leave="transition-all ease-in-out duration-500"
              x-transition:leave-end="opacity-0 transform"
            >
              <span
                class="w-11 h-11 pr-4 pl-4 z-10 block absolute right-1 rtl:right-auto rtl:left-1 opacity-70 md:hidden"
                :class="openDetailOnMobile ? 'rotate-0 border-l rtl:border-r rtl:border-l-0' : 'rotate-180 border-r rtl:border-l rtl:border-r-0 top-1/2 -translate-y-1/2'"
                @click="openDetailOnMobile = !openDetailOnMobile"
              >
                {% render 'icon-alls', icon: 'icon-caret' %}
              </span>
              <div
                class="md:!flex md:!h-auto grow justify-between md:items-center flex-col md:flex-row rtl:md:flex-row-reverse"
                x-cloak
                x-show="openDetailOnMobile"
                x-collapse
              >
                <a
                  href="{{ product.url }}"
                  class="flex rtl:flex-row-reverse rtl:text-right relative transition ease-in-out duration-300{% unless show_variant %} mb-5 md:mb-0{% endunless %}"
                  x-transition:enter="transition-all ease-in-out duration-300"
                  x-transition:enter-start="opacity-0 transform translate-y-1/3"
                  x-transition:enter-end="opacity-100 translate-y-0"
                  x-transition:leave="transition-all ease-in-out duration-500"
                  x-transition:leave-end="opacity-0 transform translate-y-1/3"
                >
                  <div id="product-image-sticky-{{ section.id }}" class="w-10 relative">
                    <div class="relative overflow-hidden w-full float-left before:h-0 before:block{% if settings.edges_type == 'rounded_corners' %} rounded{% endif %}{% unless section.settings.image_ratio == "natural" %} before:pb-[{{ ratio | times: 100.0 }}%]{% else %} before:pb-[100.0%]{% endunless %}">
                      {%- liquid
                        assign current_variant = product.selected_or_first_available_variant
                        assign featured_media = current_variant.featured_media
                        unless featured_media
                          if product.featured_media != blank
                            assign featured_media = product.featured_media
                          endif
                        endunless
                      -%}
                      {% if featured_media %}
                        <img
                          src="{{ featured_media | image_url: width: 150 }}"
                          alt="{{ featured_media.alt | split: "#" | first | escape }}"
                          width="{{ featured_media.width }}"
                          loading="lazy"
                          height="{{ product.featured_media.height }}"
                          class="h-full w-full object-cover absolute top-0 left-0 image-hover"
                        >
                      {%- else -%}
                        <div class="bg-[#c9c9c9] absolute top-0 left-0 w-full h-full">
                          {%- render 'icon-placeholder', icon: 'icon-product', class: 'w-full h-full' %}
                        </div>
                      {%- endif -%}
                    </div>
                  </div>
                  <div class="pt-0.5 ml-5 flex-1 pr-8 rtl:pl-8 rtl:lg:pr-0 rtl:pr-0 lg:pr-0 mr-5">
                    <div>
                      <p class="capitalize p-break-words leading-tight duration-200 transition hover-text-link text-[rgba(var(--colors-heading))]">
                        {{ product.title | escape }}
                      </p>
                    </div>
                    <div id="price-sticky-{{ section.id }}" class="price-sticky-{{ section.id }}" role="status">
                      {%- render 'price',
                        product: product,
                        use_variant: true,
                        show_badges: false,
                        price_class: 'pt-1'
                      -%}
                    </div>
                  </div>
                </a>
                {% unless product.has_only_default_variant %}
                  <div class="mt-5 mb-3 md:mb-0 md:mt-0 rtl:text-right">
                    <div 
                      id="variant-update-sticky-{{ section.id }}"
                      class="variant-update-sticky-{{ section.id }} inline-flex gap-x-2.5 w-max"
                    >
                      {%- for option in product.options_with_values -%}
                        <div>
                          <label
                            class="mt-1 mb-1 font-medium hidden"
                            for="Option-sticky-{{ section.id }}-{{ forloop.index0 }}"
                          >
                            {{ option.name }}
                          </label>
                          <div class="select relative outline-none eurus">
                            <select
                              id="Option-sticky-{{ section.id }}-{{ forloop.index0 }}"
                              class="product-form__input min-w-[70px] max-w-[120px] w-full capitalize pt-2.5 pb-2 pl-5 pr-8 rtl:pr-5 rtl:pl-8 bg-transparent focus:border-current border appearance-none outline-none border-solid focus-visible:outline-none cursor-pointer{% if settings.edges_type == 'rounded_corners' %} !rounded-md{% endif %} {{ class_rtl }}"
                              name="{{ option.name }}"
                              form="{{ product_form_id_sticky }}"
                              x-model="options[{{ forloop.index | minus: 1 }}]"
                            >
                              {%- assign option_index = forloop.index | minus: 1 -%}
                              {% render 'product-variant-options',
                                product: product,
                                option: option,
                                option_index: option_index,
                                sticky_add_to_cart: true,
                                block: block_sticky_add_to_cart,
                                product_page: is_product_page,
                                input_type: 'select',
                                product_form_id: product_form_id_sticky
                              %}
                            </select>
                            <span class="absolute top-1/2 right-4 rtl:right-auto rtl:left-4 -translate-y-1/2 w-2.5 inline-block pointer-events-none">
                              {% render 'icon-alls', icon: 'icon-caret' %}
                            </span>
                          </div>
                        </div>
                      {%- endfor -%}
                    </div>
                  </div>
                {% endunless %}
              </div>
              <div 
                {% if settings.gift_wrapping_product != blank
                  and settings.gift_wrapping_product.selected_or_first_available_variant
                %}
                  x-data="xProductCart('{{ settings.gift_wrapping_product.selected_or_first_available_variant.id }}')"
                {% else %}
                  x-data="xProductCart()"
                {% endif %}
              >
                <div class="absolute -top-14 {% if block_sticky_add_to_cart.settings.desktop_display_type == 'full_width' %}left-5{% else %}left-0{% endif %} bg-[rgba(var(--colors-background),1)] bg-clip-content mr-5{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}">
                  <div
                    class="flex relative items-center pl-4 pr-4 pt-3 pb-3 bg-[rgba(var(--color-error),0.2)]{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}"
                    role="alert"
                    x-cloak
                    x-show="errorMessage"
                    @click.away="errorMessage=false"
                  >
                    <div class="flex">
                      <span class="w-4 h-4">{% render 'icon-alls', icon: 'icon-error' %}</span>
                    </div>
                    <span class="ml-2 pt-0.5" x-ref="error_message"></span>
                  </div>
                </div>
                <div
                  class="product_form flex justify-between md:justify-end gap-x-2.5 lg:mt-0"
                  x-cloak
                  :class="open ? 'flex-col' : 'items-center'"
                >
                  <div
                    id="price-sticky-{{ section.id }}"
                    class="price-sticky-{{ section.id }} md:!hidden{% unless product.has_only_default_variant or block_sticky_add_to_cart.settings.desktop_display_type != 'popup' %} w-20{% endunless %} mr-3 duration-200 transition ease-in"
                    role="status"
                    x-show="!open"
                  >
                    {%- render 'price',
                      product: product,
                      use_variant: true,
                      show_badges: false,
                      price_class: 'md:pt-2'
                    -%}
                  </div>
                  <div class="flex justify-between rtl:flex-row-reverse gap-x-1 md:gap-x-2 md:flex-grow-0 lg:justify-end lg:mt-0 transition duration-200">
                    {%- if block_sticky_add_to_cart.settings.show_quantity_selector -%}
                      <div {{ block_sticky_add_to_cart.shopify_attributes }}>
                        <div
                          class="flex border w-fit h-full items-center bg-[rgba(var(--background-color),1)]{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}"
                          x-data="
                            {
                              qty: 1,
                              minus(value) {
                                this.qty = parseInt(this.qty);
                                (this.qty == 1) ? this.qty = 1 : this.qty -= value;
                              },
                              plus(value) {
                                this.qty = parseInt(this.qty);
                                this.qty += value;
                              },
                              invalid(el) {
                                number = parseFloat(el.value);
                                if (!Number.isInteger(number) || number < 1) {
                                  this.qty = 1;
                                }
                              }
                            }
                          "
                          x-init="
                            $nextTick(() => {
                              qty = document.getElementById('Quantity-sticky-{{ section.id }}').value;
                            })
                          "
                        >
                          <button
                            class="w-8 lg:w-10 h-full cursor-pointer pt-3 pb-3 bg-transparent pl-2.5 pr-2.5 lg:pl-3.5 lg:pr-3.5 select-none opacity-70"
                            name="minus"
                            aria-label="minus"
                            @click="minus(1)"
                          >
                            {% render 'icon-alls', icon: 'icon-minus' %}
                          </button>
                          <input
                            class="outer-spin-button hide-spin-input h-full focus:outline-none w-8 lg:w-10 pt-1.5 pb-1.5 text-center bg-transparent"
                            type="number"
                            name="quantity"
                            id="Quantity-sticky-{{ section.id }}"
                            min="1"
                            value="1"
                            form="{{ product_form_id_sticky }}"
                            aria-labelledby="Quantity-sticky-{{ section.id }}"
                            x-model="qty"
                            x-on:blur="invalid($el)"
                          >
                          <button
                            class="w-8 lg:w-10 cursor-pointer pt-2.5 pb-2.5 bg-transparent pl-2.5 pr-2.5 lg:pl-3.5 lg:pr-3.5 select-none opacity-70"
                            name="plus"
                            @click="plus(1)"
                            aria-label="minus"
                          >
                            {% render 'icon-alls', icon: 'icon-plus' %}
                          </button>
                        </div>
                      </div>
                    {%- endif -%}
                    {%- form 'product',
                      product,
                      id: product_form_id_sticky,
                      class: 'form w-full delay-200 transition duration-200',
                      novalidate: 'novalidate',
                      data-type: 'add-to-cart-form',
                      x-ref: 'product_form'
                    -%}
                      <input
                        type="hidden"
                        id="update-variant-sticky-{{ section.id }}"
                        name="id"
                        value="{{ product.selected_or_first_available_variant.id }}"
                      >
                      {% if settings.show_in_cart_items != 'none' %}
                        {% render 'estimate-shipping-cart', product: product, message: settings.message_estimate_cart %}
                      {% endif %}
                      <div>
                        <button 
                          id="x-atc-button-sticky-{{ section.id }}"
                          role="button"
                          type="submit"
                          name="add"
                          @click="addToCart($event)"
                          class="relative min-w-[120px] add_to_cart_button button button-solid transition disabled:opacity-60 disabled:cursor-not-allowed duration-300 leading-none w-full pt-2.5 pb-2.5 pl-4 pr-4 md:pr-5 md:pl-5"
                          x-transition:enter="transition-all w-24 ease-in-out duration-300"
                          x-transition:enter-start="opacity-0 transform"
                          x-transition:enter-end="opacity-100"
                          x-transition:leave="transition-all ease-in-out duration-500"
                          x-transition:leave-end="opacity-0 transform w-full"
                          {% if product.selected_or_first_available_variant.available == false %}
                            disabled
                          {% endif %}
                        >
                          <span class="x-atc-text" :class="loading && 'opacity-0'">
                            {%- if product.selected_or_first_available_variant.available -%}
                              {{ 'products.product.add_to_cart' | t }}
                            {%- else -%}
                              {{ 'products.product.sold_out' | t }}
                            {%- endif -%}
                          </span>
                          <div
                            class="inline-block w-5 h-5 animate-spin absolute top-[calc(50%-10px)] left-[calc(50%-10px)]"
                            x-show="loading"
                            x-cloak
                          >
                            {% render 'icon-alls', icon: 'icon-loading' %}
                          </div>
                        </button>
                      </div>
                    {%- endform -%}
                  </div>
                </div>
              </div>
            </div>
          </div>
          <script src="{{ 'sticky-atc.js' | asset_url }}" defer></script>
        {%- endif -%}
      </div>
    {%- else -%}
      <div class="flex flex-col justify-center items-center w-3/4 max-w-xl ml-auto mr-auto">
        {%- if section.settings.show_vendor -%}
          <p class="mb-1 italic">{{ 'products.product.name_vendor' | t }}</p>
        {%- endif -%}
        {%- if is_product_page -%}
          <{{ section.settings.heading_tag }} class="h2 mb-5 capitalize leading-tight h2 text-[{{ settings.heading_base_size | times: 0.0225 | times: 0.6 }}rem] md:text-[{{ settings.heading_base_size | times: 0.0225 }}rem]">
            {{- 'onboarding.product_title' | t -}}
          </{{ section.settings.heading_tag }}>
        {%- else -%}
          <{{ section.settings.heading_tag }} class="mb-5 capitalize leading-tight h2 text-[{{ settings.heading_base_size | times: 0.0225 | times: 0.6 }}rem] md:text-[{{ settings.heading_base_size | times: 0.0225 }}rem]">
            {{- 'onboarding.product_title' | t -}}
          </{{ section.settings.heading_tag }}>
        {%- endif -%}
        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {%- when 'price' -%}
              <div class="mb-5" {{ block.shopify_attributes }}>
                {%- render 'price', product: product, use_variant: true, container: 'main-product-price' -%}
              </div>
            {%- when 'description' -%}
              <div
                class="relative w-full mb-5 border-y border-solid"
                {% if block.settings.show_in_tab %}
                  {%- if block.settings.open_by_default %}
                    x-data="{open: true}"
                  {%- else %}
                    x-data="{open: false}"
                  {%- endif -%}
                {% endif %}
                {{ block.shopify_attributes }}
              >
                {% if block.settings.show_in_tab %}
                  <div
                    class="flex relative pr-8 w-full pt-3 pb-3 border-[rgb(var(--colors-text),1)] duration-300"
                    :class="open && 'border-b boder-solid'"
                    @click="open = !open"
                  >
                    <p class="font-medium">{{ 'products.product.description' | t }}</p>
                    <span
                      class="w-2.5 inline-block absolute right-2 rtl:left-2 rtl:right-auto top-1/2 -translate-y-1/2 duration-300{% if block.settings.open_by_default %} rotate-180{% endif %}"
                      :class="open ? 'rotate-180' : 'rotate-0'"
                    >
                      {% render 'icon-alls', icon: 'icon-caret' %}
                    </span>
                  </div>
                {% endif %}
                <div
                  {% if block.settings.show_in_tab %}
                    x-show="open"
                    {%- unless block.settings.open_by_default %} x-cloak{% endunless %}
                    x-collapse
                  {% endif %}
                >
                  <p class="pt-2 pb-2">{{ 'products.product.description_default' | t }}</p>
                </div>
              </div>
            {%- when 'quantity_selector' -%}
              <div
                class="mb-5 text-center product-form__quantity {% if product.tags contains 'Tile_calculator' %}hidden quantity--hidden{% endif %}"
                {{ block.shopify_attributes }}
              >
                <label for="Quantity-{{ section.id }}">
                  {{ 'products.product.quantity.label' | t }}
                </label>
                <div
                  class="flex border w-fit items-center mt-2.5 bg-[rgba(var(--background-color),1)]{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}"
                  x-data="
                    {
                      qty: 1,
                      minus(value) {
                        this.qty = parseInt(this.qty);
                        (this.qty == 1) ? this.qty = 1 : this.qty -= value;
                      },
                      plus(value) {
                        this.qty = parseInt(this.qty);
                        this.qty += value;
                      },
                      invalid(el) {
                        number = parseFloat(el.value);
                        if (!Number.isInteger(number) || number < 1) {
                          this.qty = 1;
                        }
                      }
                    }
                  "
                >
                  <span
                    class="w-10 cursor-pointer pt-4 pb-4 md:pt-5 md:pb-5 bg-transparent pl-3.5 pr-3.5 select-none opacity-70"
                    name="minus"
                    @click="minus(1)"
                  >
                    {% render 'icon-alls', icon: 'icon-minus' %}
                  </span>
                  <input
                    class="outer-spin-button hide-spin-input focus:outline-none w-8 md:w-10 pt-2 pb-2 md:pt-2.5 md:pb-2.5 text-center bg-transparent"
                    type="number"
                    name="quantity"
                    id="Quantity-{{ section.id }}"
                    min="1"
                    value="1"
                    form="{{ product_form_id }}"
                    x-model="qty"
                    x-on:blur="invalid($el)"
                  >
                  <span
                    class="w-10 cursor-pointer pt-2.5 pb-2.5 md:pt-3.5 md:pb-3.5 bg-transparent pr-3.5 pl-3.5 select-none opacity-70"
                    name="plus"
                    @click="plus(1)"
                  >
                    {% render 'icon-alls', icon: 'icon-plus' %}
                  </span>
                </div>
              </div>
            {%- when 'buy_buttons' -%}
              <div class="w-full mb-5" {{ block.shopify_attributes }}>
                <button
                  class="relative button button-outline disabled:cursor-not-allowed duration-200 leading-none w-full mb-2 pt-3.5 pb-3.5 md:pt-4 md:pb-4"
                  disabled
                >
                  {{ 'products.product.sold_out' | t }}
                </button>
              </div>
          {%- endcase -%}
        {% endfor %}
      </div>
    {% endif %}
  </div>
</div>
{%- assign first_3d_model = product.media | where: 'media_type', 'model' | first -%}
{%- if first_3d_model -%}
  <script type="application/json" id="ProductJSON-{{ section.id }}">
    {{ product.media | where: 'media_type', 'model' | json }}
  </script>
{% endif %}
{%- if is_product_page -%}
  {%- liquid
    if product.selected_or_first_available_variant.featured_media
      assign seo_media = product.selected_or_first_available_variant.featured_media
    else
      assign seo_media = product.featured_media
    endif
    assign price_valid_until = 10 | times: 86400
  -%}
  {%- comment -%}Yoast SEO schema control block: start.{%- endcomment -%}
  {%- assign yoast_seo_settings = shop.metafields.yoast_seo.settings.value
    | default: shop.metafields.yoast_seo.settings
  -%}
  {%- if disabled_by_yoast_seo
    or yoast_seo_settings.schema.useTheme.schema
    or yoast_seo_settings.schema.useTheme.product
  -%}
    <script type="application/ld+json">
        {
          "@context": "http://schema.org/",
          "@type": "Product",
          "name": {{ product.title | json }},
          "url": {{ request.origin | append: product.url | json }},
          {% if seo_media -%}
            "image": [
              {{ seo_media | image_url: width: 1920 | prepend: "https:" | json }}
            ],
          {%- endif %}
          "description": {{ product.description | strip_html | json }},
          {% if product.selected_or_first_available_variant.sku != blank -%}
            "sku": {{ product.selected_or_first_available_variant.sku | json }},
          {%- endif %}
          "brand": {
            "@type": "Brand",
            "name": {{ product.vendor | json }}
          },
          "offers": [
            {%- for variant in product.variants -%}
              {
                "@type" : "Offer",
                {%- if variant.sku != blank -%}
                  "sku": {{ variant.sku | json }},
                {%- endif -%}
                {%- if variant.barcode.size == 12 -%}
                    "gtin12": {{ variant.barcode }},
                {%- endif -%}
                {%- if variant.barcode.size == 13 -%}
                  "gtin13": {{ variant.barcode }},
                {%- endif -%}
                {%- if variant.barcode.size == 14 -%}
                  "gtin14": {{ variant.barcode }},
                {%- endif -%}
                "availability" : "http://schema.org/{% if variant.available %}InStock{% else %}OutOfStock{% endif %}",
                "price" : {{ variant.price | divided_by: 100.00 | json }},
                "priceCurrency" : {{ cart.currency.iso_code | json }},
                "priceValidUntil": "{{ 'now' | date: '%s' | plus: price_valid_until | date: '%Y-%m-%d' }}",
                "url" : {{ request.origin | append: variant.url | json }}
              }{% unless forloop.last %},{% endunless %}
            {%- endfor -%}
          ]
        }
      {%- comment -%}Yoast SEO schema control block: end.{%- endcomment -%}
    </script>
  {%- endif -%}
{%- endif -%}

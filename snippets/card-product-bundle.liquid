{% comment %}
  Renders a product card

  Accepts:
  - card_product: {Object} Product Liquid object (optional)
  - media_aspect_ratio: {String} Size of the product image card. Values are "square" and "portrait". Default is "square" (optional)
  - show_vendor: {Boolean} Show the product vendor. Default: false
  - show_rating: {Boolean} Show the product rating. Default: false
  - loading: {Boolean} Image should be lazy loaded. Default: lazy (optional)
  - section_id: {String} The ID of the section that contains this card.
  - list_name: {String} The title of collection,
  - full_width: {Boolean} Show section full width. Default: false
  Usage:
  {% render 'card-product-shop-the-look', show_vendor: section.settings.show_vendor %}
{% endcomment %}

{%- liquid
  if media_aspect_ratio == blank
    assign media_aspect_ratio = settings.product_image_ratio
  endif
  assign ratio = 1
  case media_aspect_ratio
    when 'portrait'
      assign ratio = 1.5
    when 'landscape'
      assign ratio = 0.75
    when 'wide'
      assign ratio = 0.5625
    when '3/4'
      assign ratio = 1.33
  endcase
  assign show_rounded_image = false
  if settings.edges_type == 'rounded_corners'
    assign show_rounded_image = true
  endif
-%}
{% if card_product != blank %}
  {%- capture dataForCustomerEvent -%}
    {
      "product": {
        "title": "{{ card_product.title | escape }}",
        "listName": "{{ collection.title | default: list_name | escape }}",
        "sku": "{{ card_product.id }}",
        "currencyCode": "{{ cart.currency.iso_code }}",
        "price": {{ card_product.price }},
        "vendor": "{{ card_product.vendor | escape }}"
      }
    }
  {%- endcapture %}
  {%- unless disable_badges -%}
    {%- capture dataForLabel -%}
      {
        "id": {{ card_product.id }},
        "available": {{ card_product.available }},
        "title": "{{ card_product.title | escape }}",
        "compare_at_price": {{ card_product.selected_or_first_available_variant.compare_at_price | default: 0 }},
        "price": {{ card_product.selected_or_first_available_variant.price }},
        "price_with_currency": "{% if settings.currency_code_enable %}{{ card_product.selected_or_first_available_variant.price | money_with_currency | escape }}{% else %}{{ card_product.selected_or_first_available_variant.price | money | escape }}{% endif %}",
        "sale_amount": "{{ card_product.selected_or_first_available_variant.compare_at_price | minus: card_product.selected_or_first_available_variant.price | money | strip_html }}",
        "collections": "||{{ card_product.collections | map: 'id' | join: '||' }}||",
        "inventory_management": "{{ card_product.selected_or_first_available_variant.inventory_management }}",
        "qty": {{ card_product.selected_or_first_available_variant.inventory_quantity | default: -1 }},
        "container": "card"
      }
    {%- endcapture %}
  {%- endunless -%}
  {%- assign countMedia = card_product.media | size -%}
  <div
    {% if settings.swatches_type == 'both_text_and_color' %}
      x-data="xProductCard('{{ section_id }}', '{{ card_product.url | split: "?" | first }}', '{{ card_product.id }}')"
    {% endif %}
    class="product-item card-product x-product-bundle-data flex flex-col relative z-10{% if show_rounded_image %} rounded-[10px]{% endif %}"
  >
    <a href="{{ card_product.url }}" class="card block relative disable-effect">
      <div
        {% unless disable_badges %}
          x-data="{ lastWindowWidth: 0 }"
          x-intersect.once.margin.200px="
            $nextTick(() => {
              $store.xBadges.load($el);
            })
          "
          x-labels-data="{{ dataForLabel | escape }}"
        {% endunless %}
        class="group relative w-full z-0 cursor-pointer overflow-hidden{% if show_rounded_image %} rounded-[10px]{% endif %}"
      >
        <div
          class="ltr block h-full"
          @click='$store.xCustomerEvent.fire("product_selected", $el)'
          x-customer-event-data="{{ dataForCustomerEvent | escape }}"
        >
          <div
            class="w-full relative overflow-hidden before:h-0 before:block z-0{% if show_rounded_image %} rounded-[10px]{% endif %}{% unless media_aspect_ratio == "natural" %} pb-[{{ ratio | times: 100.0 }}%]{% else %}{% if card_product.featured_media.media_type == "model" %} pb-[100%]{% endif %}{% endunless %}"
            {% if media_aspect_ratio == 'natural'
              and card_product.featured_media
              and card_product.featured_media.media_type != 'model'
            %}
              style="height:0; padding-bottom: {{ 1 | divided_by: card_product.featured_media.aspect_ratio | times: 100 }}%;"
            {% endif %}
          >
            <div
              id="x-slideshow-card-product-{{ section_id }}-{{ product_card_id }}-{{ index | minus: 1 }}"
              class="block h-full{% if settings.product_image_type == "slide_img" and countMedia > 1 and class_slide != 'recommendations' %}{% unless media_aspect_ratio == "natural"  %} card-product-img{% endunless %} top-0 left-0 absolute x-splide disable-effect-hover splide cursor-grab group{% endif %}"
              @click='$store.xCustomerEvent.fire("product_selected", $el)'
              x-customer-event-data="{{ dataForCustomerEvent | escape }}"
              {% if settings.product_image_type == 'slide_img'
                and countMedia > 1
                and class_slide != 'recommendations'
              %}
                x-intersect.once.margin.200px='
                  $store.xSplide.load($el, {
                    "drag": false,
                    "pagination": false,
                    "pauseOnFocus": false,
                    "pauseOnHover": false,
                    "perMove": 1,
                    "focus": "center",
                    "type": "fade",
                    {%- unless settings.show_arrow -%}
                      "type": "loop",
                      "rewind": true,
                      "autoplay": true,
                      "speed": {{ settings.change_slides_speed | times: 1000 }},
                      "interval": {{ settings.change_slides_speed | times: 1000 }},
                      "updateOnMove": "true",
                      "playOnHover": true,
                    {%- endunless %}
                    "breakpoints": {
                      1023: {
                        "destroy": true,
                      }
                    },
                    {% unless settings.show_arrow %}
                      "arrows": false,
                    {% endunless %}
                  })
                '
              {%- endif -%}
            >
              {% if settings.product_image_type == 'slide_img'
                and countMedia > 1
                and class_slide != 'recommendations'
              %}
                <div class="splide__track overflow-hidden max-h-full h-full w-full">
                  <div class="w-full h-full splide__list">
              {%- endif -%}
              {%- if card_product.featured_media -%}
                {%- capture sizes -%}
                  {%- if collage -%}
                    {%- if full_width -%}
                      (min-width: 768px) {{ columns_desktop | times: 100 | divided_by: max_columns }}vw, {{ columns_mobile | times: 100 | divided_by: min_columns_mobile }}vw
                    {%- else -%}
                      (min-width: {{ settings.page_width }}px) {{ settings.page_width | times: columns_desktop | divided_by: max_columns }}px, {{ columns_mobile | times: 100 | divided_by: min_columns_mobile }}vw
                    {%- endif -%}
                  {%- else -%}
                    (min-width: {{ settings.page_width }}px) {% if enable_desktop_slider %}{{ settings.page_width | plus: 100 | divided_by: columns_desktop }}px{% else %}calc(100vw / {{ columns_desktop }}){% endif %}, (min-width: 1024px) calc((100vw) / {{ columns_desktop }}), (min-width: 768px) calc((100vw) / 2), calc(100vw /{{ column_mobile }})
                  {%- endif -%}
                {%- endcapture -%}
                {%- if loading == 'eager' -%}
                  <div class="hidden">
                    {% assign featured_media_alt = card_product.featured_media.alt | split: '#' | first | escape %}
                    {{
                      card_product.featured_media
                      | image_url: width: 1500
                      | image_tag:
                        widths: '375, 450, 750, 900, 1100, 1500',
                        preload: true,
                        loading: 'lazy',
                        sizes: sizes,
                        alt: featured_media_alt
                    }}
                  </div>
                {%- endif -%}
                <div class="w-full{% if media_aspect_ratio != "natural"  %} h-full min-h-full{% endif %}{% if settings.product_image_type != "slide_img" or countMedia <= 1 or class_slide == 'recommendations'  %} top-0 left-0 absolute{% else %} overflow-hidden splide__slide x-splide-slide max-h-full{% endif %} duration-300 z-0 transition ease-out">
                  {% comment %}theme-check-disable ImgLazyLoading{% endcomment %}
                  <picture>
                    <img
                      srcset="
                        {{ card_product.featured_media | image_url: width: 450 }} 450w,
                        {{ card_product.featured_media | image_url: width: 750 }} 750w,
                        {{ card_product.featured_media | image_url: width: 900 }} 900w,
                        {{ card_product.featured_media | image_url: width: 1100 }} 1100w,
                        {{ card_product.featured_media | image_url: width: 1500 }} 1500w
                        {% if card_product.featured_media.width %},{{ card_product.featured_media | image_url }} {{ card_product.featured_media.width }}w{% endif %}
                      "
                      src="{{ card_product.featured_media | image_url: width: 1500 }}"
                      sizes="{{ sizes }}"
                      alt="{{ card_product.featured_media.alt | split: "#" | first | escape }}"
                      class="w-full preview-img motion-reduce aspect-{{ media_aspect_ratio }} relative{% if media_aspect_ratio != "natural" %} h-full min-h-full{% endif %} object-contain{% if card_product.media[1] != nil and settings.product_image_type == 'hover_to_reveal_second_image' %} image-first-hover opacity-100 group-hover:opacity-0{% elsif settings.product_image_type != 'slide_img' %} image-hover{%- endif -%}"
                      loading="{{ loading | default: 'lazy' }}"
                      width="{{ card_product.featured_media.width }}"
                      height="{{ card_product.featured_media.height }}"
                    >
                  </picture>
                  {% comment %}theme-check-enable ImgLazyLoading{% endcomment %}
                </div>
                {%- if card_product.media[1] != null -%}
                  {%- if settings.product_image_type == 'hover_to_reveal_second_image' -%}
                    <div class="w-full h-full top-0 left-0 absolute duration-300 z-0 transition ease-out">
                      <picture>
                        <img
                          srcset="
                            {{ card_product.media[1] | image_url: width: 450 }} 450w,
                            {{ card_product.media[1] | image_url: width: 750 }} 750w,
                            {{ card_product.media[1] | image_url: width: 900 }} 900w,
                            {{ card_product.media[1] | image_url: width: 1100 }} 1100w,
                            {{ card_product.media[1] | image_url: width: 1500 }} 1500w
                            {% if card_product.media[1].width %},{{ card_product.media[1] | image_url }} {{ card_product.media[1].width }}w{% endif %}
                          "
                          src="{{ card_product.media[1] | image_url: width: 1500 }}"
                          sizes="{{ sizes }}"
                          alt="{{ card_product.media[1].alt | split: "#" | first | escape }}"
                          class="motion-reduce{% if media_aspect_ratio == "natural" %} aspect-auto{% endif %} min-w-full h-full object-contain group-hover:cursor-pointer image-second-hover opacity-0 group-hover:opacity-100"
                          loading="lazy"
                          width="{{ card_product.media[1].width }}"
                          height="{{ card_product.media[1].height }}"
                        >
                      </picture>
                    </div>
                  {%- elsif settings.product_image_type == 'slide_img'
                    and countMedia > 1
                    and class_slide != 'recommendations'
                  -%}
                    {% for media in card_product.media %}
                      {%- if forloop.index > 1 -%}
                        <div class="w-full splide__slide x-splide-slide duration-300 z-0 transition ease-out{% if media_aspect_ratio != "natural"  %} h-full min-h-full{% endif %}">
                          <picture>
                            <img
                              srcset="
                                {{ media | image_url: width: 450 }} 450w,
                                {{ media | image_url: width: 750 }} 750w,
                                {{ media | image_url: width: 900 }} 900w,
                                {{ media | image_url: width: 1100 }} 1100w,
                                {{ media | image_url: width: 1500 }} 1500w
                                {% if media.width %},{{ media | image_url }} {{ media.width }}w{% endif %}
                              "
                              src="{{ media | image_url: width: 1500 }}"
                              sizes="{{ sizes }}"
                              alt="{{ media.alt | split: "#" | first | escape }}"
                              class="w-full motion-reduce{% if media_aspect_ratio == "natural" %} aspect-auto{% else %} h-full min-h-full{% endif %} object-contain"
                              loading="lazy"
                              width="{{ media.width }}"
                              height="{{ media.height }}"
                            >
                          </picture>
                        </div>
                      {% endif %}
                    {% endfor %}
                  {%- endif -%}
                {%- endif -%}
              {%- else -%}
                <div class="bg-[#c9c9c9] flex justify-center{% unless media_aspect_ratio == "natural" %} absolute{% endunless %} top-0 left-0 w-full h-full items-center">
                  {%- render 'icon-placeholder', icon: 'icon-product', class: 'w-full h-full' %}
                </div>
              {%- endif -%}
              {% if settings.product_image_type == 'slide_img'
                and countMedia > 1
                and class_slide != 'recommendations'
              %}
                </div>
                </div>
                {%- if settings.show_arrow -%}
                  <div class="splide__arrows lg:inline-flex hidden">
                    <button
                      @click.prevent="prev = true"
                      class="text-[rgba(var(--colors-transition-arrows))] splide__arrow splide__arrow--prev disable-effect-hover hidden group-hover:lg:block absolute none_border z-30 w-11 h-1/2 rounded-full after:text-[20px] pl-4.5 pr-4 top-1/2 -translate-y-1/2 duration-100 opacity-60 hover:opacity-100 disabled:opacity-40 disabled:cursor-not-allowed rtl:right-0 rtl:rotate-0 rtl:left-auto left-0 rotate-180"
                      aria-label="previous slide"
                    >
                      {% render 'icon-alls', icon: 'icon-transition-arrow' %}
                    </button>
                    <button
                      @click.prevent="next = true"
                      class="text-[rgba(var(--colors-transition-arrows))] splide__arrow splide__arrow--next disable-effect-hover hidden group-hover:lg:block absolute none_border z-30 w-11 h-1/2 rounded-full after:text-[20px] pl-4.5 pr-4 top-1/2 -translate-y-1/2 duration-100 opacity-60 hover:opacity-100 disabled:opacity-40 disabled:cursor-not-allowed rtl:left-0 rtl:right-auto right-0 rtl:rotate-180"
                      aria-label="next slide"
                    >
                      {% render 'icon-alls', icon: 'icon-transition-arrow' %}
                    </button>
                  </div>
                {%- endif -%}
              {%- endif -%}
            </div>
          </div>
        </div>
      </div>
    </a>

    {% comment %} handle select product variant {% endcomment %}
    {%- liquid
      assign product_form_id = 'product-form-' | append: section_id
      if section.settings.button_atb_label != blank
        assign button_atb_label = section.settings.button_atb_label
      else
        assign button_atb_label = 'sections.product-bundle.add_to_bundle' | t
      endif
    -%}
    <div
      id="bundle-product-{{ card_product.id }}"
      class="bundle-product grow"
      x-data="xProductItemBundle('{{ section_id }}', '{{ button_atb_label }}', '{{ section.id }}', '{{ card_product.url }}', '{{ card_product.id }}',{% if card_product.selected_or_first_available_variant.available == false or card_product.has_only_default_variant %} false{% else %} true{% endif %}, {{ each_product_can_added_to_bundle_once }})"
    >
      <div
        id="x-product-template-{{ card_product.id }}-{{ section_id }}"
        class="flex flex-col h-full justify-between"
      >
        <div class="card-info pt-4 lg:pt-6 w-full block text-{{ settings.info_alignment_card_product }}">
          <div id="featured-image-{{ section_id }}" class="featured-image hidden">
            {%- if card_product.featured_media -%}{{ card_product.featured_media | image_url: width: 375 }}{%- endif -%}
          </div>
          <div class="w-full">
            <div class="collection-title mb-3 leading-tight">
              <a
                {% if card_product.has_only_default_variant %}
                  href="{{ card_product.url }}"
                {% else %}
                  :href="`${productUrl}`"
                {% endif %}
                id="product-name-{{ section_id }}"
                class="product-name text-[rgba(var(--colors-heading))] hover:text-[rgba(var(--colors-text-link))] cursor-pointer duration-200 p-break-words"
                @click='$store.xCustomerEvent.fire("product_selected", $el)'
                x-customer-event-data="{{ dataForCustomerEvent | escape }}"
              >
                {{ card_product.title | escape }}
              </a>
            </div>
          </div>
          {%- if card_product.selected_or_first_available_variant.available -%}
            {%- unless card_product.has_only_default_variant -%}
              <div class="text-{{ settings.info_alignment_card_product }}">
                <div class="price" role="status" :class="isSelect && 'hidden'">
                  {% render 'price', product: card_product %}
                </div>
                <div id="price-{{ section.id }}-{{ block_id }}" x-cloak class="price" role="status" x-show="isSelect">
                  {% render 'price', product: card_product, use_variant: true %}
                </div>
                <div
                  class="x-variants-data"
                  x-data="xVariantSelect('{{ section_id }}', false, '{{ 'products.product.unavailable' | t }}', '{{ card_product.url }}', '{{ card_product.id }}', false, false, true, '{{ section.id }}')"
                  {% if each_product_can_added_to_bundle_once %}
                    x-effect="setVariantSelected($el, currentVariant)"
                  {% endif %}
                >
                  <script type="application/json">
                    {{ card_product.variants | json }}
                  </script>
                  <div
                    id="current-variant-{{ section_id }}"
                    class="current-variant hidden"
                    x-text="currentVariant && JSON.stringify(currentVariant)"
                  ></div>
                  <div
                    id="variant-update-{{ section_id }}"
                    class="variant-update-{{ section_id }} mt-3"
                  >
                    {%- for option in card_product.options_with_values -%}
                      {%- assign variant_key = 'option' | append: option.position -%}
                      {%- assign option_index = forloop.index | minus: 1 -%}
                      <fieldset
                        id="Option-{{ section_id }}-{{ forloop.index0 }}"
                        class="product-form__input pl-0{% unless forloop.last %} pb-2{% endunless %} quick-view:pb-2 eurus gap-x-2"
                      >
                        <div class="mb-2">{{ option.name }}</div>
                        <div class="inline-flex gap-x-1 flex-wrap justify-{{ settings.info_alignment_card_product }}">
                          {%- liquid
                            assign variants_available_arr = card_product.variants | map: 'available'
                            assign variants_option1_arr = card_product.variants | map: 'option1'
                            assign variants_option2_arr = card_product.variants | map: 'option2'
                            assign variants_option3_arr = card_product.variants | map: 'option3'

                            assign color_option_values = settings.color_option_values | newline_to_br | strip_newlines | split: '<br />'
                            assign text_option_values = settings.text_option_values | newline_to_br | strip_newlines | split: '<br />'

                            if settings.products_color_swatches_style == 'round'
                              assign classSwatch = ' rounded-full before:rounded-full'
                            elsif settings.edges_type == 'rounded_corners'
                              assign classSwatch = ' rounded-md overflow-hidden'
                            endif
                          -%}
                          {%- for value in option.values -%}
                            {%- liquid
                              assign preview_image = blank
                              assign variant_value = card_product.variants | where: variant_key, value | first
                              if variant_value.featured_media.preview_image
                                assign preview_image = variant_value.featured_media.preview_image
                              elsif card_product.featured_media
                                assign preview_image = card_product.featured_media
                              endif
                              assign option_disabled = true

                              for option1_name in variants_option1_arr
                                case option.position
                                  when 1
                                    if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                      assign option_disabled = false
                                    endif
                                  when 2
                                    if option1_name == card_product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                      assign option_disabled = false
                                    endif
                                  when 3
                                    if option1_name == card_product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == card_product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                      assign option_disabled = false
                                    endif
                                endcase
                              endfor
                            -%}

                            {%- liquid
                              assign color_custom = ''
                              assign swatch_image = false
                              assign color_value = ''
                              for color_option_value in color_option_values reversed
                                assign option_key = color_option_value | split: ':' | first
                                assign option_value = color_option_value | split: ':' | last | strip

                                if option_key == value and option_value contains '.'
                                  assign color_custom = option_key
                                  assign swatch_image = true
                                  assign color_value = option_value
                                  break
                                endif
                                assign multiColors = option_value | remove_first: '#' | split: '#'
                                if option_key == value
                                  assign color_custom = option_key
                                  assign color_value = option_value
                                  break
                                endif
                              endfor
                            -%}
                            {% if preview_image and settings.replace_color_with_variant_images %}
                              {%- style %}
                                .color-watches.variant-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}:before {
                                   background-image: url({{ preview_image | image_url: width: 100, height: 100 }});
                                 }
                              {%- endstyle %}
                            {% elsif color_custom != '' %}
                              {%- style %}
                                {% if swatch_image %}
                                  [data-swatch="{{ color_custom }}"]:before {
                                    background-image: url({{ color_value | file_img_url: "100x100" }});
                                  }
                                {% elsif multiColors.size == 3 %}
                                  [data-swatch="{{ color_custom }}"]:before {
                                    background: linear-gradient(45deg, {{ '#' | append: multiColors[0] }}, {{ '#' | append: multiColors[0] }} 33.3%, {{ '#' | append: multiColors[1] }} 33.3%, {{ '#' | append: multiColors[1] }} 66.6%, {{ '#' | append: multiColors[2] }} 66.6%, {{ '#' | append: multiColors[2] }});
                                  }
                                {% elsif multiColors.size == 2 %}
                                  [data-swatch="{{ color_custom }}"]:before {
                                    background: linear-gradient(45deg, {{ '#' | append: multiColors[0] }}, {{ '#' | append: multiColors[0] }} 50%, {{ '#' | append: multiColors[1] }} 50%, {{ '#' | append: multiColors[1] }});
                                  }
                                {% else %}
                                  [data-swatch="{{ color_custom }}"]:before {
                                    background: {{ color_value }};
                                  }
                                {% endif %}
                              {%- endstyle %}
                            {% endif %}
                            <input
                              id="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                              setion-id="{{ section_id }}"
                              option-pos="{{ option.position }}"
                              forloop="{{ forloop.index0 }}"
                              type="radio"
                              name="{{ option.name }}-{{ block_id }}"
                              value="{{ value | escape | replace: '&lt;', '\u003c' | replace: '&gt;', '\u003e' }}"
                              form="{{ product_form_id }}"
                              class="absolute opacity-0 h-1 w-1 input-radio"
                              {% if option_index > 0 %}
                                :class="{'disabled': isSelect && (!currentAvailableOptions[{{ option_index }}] || !currentAvailableOptions[{{ option_index }}].includes(`{{ value }}`))}"
                              {% elsif option_disabled %}
                                :class="{'disabled': isSelect }"
                              {% endif %}
                              x-model="options[{{ option_index }}]"
                              aria-label="{{ value | escape }}"
                            >
                            {% if settings.color_option_name contains option.name %}
                              <label
                                class="color-watches variant-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }} cursor-pointer mb-2 inline-flex ml-0.5 rtl:mr-0.5 w-[22px] h-[22px] border relative{{ classSwatch }}"
                                for="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                                data-swatch="{{ color_custom }}"
                                {% if preview_image == blank
                                  or settings.replace_color_with_variant_images == false
                                  and color_custom == ''
                                %}
                                  style="background: {{ value | split: ' ' | last | handle }};"
                                {% endif %}
                                {% if settings.swatches_type == 'both_text_and_color'
                                  and card_product.options_with_values.size > 1
                                %}
                                  x-on:click="$store.xPreviewColorSwatch.onChangeVariant($el,'{{ card_product.url | split: "?" | first }}', '{{ preview_image | image_url | default: "" }}', '{{ variant_value.id | default: "" }}', '{{ section_id }}')"
                                {% else %}
                                  x-on:click="$store.xPreviewColorSwatch.updateImage($el,'{{ card_product.url | split: "?" | first }}', '{{ preview_image | image_url | default: "" }}', {{ variant_value.id }})"
                                {% endif %}
                                tabindex="0"
                                aria-label="{{ value | escape }}"
                              >
                                <span class="h-full w-full color-watches-disable"></span>
                              </label>
                            {% else %}
                              {% liquid
                                assign text_custom = blank
                                assign text_value = ''
                                for text_option_value in text_option_values
                                  assign option_key = text_option_value | split: ':' | first
                                  assign option_value = text_option_value | split: ':' | last

                                  if option_key == value
                                    assign text_custom = option_key
                                    assign text_value = option_value
                                    break
                                  endif
                                endfor
                              %}
                              <label
                                class="
                                  flex items-center outline-none font-medium text-[13px] cursor-pointer mb-2 pl-3.5 pr-3.5 pt-1.5 pb-1.5 border bg-[rgba(var(--background-color),1)]
                                  {% if rounded_corner %} rounded-md{% endif %}
                                "
                                for="{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}-{{ card_product.id }}"
                                {% if settings.swatches_type == 'both_text_and_color'
                                  and card_product.options_with_values.size > 1
                                %}
                                  x-on:click="$store.xPreviewColorSwatch.onChangeVariant($el,'{{ card_product.url | split: "?" | first }}', '{{ preview_image | image_url | default: "" }}', '{{ variant_value.id | default: "" }}', '{{ section_id }}')"
                                {% else %}
                                  x-on:click="$store.xPreviewColorSwatch.updateImage($el,'{{ card_product.url | split: "?" | first }}', '{{ preview_image | image_url | default: "" }}', {{ variant_value.id }})"
                                {% endif %}
                              >
                                <span class="p-break-words">
                                  {% if text_custom != blank -%}
                                    {{- text_value | escape -}}
                                  {%- else -%}
                                    {{- value | escape -}}
                                  {%- endif %}
                                </span>
                              </label>
                            {% endif %}
                          {%- endfor -%}
                        </div>
                      </fieldset>
                    {%- endfor -%}
                  </div>
                </div>
              </div>
            {%- else -%}
              <div
                x-init="
                  document.addEventListener('eurus:cart:items-changed', () => {
                    Alpine.store('xUpdateVariantQuanity').updateQuantity('{{ section.id }}', '{{ card_product.url }}');
                  });
                "
              ></div>
              <div id="current-variant-{{ section_id }}" class="current-variant hidden">
                {{ card_product.selected_or_first_available_variant.id }}
              </div>
              <div id="current-price-{{ section_id }}" class="current-price hidden">{{ card_product.price }}</div>
              <div class="price" role="status" :class="isSelect && 'hidden'">
                {% render 'price', product: card_product %}
              </div>
            {%- endunless -%}
          {%- endif -%}
        </div>

        <div class="card-info pb-6 md:pb-7{% unless card_product.selected_or_first_available_variant.available %} hidden{% endunless %}">
          {%- form 'product',
            card_product,
            id: product_form_id,
            class: 'form h-full',
            novalidate: 'novalidate',
            data-type: 'add-to-cart-form',
            x-ref: 'product_form'
          -%}
            <input type="hidden" name="id" value="{{ card_product.selected_or_first_available_variant.id }}">
            <button
              type="submit"
              name="add"
              id="x-atc-button-{{ section_id }}"
              @click.prevent="addToBundle($el, '{{ card_product.id }}', '{{ card_product.url }}', {% if card_product.selected_or_first_available_variant.available == false or card_product.has_only_default_variant %} false{% else %} true{% endif %}); setDisableSelectProduct($el);"
              class="button button--{{ section.id }} add_to_cart_button x-atb-button w-full button-outline text-center inline-block border empty:hidden pl-6 pr-6 pt-2.5 pb-2.5 md:pt-3 md:pb-3 mt-3 md:mt-5 leading-normal disabled:cursor-not-allowed disabled:opacity-60"
              {% if card_product.selected_or_first_available_variant.available == false %}
                disabled
              {% else %}
                {%- unless card_product.has_only_default_variant -%}
                  disabled
                {% endunless %}
              {% endif %}
            >
              <span
                class="x-atc-text"
                {% unless card_product.has_only_default_variant %}
                  x-show="isSelect" x-cloak
                {% endunless %}
              >
                {%- if card_product.selected_or_first_available_variant.available -%}
                  {%- unless card_product.has_only_default_variant -%}
                    {%- assign button_atb_label = 'sections.product-bundle.choose_option' | t -%}
                  {%- endunless -%}
                  <span class="flex items-center justify-center">
                    {{ button_atb_label }}
                  </span>
                {%- else -%}
                  {{ 'products.product.sold_out' | t }}
                {%- endif -%}
              </span>
              {% unless card_product.has_only_default_variant %}
                <span :class="isSelect && 'hidden'">
                  {{ 'sections.product-bundle.choose_option' | t }}
                </span>
              {% endunless %}
            </button>
          {%- endform -%}
        </div>
      </div>
    </div>
  </div>
{% else %}
  <div class="block">
    <div class="md:w-full">
      <div class="{% unless media_aspect_ratio == "natural" %} h-0 relative pb-[{{ ratio | times: 100.0 }}%]{% endunless %}{% if show_rounded_image %} rounded-[10px] overflow-hidden{% endif %}">
        <div class="bg-[#c9c9c9] flex justify-center{% unless media_aspect_ratio == "natural" %} absolute{% endunless %} top-0 left-0 w-full h-full items-center">
          {%- render 'icon-placeholder', icon: 'icon-product', class: 'w-full h-full' %}
        </div>
      </div>
    </div>
    <div class="pt-4 lg:pt-6 pb-4 md:w-full text-{{ settings.info_alignment_card_product }} flex items-center md:block md:justify-{{ settings.info_alignment_card_product }}">
      <div>
        <p class="collection-title text-[rgba(var(--colors-heading))] mb-3 cursor-pointer duration-200 p-break-words leading-tight">
          <span class="h4">{{ 'onboarding.product_title' | t }}</span>
        </p>
        <div>{% render 'price' %}</div>
      </div>
    </div>
  </div>
{% endif %}
